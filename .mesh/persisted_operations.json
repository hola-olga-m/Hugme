{
  "174d131fe089d421ee32d764efa775b9755d421c7bfb40298c772149d2c354fa": "query publicMoods($first: Int, $offset: Int) {\n  allMoods(first: $first, offset: $offset, condition: {isPublic: true}) {\n    nodes {\n      id\n      score\n      note\n      createdAt\n      userByUserId {\n        id\n        name\n        username\n        avatarUrl\n      }\n    }\n  }\n}\n\nquery userMoods($userId: UUID, $first: Int, $offset: Int) {\n  allMoods(first: $first, offset: $offset, condition: {userId: $userId}) {\n    nodes {\n      id\n      score\n      note\n      createdAt\n      isPublic\n    }\n  }\n}\n\nquery moodStreak($userId: UUID!) {\n  userById(id: $userId) {\n    id\n    moodsByUserId {\n      totalCount\n    }\n  }\n}\n\nquery communityHugRequests($first: Int, $offset: Int) {\n  allHugRequests(first: $first, offset: $offset) {\n    nodes {\n      id\n      message\n      createdAt\n      userByRequesterId {\n        id\n        name\n        username\n        avatarUrl\n      }\n    }\n  }\n}\n\nquery receivedHugs($userId: UUID!, $first: Int, $offset: Int) {\n  allHugs(first: $first, offset: $offset, condition: {recipientId: $userId}) {\n    nodes {\n      id\n      message\n      createdAt\n      isRead\n      userBySenderId {\n        id\n        name\n        username\n        avatarUrl\n      }\n    }\n  }\n}\n\nquery sentHugs($userId: UUID!, $first: Int, $offset: Int) {\n  allHugs(first: $first, offset: $offset, condition: {senderId: $userId}) {\n    nodes {\n      id\n      message\n      createdAt\n      userByRecipientId {\n        id\n        name\n        username\n        avatarUrl\n      }\n    }\n  }\n}\n\nmutation createMood($input: CreateMoodInput!) {\n  createMood(input: $input) {\n    mood {\n      id\n      score\n      note\n      createdAt\n      isPublic\n    }\n  }\n}\n\nmutation sendHug($input: CreateHugInput!) {\n  createHug(input: $input) {\n    hug {\n      id\n      message\n      createdAt\n      userBySenderId {\n        id\n        name\n      }\n      userByRecipientId {\n        id\n        name\n      }\n    }\n  }\n}\n\nmutation createHugRequest($input: CreateHugRequestInput!) {\n  createHugRequest(input: $input) {\n    hugRequest {\n      id\n      message\n      createdAt\n      userByRequesterId {\n        id\n        name\n      }\n    }\n  }\n}\n\nmutation updateHugRequest($input: UpdateHugRequestInput!) {\n  updateHugRequest(input: $input) {\n    hugRequest {\n      id\n      status\n      createdAt\n    }\n  }\n}\n\nquery pendingHugRequests($userId: UUID!) {\n  allHugRequests(condition: {requesterId: $userId, status: \"PENDING\"}) {\n    nodes {\n      id\n      message\n      createdAt\n      userByRequesterId {\n        id\n        name\n        username\n      }\n    }\n  }\n}"
}