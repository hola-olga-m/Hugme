{"version":3,"file":"MeshSdkDemo-08cded48.js","sources":["../../src/components/LanguageSwitcher.jsx","../../src/layouts/MainLayout.jsx","../../src/components/examples/MeshSdkExample.jsx","../../src/pages/MeshSdkDemo.jsx"],"sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\n/**\n * Language Switcher Component\n * This component provides a dropdown to change the app language\n */\nconst LanguageSwitcher = () => {\n  const { i18n } = useTranslation();\n  \n  // Available languages\n  const languages = [\n    { code: 'en', name: 'English' },\n    { code: 'ru', name: 'Русский' }\n  ];\n  \n  // Current language\n  const currentLanguage = i18n.language || 'en';\n  \n  // Handle language change\n  const handleLanguageChange = (e) => {\n    const langCode = e.target.value;\n    i18n.changeLanguage(langCode);\n    \n    // Save language preference to localStorage\n    localStorage.setItem('preferredLanguage', langCode);\n    \n    // Optional: Call API to save user preference if authenticated\n  };\n  \n  return (\n    <div className=\"language-switcher\">\n      <select \n        value={currentLanguage} \n        onChange={handleLanguageChange}\n        aria-label=\"Select language\"\n      >\n        {languages.map((lang) => (\n          <option key={lang.code} value={lang.code}>\n            {lang.name}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default LanguageSwitcher;","import { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useTranslation } from 'react-i18next';\nimport LanguageSwitcher from '../components/LanguageSwitcher';\n\nfunction MainLayout({ children }) {\n  const { t } = useTranslation();\n  const { currentUser, logout, isAuthenticated } = useAuth();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // Close mobile menu when location changes\n  useEffect(() => {\n    setIsMenuOpen(false);\n    setIsDropdownOpen(false);\n  }, [location]);\n\n  // Handle menu toggle\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  // Handle dropdown toggle\n  const toggleDropdown = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n  };\n\n  // Handle logout\n  const handleLogout = () => {\n    logout();\n    navigate('/');\n  };\n\n  // Get shortened name for avatar\n  const getInitials = (name) => {\n    if (!name) return '?';\n    \n    const nameParts = name.split(' ');\n    if (nameParts.length > 1) {\n      return `${nameParts[0][0]}${nameParts[1][0]}`.toUpperCase();\n    }\n    \n    return name.substring(0, 2).toUpperCase();\n  };\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"app-header\">\n        <div className=\"header-content\">\n          <div className=\"header-left\">\n            <Link to=\"/\" className=\"logo\">\n              <span className=\"logo-icon\">🤗</span>\n              <span className=\"logo-text\">HugMeNow</span>\n            </Link>\n          </div>\n          \n          {isAuthenticated() && (\n            <nav className={`main-nav ${isMenuOpen ? 'open' : ''}`}>\n              <ul className=\"nav-list\">\n                <li className=\"nav-item\">\n                  <Link \n                    to=\"/dashboard\" \n                    className={location.pathname === '/dashboard' ? 'active' : ''}\n                  >\n                    {t('navigation.dashboard')}\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link \n                    to=\"/mood-tracker\" \n                    className={location.pathname === '/mood-tracker' ? 'active' : ''}\n                  >\n                    {t('navigation.moodTracker')}\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link \n                    to=\"/hug-center\" \n                    className={location.pathname === '/hug-center' ? 'active' : ''}\n                  >\n                    {t('navigation.hugCenter')}\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link \n                    to=\"/hug-gallery\" \n                    className={location.pathname === '/hug-gallery' ? 'active' : ''}\n                  >\n                    {t('nav.hugGallery')}\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link \n                    to=\"/mood-history\" \n                    className={location.pathname === '/mood-history' ? 'active' : ''}\n                  >\n                    {t('moodTracker.moodHistory')}\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link \n                    to=\"/mesh-sdk-demo\" \n                    className={location.pathname === '/mesh-sdk-demo' ? 'active' : ''}\n                  >\n                    Mesh SDK Demo\n                  </Link>\n                </li>\n              </ul>\n            </nav>\n          )}\n          \n          <div className=\"header-right\">\n            {isAuthenticated() ? (\n              <div className=\"user-menu\">\n                <button \n                  className=\"user-avatar\"\n                  onClick={toggleDropdown}\n                  aria-label=\"User menu\"\n                >\n                  {currentUser?.avatarUrl ? (\n                    <img src={currentUser.avatarUrl} alt={currentUser.name || currentUser.username} />\n                  ) : (\n                    <div className=\"avatar-initials\">\n                      {getInitials(currentUser?.name || currentUser?.username)}\n                    </div>\n                  )}\n                </button>\n                \n                {isDropdownOpen && (\n                  <div className=\"dropdown-menu\">\n                    <div className=\"dropdown-header\">\n                      <p className=\"user-name\">{currentUser?.name || currentUser?.username}</p>\n                      <p className=\"user-email\">{currentUser?.email}</p>\n                    </div>\n                    <ul className=\"dropdown-list\">\n                      <li className=\"dropdown-item\">\n                        <Link to=\"/profile\">{t('navigation.profile')}</Link>\n                      </li>\n                      <li className=\"dropdown-item\">\n                        <button onClick={handleLogout}>{t('navigation.logout')}</button>\n                      </li>\n                    </ul>\n                  </div>\n                )}\n              </div>\n            ) : (\n              <div className=\"auth-buttons\">\n                <Link to=\"/login\" className=\"btn btn-outline\">{t('navigation.login')}</Link>\n                <Link to=\"/register\" className=\"btn btn-primary\">{t('auth.signUp')}</Link>\n              </div>\n            )}\n            \n            <LanguageSwitcher />\n            \n            <button \n              className={`menu-toggle ${isMenuOpen ? 'open' : ''}`}\n              onClick={toggleMenu}\n              aria-label=\"Mobile menu\"\n            >\n              <span className=\"menu-toggle-bar\"></span>\n              <span className=\"menu-toggle-bar\"></span>\n              <span className=\"menu-toggle-bar\"></span>\n            </button>\n          </div>\n        </div>\n      </header>\n      \n      <main className=\"app-main\">\n        {children}\n      </main>\n      \n      <footer className=\"app-footer\">\n        <div className=\"footer-content\">\n          <div className=\"footer-left\">\n            <div className=\"footer-logo\">\n              <span className=\"logo-icon\">🤗</span>\n              <span className=\"logo-text\">HugMeNow</span>\n            </div>\n            <p className=\"footer-tagline\">\n              Supporting emotional wellness with virtual hugs and mood tracking\n            </p>\n          </div>\n          <div className=\"footer-right\">\n            <div className=\"footer-links\">\n              <div className=\"footer-links-column\">\n                <h4>Platform</h4>\n                <ul>\n                  <li><Link to=\"/\">{t('navigation.home')}</Link></li>\n                  <li><Link to=\"/dashboard\">{t('navigation.dashboard')}</Link></li>\n                  <li><Link to=\"/mood-tracker\">{t('navigation.moodTracker')}</Link></li>\n                  <li><Link to=\"/hug-center\">{t('navigation.hugCenter')}</Link></li>\n                  <li><Link to=\"/hug-gallery\">{t('nav.hugGallery')}</Link></li>\n                  <li><Link to=\"/mesh-sdk-demo\">Mesh SDK Demo</Link></li>\n                </ul>\n              </div>\n              <div className=\"footer-links-column\">\n                <h4>Resources</h4>\n                <ul>\n                  <li><a href=\"#\">Help Center</a></li>\n                  <li><a href=\"#\">Privacy Policy</a></li>\n                  <li><a href=\"#\">Terms of Service</a></li>\n                  <li><a href=\"#\">Contact Us</a></li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"footer-bottom\">\n          <p>&copy; {new Date().getFullYear()} HugMeNow. All rights reserved.</p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default MainLayout;","import React, { useState, useEffect } from 'react';\nimport { useMeshSdk } from '../../hooks/useMeshSdk';\n\n/**\n * Example component demonstrating how to use the Mesh SDK\n */\nfunction MeshSdkExample() {\n  const [moods, setMoods] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newMood, setNewMood] = useState({ mood: 'HAPPY', intensity: 7, note: '', isPublic: true });\n  \n  // Get the Mesh SDK hook\n  const sdk = useMeshSdk();\n  \n  // Load moods on component mount\n  useEffect(() => {\n    async function loadMoods() {\n      try {\n        setLoading(true);\n        \n        // Fetch public moods using the SDK\n        const publicMoods = await sdk.getPublicMoods();\n        \n        if (publicMoods) {\n          setMoods(publicMoods);\n        }\n      } catch (err) {\n        console.error('Error fetching moods:', err);\n        setError(err.message || 'Failed to load moods');\n      } finally {\n        setLoading(false);\n      }\n    }\n    \n    loadMoods();\n  }, [sdk]);\n  \n  // Handle creating a new mood\n  const handleCreateMood = async (e) => {\n    e.preventDefault();\n    \n    try {\n      setLoading(true);\n      \n      // Create a new mood entry using the SDK\n      const createdMood = await sdk.createMoodEntry(newMood);\n      \n      if (createdMood) {\n        // Refresh the moods list\n        const publicMoods = await sdk.getPublicMoods();\n        setMoods(publicMoods);\n        \n        // Reset the form\n        setNewMood({ mood: 'HAPPY', intensity: 7, note: '', isPublic: true });\n      }\n    } catch (err) {\n      console.error('Error creating mood:', err);\n      setError(err.message || 'Failed to create mood');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Handle input changes\n  const handleInputChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setNewMood(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n  };\n  \n  if (loading && moods.length === 0) {\n    return <div className=\"loading\">Loading moods...</div>;\n  }\n  \n  if (error) {\n    return <div className=\"error\">Error: {error}</div>;\n  }\n  \n  return (\n    <div className=\"mesh-sdk-example\">\n      <h2>Mesh SDK Example</h2>\n      \n      {/* Create Mood Form */}\n      <form onSubmit={handleCreateMood} className=\"create-mood-form\">\n        <h3>Create a New Mood</h3>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"mood\">Mood:</label>\n          <select \n            id=\"mood\" \n            name=\"mood\" \n            value={newMood.mood} \n            onChange={handleInputChange}\n          >\n            <option value=\"HAPPY\">Happy</option>\n            <option value=\"EXCITED\">Excited</option>\n            <option value=\"CALM\">Calm</option>\n            <option value=\"GRATEFUL\">Grateful</option>\n            <option value=\"PEACEFUL\">Peaceful</option>\n          </select>\n        </div>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"intensity\">Intensity (1-10):</label>\n          <input \n            type=\"number\" \n            id=\"intensity\" \n            name=\"intensity\" \n            min=\"1\" \n            max=\"10\" \n            value={newMood.intensity} \n            onChange={handleInputChange}\n          />\n        </div>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"note\">Note:</label>\n          <textarea \n            id=\"note\" \n            name=\"note\" \n            value={newMood.note} \n            onChange={handleInputChange}\n            placeholder=\"What's making you feel this way?\"\n          />\n        </div>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"isPublic\">\n            <input \n              type=\"checkbox\" \n              id=\"isPublic\" \n              name=\"isPublic\" \n              checked={newMood.isPublic} \n              onChange={handleInputChange}\n            />\n            Make this mood public\n          </label>\n        </div>\n        \n        <button type=\"submit\" disabled={loading}>\n          {loading ? 'Creating...' : 'Create Mood'}\n        </button>\n      </form>\n      \n      {/* Display Public Moods */}\n      <div className=\"moods-list\">\n        <h3>Public Moods</h3>\n        \n        {moods.length === 0 ? (\n          <p>No public moods found.</p>\n        ) : (\n          <ul>\n            {moods.map(mood => (\n              <li key={mood.id} className={`mood-item mood-${mood.mood.toLowerCase()}`}>\n                <div className=\"mood-header\">\n                  <strong>{mood.userId ? `User ${mood.userId}` : 'Anonymous'}</strong>\n                  <span className=\"mood-intensity\">{mood.intensity}/10</span>\n                </div>\n                <div className=\"mood-content\">\n                  <span className=\"mood-type\">{mood.mood}</span>\n                  {mood.note && <p className=\"mood-note\">{mood.note}</p>}\n                </div>\n                <div className=\"mood-footer\">\n                  <span className=\"mood-date\">\n                    {new Date(mood.createdAt).toLocaleString()}\n                  </span>\n                </div>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default MeshSdkExample;","import React from 'react';\nimport MainLayout from '../layouts/MainLayout';\nimport MeshSdkExample from '../components/examples/MeshSdkExample';\n\n/**\n * Mesh SDK Demo Page\n * Demonstrates how to use the Mesh SDK for API interactions\n */\nfunction MeshSdkDemo() {\n  return (\n    <MainLayout title=\"Mesh SDK Demo\">\n      <div className=\"mesh-sdk-demo\">\n        <div className=\"page-header\">\n          <h1>Mesh SDK Demo</h1>\n          <p className=\"description\">\n            This page demonstrates how to use the GraphQL Mesh SDK to interact\n            with the HugMeNow API directly, without using the Apollo client.\n          </p>\n        </div>\n        \n        <div className=\"content-section\">\n          <MeshSdkExample />\n        </div>\n        \n        <div className=\"info-section\">\n          <h2>About Mesh SDK</h2>\n          <p>\n            GraphQL Mesh SDK provides a lightweight, type-safe way to interact with\n            the GraphQL API. It supports all the operations available in the API\n            without needing the full Apollo client infrastructure.\n          </p>\n          <h3>Benefits:</h3>\n          <ul>\n            <li>Lightweight - minimal dependencies</li>\n            <li>Type-safe - provides typed methods for all operations</li>\n            <li>Simple - straightforward promise-based API</li>\n            <li>Compatible - works with all modern JavaScript frameworks</li>\n          </ul>\n        </div>\n      </div>\n    </MainLayout>\n  );\n}\n\nexport default MeshSdkDemo;"],"names":["LanguageSwitcher","i18n","useTranslation","languages","currentLanguage","handleLanguageChange","e","langCode","jsx","lang","MainLayout","children","t","currentUser","logout","isAuthenticated","useAuth","isMenuOpen","setIsMenuOpen","useState","isDropdownOpen","setIsDropdownOpen","location","useLocation","navigate","useNavigate","useEffect","toggleMenu","toggleDropdown","handleLogout","getInitials","name","nameParts","jsxs","Link","MeshSdkExample","moods","setMoods","loading","setLoading","error","setError","newMood","setNewMood","sdk","useMeshSdk","loadMoods","publicMoods","err","handleCreateMood","handleInputChange","value","type","checked","prev","mood","MeshSdkDemo"],"mappings":"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"}