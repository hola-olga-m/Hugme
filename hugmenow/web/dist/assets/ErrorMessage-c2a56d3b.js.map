{"version":3,"file":"ErrorMessage-c2a56d3b.js","sources":["../../src/utils/errorHandling.js","../../src/components/common/ErrorMessage.jsx"],"sourcesContent":["/**\n * Utility functions for error handling and detection\n */\n\n/**\n * Detects the type of error based on error message and context\n * @param {Error} error - The error object\n * @param {Object} context - Additional context about where the error occurred\n * @returns {string} Error type: 'route', 'network', 'auth', 'data'\n */\nexport const detectErrorType = (error, context = {}) => {\n  const message = error?.message?.toLowerCase() || '';\n  \n  // Authentication errors\n  if (\n    message.includes('unauthorized') ||\n    message.includes('unauthenticated') ||\n    message.includes('auth') ||\n    message.includes('login') ||\n    message.includes('token') ||\n    error?.status === 401 ||\n    error?.statusCode === 401\n  ) {\n    return 'auth';\n  }\n  \n  // Network errors\n  if (\n    message.includes('network') ||\n    message.includes('connection') ||\n    message.includes('offline') ||\n    message.includes('failed to fetch') ||\n    error.name === 'NetworkError' ||\n    context.isNetworkError\n  ) {\n    return 'network';\n  }\n  \n  // Routing errors\n  if (\n    message.includes('not found') ||\n    message.includes('404') ||\n    message.includes('route') ||\n    error?.status === 404 ||\n    error?.statusCode === 404 ||\n    context.isRouteError\n  ) {\n    return 'route';\n  }\n  \n  // Data errors (validation, database, etc.)\n  if (\n    message.includes('validation') ||\n    message.includes('invalid') ||\n    message.includes('data') ||\n    message.includes('database') ||\n    message.includes('constraint') ||\n    context.isDataError\n  ) {\n    return 'data';\n  }\n  \n  // Default to general error\n  return 'general';\n};\n\n/**\n * Get user-friendly error message based on error type\n * @param {string} errorType - The type of error\n * @returns {Object} Object with title and description\n */\nexport const getErrorMessage = (errorType) => {\n  switch (errorType) {\n    case 'auth':\n      return {\n        title: 'Authentication Error',\n        description: 'Your session may have expired. Please log in again.'\n      };\n    case 'network':\n      return {\n        title: 'Network Error',\n        description: 'Unable to connect to the server. Please check your internet connection.'\n      };\n    case 'route':\n      return {\n        title: 'Page Not Found',\n        description: 'The page you are looking for does not exist or has been moved.'\n      };\n    case 'data':\n      return {\n        title: 'Data Error',\n        description: 'There was a problem with the data. Please try again with valid information.'\n      };\n    default:\n      return {\n        title: 'Something Went Wrong',\n        description: 'An unexpected error occurred. Please try again later.'\n      };\n  }\n};\n\n/**\n * Log error details for debugging\n * @param {Error} error - The error object\n * @param {Object} context - Additional context\n */\nexport const logError = (error, context = {}) => {\n  const errorType = detectErrorType(error, context);\n  const { title } = getErrorMessage(errorType);\n  \n  console.group(`Error: ${title}`);\n  console.error('Error object:', error);\n  console.error('Error name:', error?.name);\n  console.error('Error message:', error?.message);\n  console.error('Error stack:', error?.stack);\n  console.error('Error type:', errorType);\n  console.error('Error context:', context);\n  \n  // Log \"y is not iterable\" specific debugging info\n  if (error?.message?.includes('is not iterable')) {\n    console.error('Iterable error detected. Variable info:');\n    console.error('Variable type:', typeof error?.y);\n    console.error('Variable value:', error?.y);\n    console.error('Current component:', context?.component || 'Unknown');\n  }\n  \n  console.groupEnd();\n  \n  // Could add additional logging here, e.g. to an error tracking service\n};\n\n/**\n * Determine the appropriate redirect for an error\n * @param {string} errorType - The type of error\n * @returns {string} The path to redirect to\n */\nexport const getErrorRedirect = (errorType) => {\n  switch (errorType) {\n    case 'auth':\n      return '/login';\n    case 'route':\n      return '/';\n    case 'network':\n    case 'data':\n    default:\n      // Stay on the current page for these errors\n      return null;\n  }\n};","import React from 'react';\nimport styled from 'styled-components';\nimport { detectErrorType, getErrorMessage } from '../../utils/errorHandling';\n\nconst ErrorContainer = styled.div`\n  background-color: var(--danger-light);\n  border-left: 4px solid var(--danger-color);\n  color: var(--danger-dark);\n  padding: 1rem;\n  margin-bottom: 1.5rem;\n  border-radius: var(--border-radius);\n`;\n\nconst ErrorTitle = styled.h3`\n  margin: 0 0 0.5rem 0;\n  font-size: 1rem;\n`;\n\nconst ErrorDetails = styled.p`\n  margin: 0;\n  font-size: 0.9rem;\n`;\n\nconst ErrorAction = styled.div`\n  margin-top: 0.75rem;\n  \n  button {\n    background: none;\n    border: none;\n    color: var(--danger-dark);\n    text-decoration: underline;\n    cursor: pointer;\n    padding: 0;\n    font-size: 0.9rem;\n  }\n`;\n\nconst ErrorMessage = ({ error, context = {} }) => {\n  // Default error if none provided\n  if (!error) {\n    return (\n      <ErrorContainer>\n        <ErrorTitle>An unknown error occurred</ErrorTitle>\n        <ErrorDetails>\n          Please try again later or contact support if the problem persists.\n        </ErrorDetails>\n      </ErrorContainer>\n    );\n  }\n\n  // Parse the error\n  const errorType = detectErrorType(error, context);\n  const errorMessage = getErrorMessage(errorType);\n  \n  // Get the error message (might be nested in different ways)\n  const message = error.message || \n                 (error.graphQLErrors && error.graphQLErrors[0]?.message) || \n                 'An unknown error occurred';\n  \n  const handleRefresh = () => {\n    window.location.reload();\n  };\n  \n  return (\n    <ErrorContainer>\n      <ErrorTitle>{errorMessage.title}</ErrorTitle>\n      <ErrorDetails>\n        {errorMessage.description}\n      </ErrorDetails>\n      <ErrorDetails>\n        <strong>Details:</strong> {message}\n      </ErrorDetails>\n      <ErrorAction>\n        <button onClick={handleRefresh}>Refresh the page</button>\n      </ErrorAction>\n    </ErrorContainer>\n  );\n};\n\nexport default ErrorMessage;"],"names":["detectErrorType","error","context","message","_a","getErrorMessage","errorType","ErrorContainer","styled","ErrorTitle","ErrorDetails","ErrorAction","ErrorMessage","jsx","errorMessage","handleRefresh"],"mappings":"8CAUO,MAAMA,EAAkB,CAACC,EAAOC,EAAU,KAAO,OACtD,MAAMC,IAAUC,EAAAH,GAAA,YAAAA,EAAO,UAAP,YAAAG,EAAgB,gBAAiB,GAI/C,OAAAD,EAAQ,SAAS,cAAc,GAC/BA,EAAQ,SAAS,iBAAiB,GAClCA,EAAQ,SAAS,MAAM,GACvBA,EAAQ,SAAS,OAAO,GACxBA,EAAQ,SAAS,OAAO,IACxBF,GAAA,YAAAA,EAAO,UAAW,MAClBA,GAAA,YAAAA,EAAO,cAAe,IAEf,OAKPE,EAAQ,SAAS,SAAS,GAC1BA,EAAQ,SAAS,YAAY,GAC7BA,EAAQ,SAAS,SAAS,GAC1BA,EAAQ,SAAS,iBAAiB,GAClCF,EAAM,OAAS,gBACfC,EAAQ,eAED,UAKPC,EAAQ,SAAS,WAAW,GAC5BA,EAAQ,SAAS,KAAK,GACtBA,EAAQ,SAAS,OAAO,IACxBF,GAAA,YAAAA,EAAO,UAAW,MAClBA,GAAA,YAAAA,EAAO,cAAe,KACtBC,EAAQ,aAED,QAKPC,EAAQ,SAAS,YAAY,GAC7BA,EAAQ,SAAS,SAAS,GAC1BA,EAAQ,SAAS,MAAM,GACvBA,EAAQ,SAAS,UAAU,GAC3BA,EAAQ,SAAS,YAAY,GAC7BD,EAAQ,YAED,OAIF,SACT,EAOaG,EAAmBC,GAAc,CAC5C,OAAQA,EAAW,CACjB,IAAK,OACI,MAAA,CACL,MAAO,uBACP,YAAa,qDAAA,EAEjB,IAAK,UACI,MAAA,CACL,MAAO,gBACP,YAAa,yEAAA,EAEjB,IAAK,QACI,MAAA,CACL,MAAO,iBACP,YAAa,gEAAA,EAEjB,IAAK,OACI,MAAA,CACL,MAAO,aACP,YAAa,6EAAA,EAEjB,QACS,MAAA,CACL,MAAO,uBACP,YAAa,uDAAA,CAEnB,CACF,EC/FMC,EAAiBC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASxBC,EAAaD,EAAO;AAAA;AAAA;AAAA,EAKpBE,EAAeF,EAAO;AAAA;AAAA;AAAA,EAKtBG,EAAcH,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcrBI,EAAe,CAAC,CAAE,MAAAX,EAAO,QAAAC,EAAU,MAAS,OAEhD,GAAI,CAACD,EACH,cACGM,EACC,CAAA,SAAA,CAAAM,EAAAA,IAACJ,GAAW,SAAyB,2BAAA,CAAA,EACrCI,EAAAA,IAACH,GAAa,SAEd,oEAAA,CAAA,CACF,CAAA,CAAA,EAKE,MAAAJ,EAAYN,EAAgBC,EAAOC,CAAO,EAC1CY,EAAeT,EAAgBC,CAAS,EAGxCH,EAAUF,EAAM,SACNA,EAAM,iBAAiBG,EAAAH,EAAM,cAAc,CAAC,IAArB,YAAAG,EAAwB,UAChD,4BAETW,EAAgB,IAAM,CAC1B,OAAO,SAAS,QAAO,EAGzB,cACGR,EACC,CAAA,SAAA,CAACM,EAAAA,IAAAJ,EAAA,CAAY,WAAa,KAAM,CAAA,EAChCI,EAAAA,IAACH,EACE,CAAA,SAAAI,EAAa,WAChB,CAAA,SACCJ,EACC,CAAA,SAAA,CAAAG,EAAAA,IAAC,UAAO,SAAQ,UAAA,CAAA,EAAS,IAAEV,CAAA,EAC7B,QACCQ,EACC,CAAA,SAAAE,EAAA,IAAC,UAAO,QAASE,EAAe,4BAAgB,CAClD,CAAA,CACF,CAAA,CAAA,CAEJ"}