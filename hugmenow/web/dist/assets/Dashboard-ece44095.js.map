{"version":3,"file":"Dashboard-ece44095.js","sources":["../../src/components/LanguageSwitcher.jsx","../../src/layouts/MainLayout.jsx","../../src/pages/DashboardPage.jsx"],"sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\n/**\n * Language Switcher Component\n * This component provides a dropdown to change the app language\n */\nconst LanguageSwitcher = () => {\n  const { i18n } = useTranslation();\n  \n  // Available languages\n  const languages = [\n    { code: 'en', name: 'English' },\n    { code: 'ru', name: 'Русский' }\n  ];\n  \n  // Current language\n  const currentLanguage = i18n.language || 'en';\n  \n  // Handle language change\n  const handleLanguageChange = (e) => {\n    const langCode = e.target.value;\n    i18n.changeLanguage(langCode);\n    \n    // Save language preference to localStorage\n    localStorage.setItem('preferredLanguage', langCode);\n    \n    // Optional: Call API to save user preference if authenticated\n  };\n  \n  return (\n    <div className=\"language-switcher\">\n      <select \n        value={currentLanguage} \n        onChange={handleLanguageChange}\n        aria-label=\"Select language\"\n      >\n        {languages.map((lang) => (\n          <option key={lang.code} value={lang.code}>\n            {lang.name}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default LanguageSwitcher;","import { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { useTranslation } from 'react-i18next';\nimport LanguageSwitcher from '../components/LanguageSwitcher';\n\nfunction MainLayout({ children }) {\n  const { t } = useTranslation();\n  const { currentUser, logout, isAuthenticated } = useAuth();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // Close mobile menu when location changes\n  useEffect(() => {\n    setIsMenuOpen(false);\n    setIsDropdownOpen(false);\n  }, [location]);\n\n  // Handle menu toggle\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  // Handle dropdown toggle\n  const toggleDropdown = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n  };\n\n  // Handle logout\n  const handleLogout = () => {\n    logout();\n    navigate('/');\n  };\n\n  // Get shortened name for avatar\n  const getInitials = (name) => {\n    if (!name) return '?';\n    \n    const nameParts = name.split(' ');\n    if (nameParts.length > 1) {\n      return `${nameParts[0][0]}${nameParts[1][0]}`.toUpperCase();\n    }\n    \n    return name.substring(0, 2).toUpperCase();\n  };\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"app-header\">\n        <div className=\"header-content\">\n          <div className=\"header-left\">\n            <Link to=\"/\" className=\"logo\">\n              <span className=\"logo-icon\">🤗</span>\n              <span className=\"logo-text\">HugMeNow</span>\n            </Link>\n          </div>\n          \n          {isAuthenticated && (\n            <nav className={`main-nav ${isMenuOpen ? 'open' : ''}`}>\n              <ul className=\"nav-list\">\n                <li className=\"nav-item\">\n                  <Link \n                    to=\"/dashboard\" \n                    className={location.pathname === '/dashboard' ? 'active' : ''}\n                  >\n                    {t('navigation.dashboard')}\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link \n                    to=\"/mood-tracker\" \n                    className={location.pathname === '/mood-tracker' ? 'active' : ''}\n                  >\n                    {t('navigation.moodTracker')}\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link \n                    to=\"/hug-center\" \n                    className={location.pathname === '/hug-center' ? 'active' : ''}\n                  >\n                    {t('navigation.hugCenter')}\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link \n                    to=\"/hug-gallery\" \n                    className={location.pathname === '/hug-gallery' ? 'active' : ''}\n                  >\n                    {t('nav.hugGallery')}\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link \n                    to=\"/mood-history\" \n                    className={location.pathname === '/mood-history' ? 'active' : ''}\n                  >\n                    {t('moodTracker.moodHistory')}\n                  </Link>\n                </li>\n              </ul>\n            </nav>\n          )}\n          \n          <div className=\"header-right\">\n            {isAuthenticated ? (\n              <div className=\"user-menu\">\n                <button \n                  className=\"user-avatar\"\n                  onClick={toggleDropdown}\n                  aria-label=\"User menu\"\n                >\n                  {currentUser?.avatarUrl ? (\n                    <img src={currentUser.avatarUrl} alt={currentUser.name || currentUser.username} />\n                  ) : (\n                    <div className=\"avatar-initials\">\n                      {getInitials(currentUser?.name || currentUser?.username)}\n                    </div>\n                  )}\n                </button>\n                \n                {isDropdownOpen && (\n                  <div className=\"dropdown-menu\">\n                    <div className=\"dropdown-header\">\n                      <p className=\"user-name\">{currentUser?.name || currentUser?.username}</p>\n                      <p className=\"user-email\">{currentUser?.email}</p>\n                    </div>\n                    <ul className=\"dropdown-list\">\n                      <li className=\"dropdown-item\">\n                        <Link to=\"/profile\">{t('navigation.profile')}</Link>\n                      </li>\n                      <li className=\"dropdown-item\">\n                        <button onClick={handleLogout}>{t('navigation.logout')}</button>\n                      </li>\n                    </ul>\n                  </div>\n                )}\n              </div>\n            ) : (\n              <div className=\"auth-buttons\">\n                <Link to=\"/login\" className=\"btn btn-outline\">{t('navigation.login')}</Link>\n                <Link to=\"/register\" className=\"btn btn-primary\">{t('auth.signUp')}</Link>\n              </div>\n            )}\n            \n            <LanguageSwitcher />\n            \n            <button \n              className={`menu-toggle ${isMenuOpen ? 'open' : ''}`}\n              onClick={toggleMenu}\n              aria-label=\"Mobile menu\"\n            >\n              <span className=\"menu-toggle-bar\"></span>\n              <span className=\"menu-toggle-bar\"></span>\n              <span className=\"menu-toggle-bar\"></span>\n            </button>\n          </div>\n        </div>\n      </header>\n      \n      <main className=\"app-main\">\n        {children}\n      </main>\n      \n      <footer className=\"app-footer\">\n        <div className=\"footer-content\">\n          <div className=\"footer-left\">\n            <div className=\"footer-logo\">\n              <span className=\"logo-icon\">🤗</span>\n              <span className=\"logo-text\">HugMeNow</span>\n            </div>\n            <p className=\"footer-tagline\">\n              Supporting emotional wellness with virtual hugs and mood tracking\n            </p>\n          </div>\n          <div className=\"footer-right\">\n            <div className=\"footer-links\">\n              <div className=\"footer-links-column\">\n                <h4>Platform</h4>\n                <ul>\n                  <li><Link to=\"/\">{t('navigation.home')}</Link></li>\n                  <li><Link to=\"/dashboard\">{t('navigation.dashboard')}</Link></li>\n                  <li><Link to=\"/mood-tracker\">{t('navigation.moodTracker')}</Link></li>\n                  <li><Link to=\"/hug-center\">{t('navigation.hugCenter')}</Link></li>\n                  <li><Link to=\"/hug-gallery\">{t('nav.hugGallery')}</Link></li>\n                </ul>\n              </div>\n              <div className=\"footer-links-column\">\n                <h4>Resources</h4>\n                <ul>\n                  <li><a href=\"#\">Help Center</a></li>\n                  <li><a href=\"#\">Privacy Policy</a></li>\n                  <li><a href=\"#\">Terms of Service</a></li>\n                  <li><a href=\"#\">Contact Us</a></li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"footer-bottom\">\n          <p>&copy; {new Date().getFullYear()} HugMeNow. All rights reserved.</p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default MainLayout;","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport MainLayout from '../layouts/MainLayout';\nimport { useAuth } from '../context/AuthContext';\nimport { GET_USER_MOODS, GET_RECEIVED_HUGS, GET_PENDING_HUG_REQUESTS, GET_MOOD_STREAK } from '../graphql/queries';\nimport '../styles/dashboard.css';\n\nfunction DashboardPage() {\n  const { currentUser } = useAuth();\n  const [moodScore, setMoodScore] = useState(null);\n\n  // Fetch user's recent moods\n  const { data: moodsData, loading: moodsLoading } = useQuery(GET_USER_MOODS, {\n    variables: { limit: 7 },\n    fetchPolicy: 'network-only'\n  });\n\n  // Fetch user's unread hugs\n  const { data: hugsData, loading: hugsLoading } = useQuery(GET_RECEIVED_HUGS, {\n    variables: { unreadOnly: true },\n    fetchPolicy: 'network-only'\n  });\n\n  // Fetch pending hug requests\n  const { data: requestsData, loading: requestsLoading } = useQuery(GET_PENDING_HUG_REQUESTS, {\n    fetchPolicy: 'network-only'\n  });\n\n  // Fetch user's mood streak\n  const { data: streakData, loading: streakLoading } = useQuery(GET_MOOD_STREAK, {\n    fetchPolicy: 'network-only'\n  });\n\n  // Calculate average mood score from last 7 days\n  useEffect(() => {\n    if (moodsData && moodsData.userMoods && moodsData.userMoods.length > 0) {\n      const sum = moodsData.userMoods.reduce((acc, mood) => acc + mood.score, 0);\n      setMoodScore((sum / moodsData.userMoods.length).toFixed(1));\n    }\n  }, [moodsData]);\n\n  // Get mood emoji based on score\n  const getMoodEmoji = (score) => {\n    if (score === null) return '😶';\n    if (score >= 8) return '😁';\n    if (score >= 6) return '🙂';\n    if (score >= 4) return '😐';\n    if (score >= 2) return '😔';\n    return '😢';\n  };\n\n  // Count of unread hugs\n  const unreadHugsCount = hugsData?.receivedHugs?.length || 0;\n  \n  // Count of pending requests\n  const pendingRequestsCount = requestsData?.pendingHugRequests?.length || 0;\n\n  return (\n    <MainLayout>\n      <div className=\"dashboard-page\">\n        <div className=\"dashboard-header\">\n          <h1>Welcome, {currentUser?.name || currentUser?.username || 'Friend'}</h1>\n          <p>Here's a snapshot of your emotional wellness journey today.</p>\n        </div>\n        \n        {/* Quick Actions Section - Floating at top */}\n        <section className=\"quick-actions-section\">\n          <div className=\"actions-container\">\n            <Link to=\"/mood-tracker\" className=\"quick-action-btn mood\">\n              <span className=\"action-icon\">📊</span>\n              <span className=\"action-text\">Track Mood</span>\n            </Link>\n            \n            <Link to=\"/hug-center\" className=\"quick-action-btn hug\">\n              <span className=\"action-icon\">🤗</span>\n              <span className=\"action-text\">Send Hug</span>\n            </Link>\n            \n            <Link to=\"/hug-center/requests\" className=\"quick-action-btn request\">\n              {pendingRequestsCount > 0 && (\n                <span className=\"notification-badge\">{pendingRequestsCount}</span>\n              )}\n              <span className=\"action-icon\">✉️</span>\n              <span className=\"action-text\">Request Hug</span>\n            </Link>\n            \n            <Link to=\"/mood-history\" className=\"quick-action-btn history\">\n              <span className=\"action-icon\">📈</span>\n              <span className=\"action-text\">View History</span>\n            </Link>\n          </div>\n        </section>\n\n        <div className=\"dashboard-grid\">\n          {/* Current Mood Card */}\n          <div className=\"dashboard-card mood-summary-card\">\n            <h3>Your Mood Summary</h3>\n            <div className=\"mood-overview\">\n              <div className=\"mood-emoji\">{getMoodEmoji(moodScore)}</div>\n              <div className=\"mood-details\">\n                <div className=\"mood-score\">{moodScore || '–'}</div>\n                <div className=\"mood-label\">7-day average</div>\n              </div>\n            </div>\n            <div className=\"streak-info\">\n              {streakLoading ? (\n                <div className=\"loading-indicator\">Loading streak info...</div>\n              ) : (\n                <p>\n                  <span className=\"streak-count\">{streakData?.moodStreak || 0}</span> day\n                  {(streakData?.moodStreak !== 1) && 's'} streak\n                </p>\n              )}\n            </div>\n            <div className=\"card-actions\">\n              <Link to=\"/mood-tracker\" className=\"btn btn-primary\">\n                Track Today\n              </Link>\n              <Link to=\"/mood-history\" className=\"btn btn-outline-primary\">\n                View History\n              </Link>\n            </div>\n          </div>\n\n          {/* Hugs Card */}\n          <div className=\"dashboard-card hugs-card\">\n            <h3>Unread Hugs</h3>\n            {hugsLoading ? (\n              <div className=\"loading-indicator\">Loading hugs...</div>\n            ) : (\n              <>\n                <div className=\"hugs-overview\">\n                  <div className=\"hugs-count\">\n                    <span className=\"count-number\">{unreadHugsCount}</span>\n                    <span className=\"count-label\">{unreadHugsCount === 1 ? 'hug' : 'hugs'} to view</span>\n                  </div>\n                </div>\n                {unreadHugsCount > 0 ? (\n                  <div className=\"hugs-preview\">\n                    <p>New hugs from:</p>\n                    <ul className=\"hugs-list\">\n                      {hugsData.receivedHugs.slice(0, 3).map(hug => (\n                        <li key={hug.id}>\n                          <strong>{hug.sender.name || hug.sender.username}</strong> - {hug.type} Hug\n                        </li>\n                      ))}\n                      {unreadHugsCount > 3 && (\n                        <li className=\"and-more\">And {unreadHugsCount - 3} more...</li>\n                      )}\n                    </ul>\n                  </div>\n                ) : (\n                  <p className=\"no-data-message\">No unread hugs at the moment.</p>\n                )}\n              </>\n            )}\n            <div className=\"card-actions\">\n              <Link to=\"/hug-center/received\" className=\"btn btn-secondary\">\n                View All Hugs\n              </Link>\n              <Link to=\"/hug-center\" className=\"btn btn-outline-secondary\">\n                Send a Hug\n              </Link>\n            </div>\n          </div>\n\n          {/* Hug Requests Card */}\n          <div className=\"dashboard-card requests-card\">\n            <h3>Pending Hug Requests</h3>\n            {requestsLoading ? (\n              <div className=\"loading-indicator\">Loading requests...</div>\n            ) : (\n              <>\n                <div className=\"requests-overview\">\n                  <div className=\"requests-count\">\n                    <span className=\"count-number\">{pendingRequestsCount}</span>\n                    <span className=\"count-label\">waiting for response</span>\n                  </div>\n                </div>\n                {pendingRequestsCount > 0 ? (\n                  <div className=\"requests-preview\">\n                    <p>People who need your support:</p>\n                    <ul className=\"requests-list\">\n                      {requestsData.pendingHugRequests.slice(0, 3).map(request => (\n                        <li key={request.id}>\n                          <strong>{request.requester.name || request.requester.username}</strong>\n                          {request.message && ` - \"${request.message}\"`}\n                        </li>\n                      ))}\n                      {pendingRequestsCount > 3 && (\n                        <li className=\"and-more\">And {pendingRequestsCount - 3} more...</li>\n                      )}\n                    </ul>\n                  </div>\n                ) : (\n                  <p className=\"no-data-message\">No pending requests right now.</p>\n                )}\n              </>\n            )}\n            <div className=\"card-actions\">\n              <Link to=\"/hug-center/requests/pending\" className=\"btn btn-primary\">\n                Respond to Requests\n              </Link>\n              <Link to=\"/hug-center/requests/new\" className=\"btn btn-outline-primary\">\n                Request a Hug\n              </Link>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"dashboard-footer\">\n          <p>Remember, taking time for your emotional wellness is always worth it. 💖</p>\n        </div>\n      </div>\n    </MainLayout>\n  );\n}\n\nexport default DashboardPage;"],"names":["LanguageSwitcher","i18n","useTranslation","languages","currentLanguage","handleLanguageChange","e","langCode","jsx","lang","MainLayout","children","t","currentUser","logout","isAuthenticated","useAuth","isMenuOpen","setIsMenuOpen","useState","isDropdownOpen","setIsDropdownOpen","location","useLocation","navigate","useNavigate","useEffect","toggleMenu","toggleDropdown","handleLogout","getInitials","name","nameParts","jsxs","Link","DashboardPage","moodScore","setMoodScore","moodsData","moodsLoading","useQuery","GET_USER_MOODS","hugsData","hugsLoading","GET_RECEIVED_HUGS","requestsData","requestsLoading","GET_PENDING_HUG_REQUESTS","streakData","streakLoading","GET_MOOD_STREAK","sum","acc","mood","getMoodEmoji","score","unreadHugsCount","_a","pendingRequestsCount","_b","Fragment","hug","request"],"mappings":"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"}