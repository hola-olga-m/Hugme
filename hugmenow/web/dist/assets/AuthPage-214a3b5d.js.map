{"version":3,"file":"AuthPage-214a3b5d.js","sources":["../../src/components/auth/LoginForm.jsx","../../src/components/auth/RegisterForm.jsx","../../src/components/auth/ForgotPasswordForm.jsx","../../src/components/auth/ResetPasswordForm.jsx","../../src/pages/AuthPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst FormContainer = styled.form`\n  width: 100%;\n`;\n\nconst FormField = styled.div`\n  margin-bottom: 1.5rem;\n`;\n\nconst FormLabel = styled.label`\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: var(--text-color, #1f2937);\n`;\n\nconst FormInput = styled.input`\n  width: 100%;\n  padding: 0.75rem;\n  border: 1px solid var(--border-color, #e5e7eb);\n  border-radius: 0.375rem;\n  font-size: 1rem;\n  outline: none;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    border-color: var(--primary-color, #6366f1);\n    box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.2);\n  }\n`;\n\nconst FormError = styled.p`\n  color: var(--error-color, #ef4444);\n  font-size: 0.875rem;\n  margin-top: 0.5rem;\n`;\n\nconst SubmitButton = styled.button`\n  width: 100%;\n  padding: 0.75rem;\n  background-color: var(--primary-color, #6366f1);\n  color: white;\n  border: none;\n  border-radius: 0.375rem;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n\n  &:hover {\n    background-color: var(--primary-dark-color, #4f46e5);\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst FormLinks = styled.div`\n  margin-top: 1.5rem;\n  text-align: center;\n  font-size: 0.875rem;\n  color: var(--text-secondary-color, #6b7280);\n`;\n\nconst FormLink = styled(Link)`\n  color: var(--primary-color, #6366f1);\n  text-decoration: none;\n  font-weight: 500;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\n/**\n * LoginForm Component\n * Handles user login functionality\n */\nconst LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n\n    try {\n      // In a real implementation, this would call an authentication API\n      console.log('Login attempted with:', { email, password });\n      \n      // Simulate a successful login for now\n      setTimeout(() => {\n        setIsLoading(false);\n        navigate('/dashboard');\n      }, 1000);\n    } catch (err) {\n      setIsLoading(false);\n      setError('Invalid email or password. Please try again.');\n      console.error('Login error:', err);\n    }\n  };\n\n  return (\n    <FormContainer onSubmit={handleSubmit}>\n      {error && <FormError>{error}</FormError>}\n      \n      <FormField>\n        <FormLabel htmlFor=\"email\">Email</FormLabel>\n        <FormInput\n          id=\"email\"\n          type=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n          placeholder=\"you@example.com\"\n        />\n      </FormField>\n      \n      <FormField>\n        <FormLabel htmlFor=\"password\">Password</FormLabel>\n        <FormInput\n          id=\"password\"\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n          placeholder=\"••••••••\"\n        />\n      </FormField>\n      \n      <SubmitButton type=\"submit\" disabled={isLoading}>\n        {isLoading ? 'Signing in...' : 'Sign In'}\n      </SubmitButton>\n      \n      <FormLinks>\n        <p>\n          <FormLink to=\"/auth/forgot-password\">Forgot password?</FormLink>\n        </p>\n        <p>\n          Don't have an account?{' '}\n          <FormLink to=\"/auth/register\">Sign up</FormLink>\n        </p>\n      </FormLinks>\n    </FormContainer>\n  );\n};\n\nexport default LoginForm;","import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst FormContainer = styled.form`\n  width: 100%;\n`;\n\nconst FormField = styled.div`\n  margin-bottom: 1.5rem;\n`;\n\nconst FormLabel = styled.label`\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: var(--text-color, #1f2937);\n`;\n\nconst FormInput = styled.input`\n  width: 100%;\n  padding: 0.75rem;\n  border: 1px solid var(--border-color, #e5e7eb);\n  border-radius: 0.375rem;\n  font-size: 1rem;\n  outline: none;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    border-color: var(--primary-color, #6366f1);\n    box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.2);\n  }\n`;\n\nconst FormError = styled.p`\n  color: var(--error-color, #ef4444);\n  font-size: 0.875rem;\n  margin-top: 0.5rem;\n`;\n\nconst SubmitButton = styled.button`\n  width: 100%;\n  padding: 0.75rem;\n  background-color: var(--primary-color, #6366f1);\n  color: white;\n  border: none;\n  border-radius: 0.375rem;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n\n  &:hover {\n    background-color: var(--primary-dark-color, #4f46e5);\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst FormLinks = styled.div`\n  margin-top: 1.5rem;\n  text-align: center;\n  font-size: 0.875rem;\n  color: var(--text-secondary-color, #6b7280);\n`;\n\nconst FormLink = styled(Link)`\n  color: var(--primary-color, #6366f1);\n  text-decoration: none;\n  font-weight: 500;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\n/**\n * RegisterForm Component\n * Handles user registration functionality\n */\nconst RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    \n    // Basic validation\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    \n    setIsLoading(true);\n\n    try {\n      // In a real implementation, this would call a registration API\n      console.log('Registration attempted with:', { name, email, password });\n      \n      // Simulate a successful registration for now\n      setTimeout(() => {\n        setIsLoading(false);\n        navigate('/onboarding');\n      }, 1000);\n    } catch (err) {\n      setIsLoading(false);\n      setError('Registration failed. Please try again.');\n      console.error('Registration error:', err);\n    }\n  };\n\n  return (\n    <FormContainer onSubmit={handleSubmit}>\n      {error && <FormError>{error}</FormError>}\n      \n      <FormField>\n        <FormLabel htmlFor=\"name\">Full Name</FormLabel>\n        <FormInput\n          id=\"name\"\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          required\n          placeholder=\"John Doe\"\n        />\n      </FormField>\n      \n      <FormField>\n        <FormLabel htmlFor=\"email\">Email</FormLabel>\n        <FormInput\n          id=\"email\"\n          type=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n          placeholder=\"you@example.com\"\n        />\n      </FormField>\n      \n      <FormField>\n        <FormLabel htmlFor=\"password\">Password</FormLabel>\n        <FormInput\n          id=\"password\"\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n          placeholder=\"••••••••\"\n        />\n      </FormField>\n      \n      <FormField>\n        <FormLabel htmlFor=\"confirmPassword\">Confirm Password</FormLabel>\n        <FormInput\n          id=\"confirmPassword\"\n          type=\"password\"\n          value={confirmPassword}\n          onChange={(e) => setConfirmPassword(e.target.value)}\n          required\n          placeholder=\"••••••••\"\n        />\n      </FormField>\n      \n      <SubmitButton type=\"submit\" disabled={isLoading}>\n        {isLoading ? 'Creating account...' : 'Create Account'}\n      </SubmitButton>\n      \n      <FormLinks>\n        <p>\n          Already have an account?{' '}\n          <FormLink to=\"/auth/login\">Sign in</FormLink>\n        </p>\n      </FormLinks>\n    </FormContainer>\n  );\n};\n\nexport default RegisterForm;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst FormContainer = styled.form`\n  width: 100%;\n`;\n\nconst FormField = styled.div`\n  margin-bottom: 1.5rem;\n`;\n\nconst FormLabel = styled.label`\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: var(--text-color, #1f2937);\n`;\n\nconst FormInput = styled.input`\n  width: 100%;\n  padding: 0.75rem;\n  border: 1px solid var(--border-color, #e5e7eb);\n  border-radius: 0.375rem;\n  font-size: 1rem;\n  outline: none;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    border-color: var(--primary-color, #6366f1);\n    box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.2);\n  }\n`;\n\nconst SubmitButton = styled.button`\n  width: 100%;\n  padding: 0.75rem;\n  background-color: var(--primary-color, #6366f1);\n  color: white;\n  border: none;\n  border-radius: 0.375rem;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n\n  &:hover {\n    background-color: var(--primary-dark-color, #4f46e5);\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst FormError = styled.p`\n  color: var(--error-color, #ef4444);\n  font-size: 0.875rem;\n  margin-top: 0.5rem;\n`;\n\nconst FormSuccess = styled.div`\n  color: var(--success-color, #22c55e);\n  background-color: var(--success-bg-color, #dcfce7);\n  padding: 1rem;\n  border-radius: 0.375rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst FormLinks = styled.div`\n  margin-top: 1.5rem;\n  text-align: center;\n  font-size: 0.875rem;\n  color: var(--text-secondary-color, #6b7280);\n`;\n\nconst FormLink = styled(Link)`\n  color: var(--primary-color, #6366f1);\n  text-decoration: none;\n  font-weight: 500;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\n/**\n * ForgotPasswordForm Component\n * Handles password reset requests\n */\nconst ForgotPasswordForm = () => {\n  const [email, setEmail] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setSuccess(false);\n    setIsLoading(true);\n\n    try {\n      // In a real implementation, this would call a password reset API\n      console.log('Password reset requested for:', email);\n      \n      // Simulate a successful request for now\n      setTimeout(() => {\n        setIsLoading(false);\n        setSuccess(true);\n      }, 1000);\n    } catch (err) {\n      setIsLoading(false);\n      setError('Could not process your request. Please try again.');\n      console.error('Password reset error:', err);\n    }\n  };\n\n  return (\n    <FormContainer onSubmit={handleSubmit}>\n      {error && <FormError>{error}</FormError>}\n      \n      {success ? (\n        <FormSuccess>\n          <p>We've sent a password reset link to your email address. Please check your inbox.</p>\n        </FormSuccess>\n      ) : (\n        <>\n          <FormField>\n            <FormLabel htmlFor=\"email\">Email</FormLabel>\n            <FormInput\n              id=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              placeholder=\"you@example.com\"\n            />\n          </FormField>\n          \n          <SubmitButton type=\"submit\" disabled={isLoading}>\n            {isLoading ? 'Sending Reset Link...' : 'Send Reset Link'}\n          </SubmitButton>\n        </>\n      )}\n      \n      <FormLinks>\n        <p>\n          <FormLink to=\"/auth/login\">Back to login</FormLink>\n        </p>\n      </FormLinks>\n    </FormContainer>\n  );\n};\n\nexport default ForgotPasswordForm;","import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst FormContainer = styled.form`\n  width: 100%;\n`;\n\nconst FormField = styled.div`\n  margin-bottom: 1.5rem;\n`;\n\nconst FormLabel = styled.label`\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: var(--text-color, #1f2937);\n`;\n\nconst FormInput = styled.input`\n  width: 100%;\n  padding: 0.75rem;\n  border: 1px solid var(--border-color, #e5e7eb);\n  border-radius: 0.375rem;\n  font-size: 1rem;\n  outline: none;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    border-color: var(--primary-color, #6366f1);\n    box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.2);\n  }\n`;\n\nconst SubmitButton = styled.button`\n  width: 100%;\n  padding: 0.75rem;\n  background-color: var(--primary-color, #6366f1);\n  color: white;\n  border: none;\n  border-radius: 0.375rem;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n\n  &:hover {\n    background-color: var(--primary-dark-color, #4f46e5);\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst FormError = styled.p`\n  color: var(--error-color, #ef4444);\n  font-size: 0.875rem;\n  margin-top: 0.5rem;\n`;\n\nconst FormSuccess = styled.div`\n  color: var(--success-color, #22c55e);\n  background-color: var(--success-bg-color, #dcfce7);\n  padding: 1rem;\n  border-radius: 0.375rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst FormLinks = styled.div`\n  margin-top: 1.5rem;\n  text-align: center;\n  font-size: 0.875rem;\n  color: var(--text-secondary-color, #6b7280);\n`;\n\nconst FormLink = styled(Link)`\n  color: var(--primary-color, #6366f1);\n  text-decoration: none;\n  font-weight: 500;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\n/**\n * ResetPasswordForm Component\n * Handles password reset form after clicking on reset link\n */\nconst ResetPasswordForm = () => {\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [token, setToken] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Extract token from URL query parameters\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    const resetToken = queryParams.get('token');\n    \n    if (resetToken) {\n      setToken(resetToken);\n    } else {\n      setError('Invalid or missing reset token. Please request a new password reset link.');\n    }\n  }, [location]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    \n    // Basic validation\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    \n    if (password.length < 8) {\n      setError('Password must be at least 8 characters long');\n      return;\n    }\n    \n    setIsLoading(true);\n\n    try {\n      // In a real implementation, this would call a password reset confirmation API\n      console.log('Password reset attempted with token:', token);\n      \n      // Simulate a successful reset for now\n      setTimeout(() => {\n        setIsLoading(false);\n        setSuccess(true);\n        \n        // Redirect to login after a delay\n        setTimeout(() => {\n          navigate('/auth/login');\n        }, 3000);\n      }, 1000);\n    } catch (err) {\n      setIsLoading(false);\n      setError('Password reset failed. Please try again or request a new reset link.');\n      console.error('Password reset error:', err);\n    }\n  };\n\n  if (success) {\n    return (\n      <FormSuccess>\n        <p>Your password has been successfully reset. You will be redirected to the login page shortly.</p>\n        <FormLinks>\n          <p>\n            <FormLink to=\"/auth/login\">Back to login</FormLink>\n          </p>\n        </FormLinks>\n      </FormSuccess>\n    );\n  }\n\n  return (\n    <FormContainer onSubmit={handleSubmit}>\n      {error && <FormError>{error}</FormError>}\n      \n      <FormField>\n        <FormLabel htmlFor=\"password\">New Password</FormLabel>\n        <FormInput\n          id=\"password\"\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n          disabled={!token}\n          placeholder=\"••••••••\"\n        />\n      </FormField>\n      \n      <FormField>\n        <FormLabel htmlFor=\"confirmPassword\">Confirm New Password</FormLabel>\n        <FormInput\n          id=\"confirmPassword\"\n          type=\"password\"\n          value={confirmPassword}\n          onChange={(e) => setConfirmPassword(e.target.value)}\n          required\n          disabled={!token}\n          placeholder=\"••••••••\"\n        />\n      </FormField>\n      \n      <SubmitButton type=\"submit\" disabled={isLoading || !token}>\n        {isLoading ? 'Resetting Password...' : 'Reset Password'}\n      </SubmitButton>\n      \n      <FormLinks>\n        <p>\n          <FormLink to=\"/auth/login\">Back to login</FormLink>\n        </p>\n      </FormLinks>\n    </FormContainer>\n  );\n};\n\nexport default ResetPasswordForm;","import React, { useState } from 'react';\nimport { Routes, Route, Navigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\n// Import components\nimport LoginForm from '../components/auth/LoginForm';\nimport RegisterForm from '../components/auth/RegisterForm';\nimport ForgotPasswordForm from '../components/auth/ForgotPasswordForm';\nimport ResetPasswordForm from '../components/auth/ResetPasswordForm';\n\nconst AuthContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  max-width: 400px;\n  margin: 0 auto;\n  padding: 2rem;\n`;\n\nconst AuthHeader = styled.div`\n  margin-bottom: 2rem;\n  text-align: center;\n`;\n\nconst AuthTitle = styled.h1`\n  font-size: 1.75rem;\n  color: var(--text-color, #1f2937);\n  margin-bottom: 0.5rem;\n`;\n\nconst AuthDescription = styled.p`\n  color: var(--text-secondary-color, #6b7280);\n`;\n\n/**\n * AuthPage Component\n * Handles all authentication-related views (login, register, forgot password, reset password)\n */\nconst AuthPage = () => {\n  const location = useLocation();\n  \n  // Determine which form to show based on the route\n  const getTitle = () => {\n    if (location.pathname.includes('/register')) {\n      return 'Create an Account';\n    } else if (location.pathname.includes('/forgot-password')) {\n      return 'Forgot Password';\n    } else if (location.pathname.includes('/reset-password')) {\n      return 'Reset Password';\n    } else {\n      return 'Welcome Back';\n    }\n  };\n\n  // Get description based on the route\n  const getDescription = () => {\n    if (location.pathname.includes('/register')) {\n      return 'Join HugMeNow to start tracking your moods and connecting with others.';\n    } else if (location.pathname.includes('/forgot-password')) {\n      return 'Enter your email to receive a password reset link.';\n    } else if (location.pathname.includes('/reset-password')) {\n      return 'Create a new password for your account.';\n    } else {\n      return 'Sign in to access your HugMeNow account.';\n    }\n  };\n\n  // Import components already done at the top of the file\n\n  return (\n    <AuthContainer>\n      <AuthHeader>\n        <AuthTitle>{getTitle()}</AuthTitle>\n        <AuthDescription>{getDescription()}</AuthDescription>\n      </AuthHeader>\n\n      <Routes>\n        <Route path=\"login\" element={<LoginForm />} />\n        <Route path=\"register\" element={<RegisterForm />} />\n        <Route path=\"forgot-password\" element={<ForgotPasswordForm />} />\n        <Route path=\"reset-password\" element={<ResetPasswordForm />} />\n        <Route path=\"*\" element={<Navigate to=\"/auth/login\" replace />} />\n      </Routes>\n    </AuthContainer>\n  );\n};\n\nexport default AuthPage;"],"names":["FormContainer","styled","FormField","FormLabel","FormInput","FormError","SubmitButton","FormLinks","FormLink","Link","LoginForm","email","setEmail","useState","password","setPassword","isLoading","setIsLoading","error","setError","navigate","useNavigate","handleSubmit","e","err","jsxs","jsx","RegisterForm","name","setName","confirmPassword","setConfirmPassword","FormSuccess","ForgotPasswordForm","success","setSuccess","Fragment","ResetPasswordForm","token","setToken","location","useLocation","useEffect","resetToken","AuthContainer","AuthHeader","AuthTitle","AuthDescription","AuthPage","getTitle","getDescription","Routes","Route","Navigate"],"mappings":"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"}