{"version":3,"file":"MoodTracker-f5add8e3.js","sources":["../../src/pages/MoodTracker.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useAuth } from '../context/AuthContext';\nimport LoadingScreen from '../components/common/LoadingScreen';\n\n// Styled components\nconst MoodTrackerContainer = styled.div`\n  min-height: 100vh;\n  background-color: var(--gray-100);\n`;\n\nconst MoodTrackerHeader = styled.header`\n  background-color: white;\n  padding: 1rem;\n  box-shadow: var(--shadow-sm);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Logo = styled.div`\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: var(--primary-color);\n  cursor: pointer;\n`;\n\nconst BackButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--gray-600);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  \n  &:hover {\n    color: var(--primary-color);\n  }\n  \n  &::before {\n    content: '←';\n    margin-right: 0.5rem;\n    font-size: 1.2rem;\n  }\n`;\n\nconst MoodTrackerContent = styled.main`\n  padding: 2rem;\n  max-width: 1000px;\n  margin: 0 auto;\n`;\n\nconst MoodTrackerTitle = styled.h1`\n  color: var(--gray-800);\n  margin-bottom: 1.5rem;\n`;\n\nconst MoodTrackerDescription = styled.p`\n  color: var(--gray-600);\n  margin-bottom: 2rem;\n`;\n\nconst MoodInputCard = styled.div`\n  background-color: white;\n  border-radius: var(--border-radius-lg);\n  padding: 2rem;\n  box-shadow: var(--shadow-md);\n  margin-bottom: 2rem;\n`;\n\nconst MoodHistoryCard = styled.div`\n  background-color: white;\n  border-radius: var(--border-radius-lg);\n  padding: 2rem;\n  box-shadow: var(--shadow-md);\n`;\n\nconst SectionTitle = styled.h2`\n  color: var(--primary-color);\n  margin-bottom: 1.5rem;\n  font-size: 1.5rem;\n`;\n\nconst MoodSlider = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst SliderContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 1rem;\n`;\n\nconst SliderInput = styled.input`\n  flex: 1;\n  -webkit-appearance: none;\n  width: 100%;\n  height: 8px;\n  border-radius: 5px;\n  background: linear-gradient(\n    to right, \n    var(--danger-color) 0%, \n    var(--warning-color) 50%, \n    var(--success-color) 100%\n  );\n  outline: none;\n  \n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: white;\n    border: 2px solid var(--primary-color);\n    cursor: pointer;\n  }\n  \n  &::-moz-range-thumb {\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: white;\n    border: 2px solid var(--primary-color);\n    cursor: pointer;\n  }\n`;\n\nconst SliderValue = styled.div`\n  margin-left: 1rem;\n  font-weight: bold;\n  font-size: 1.25rem;\n  min-width: 40px;\n  color: ${props => {\n    const value = props.value;\n    if (value <= 3) return 'var(--danger-color)';\n    if (value <= 7) return 'var(--warning-color)';\n    return 'var(--success-color)';\n  }};\n`;\n\nconst SliderLabels = styled.div`\n  display: flex;\n  justify-content: space-between;\n  \n  span {\n    font-size: 0.8rem;\n    color: var(--gray-600);\n  }\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: 1.5rem;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: var(--gray-800);\n`;\n\nconst Textarea = styled.textarea`\n  width: 100%;\n  padding: 0.75rem 1rem;\n  border: 1px solid var(--gray-300);\n  border-radius: var(--border-radius-md);\n  transition: var(--transition-base);\n  min-height: 100px;\n  resize: vertical;\n  \n  &:focus {\n    border-color: var(--primary-color);\n    outline: 0;\n    box-shadow: 0 0 0 0.2rem rgba(0, 102, 255, 0.25);\n  }\n`;\n\nconst Checkbox = styled.div`\n  display: flex;\n  align-items: center;\n  \n  input {\n    margin-right: 0.5rem;\n  }\n  \n  label {\n    font-weight: normal;\n  }\n`;\n\nconst SubmitButton = styled.button`\n  background-color: var(--primary-color);\n  color: white;\n  padding: 0.75rem 1.5rem;\n  border: none;\n  border-radius: var(--border-radius-md);\n  font-weight: 500;\n  cursor: pointer;\n  transition: var(--transition-base);\n  \n  &:hover {\n    background-color: var(--primary-dark);\n  }\n  \n  &:disabled {\n    background-color: var(--gray-400);\n    cursor: not-allowed;\n  }\n`;\n\nconst PlaceholderMessage = styled.div`\n  background-color: var(--gray-200);\n  color: var(--gray-600);\n  padding: 2rem;\n  text-align: center;\n  border-radius: var(--border-radius-md);\n`;\n\nconst MoodTracker = () => {\n  const [moodScore, setMoodScore] = useState(5);\n  const [moodNote, setMoodNote] = useState('');\n  const [isPublic, setIsPublic] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n  const { currentUser } = useAuth();\n  const navigate = useNavigate();\n  \n  const navigateToDashboard = () => {\n    navigate('/dashboard');\n  };\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    \n    // In a real app, you would submit this data to your API\n    console.log('Submitting mood:', { moodScore, moodNote, isPublic });\n    \n    // Simulate API call\n    setTimeout(() => {\n      setMoodScore(5);\n      setMoodNote('');\n      setIsPublic(false);\n      setIsSubmitting(false);\n      \n      // Display success message or update UI accordingly\n      alert('Mood submitted successfully!');\n    }, 1000);\n  };\n  \n  return (\n    <MoodTrackerContainer>\n      <MoodTrackerHeader>\n        <Logo onClick={navigateToDashboard}>HugMeNow</Logo>\n        <BackButton onClick={navigateToDashboard}>Back to Dashboard</BackButton>\n      </MoodTrackerHeader>\n      \n      <MoodTrackerContent>\n        <MoodTrackerTitle>Mood Tracker</MoodTrackerTitle>\n        <MoodTrackerDescription>\n          Track your mood and emotional well-being. Regular tracking helps you understand\n          patterns and improve self-awareness.\n        </MoodTrackerDescription>\n        \n        <MoodInputCard>\n          <SectionTitle>How are you feeling today?</SectionTitle>\n          \n          <form onSubmit={handleSubmit}>\n            <MoodSlider>\n              <SliderContainer>\n                <SliderInput\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"10\"\n                  value={moodScore}\n                  onChange={(e) => setMoodScore(parseInt(e.target.value))}\n                />\n                <SliderValue value={moodScore}>{moodScore}</SliderValue>\n              </SliderContainer>\n              \n              <SliderLabels>\n                <span>Not well</span>\n                <span>Neutral</span>\n                <span>Excellent</span>\n              </SliderLabels>\n            </MoodSlider>\n            \n            <FormGroup>\n              <Label htmlFor=\"moodNote\">Add a note (optional)</Label>\n              <Textarea\n                id=\"moodNote\"\n                value={moodNote}\n                onChange={(e) => setMoodNote(e.target.value)}\n                placeholder=\"Describe how you're feeling or what's been happening...\"\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <Checkbox>\n                <input\n                  type=\"checkbox\"\n                  id=\"isPublic\"\n                  checked={isPublic}\n                  onChange={(e) => setIsPublic(e.target.checked)}\n                />\n                <label htmlFor=\"isPublic\">Share this mood entry with the community</label>\n              </Checkbox>\n            </FormGroup>\n            \n            <SubmitButton type=\"submit\" disabled={isSubmitting}>\n              {isSubmitting ? 'Submitting...' : 'Record Mood'}\n            </SubmitButton>\n          </form>\n        </MoodInputCard>\n        \n        <MoodHistoryCard>\n          <SectionTitle>Your Mood History</SectionTitle>\n          \n          <PlaceholderMessage>\n            <p>Your mood history will be displayed here once you start tracking.</p>\n            <p>In the actual app, this would show a graph of your mood over time.</p>\n          </PlaceholderMessage>\n        </MoodHistoryCard>\n      </MoodTrackerContent>\n    </MoodTrackerContainer>\n  );\n};\n\nexport default MoodTracker;"],"names":["MoodTrackerContainer","styled","MoodTrackerHeader","Logo","BackButton","MoodTrackerContent","MoodTrackerTitle","MoodTrackerDescription","MoodInputCard","MoodHistoryCard","SectionTitle","MoodSlider","SliderContainer","SliderInput","SliderValue","props","value","SliderLabels","FormGroup","Label","Textarea","Checkbox","SubmitButton","PlaceholderMessage","MoodTracker","moodScore","setMoodScore","useState","moodNote","setMoodNote","isPublic","setIsPublic","isSubmitting","setIsSubmitting","useAuth","navigate","useNavigate","navigateToDashboard","handleSubmit","jsxs","jsx"],"mappings":"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"}