{"version":3,"file":"Register-43c959eb.js","sources":["../../src/pages/Register.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useAuth } from '../context/AuthContext';\nimport LoadingScreen from '../components/common/LoadingScreen';\n\n// Styled components\nconst RegisterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  min-height: 100vh;\n  padding: 1rem;\n  background-color: var(--gray-100);\n`;\n\nconst RegisterCard = styled.div`\n  background-color: white;\n  border-radius: var(--border-radius-lg);\n  box-shadow: var(--shadow-md);\n  padding: 2rem;\n  max-width: 450px;\n  width: 100%;\n  margin: 0 auto;\n`;\n\nconst RegisterLogo = styled.div`\n  text-align: center;\n  margin-bottom: 2rem;\n  \n  h1 {\n    font-size: 2rem;\n    color: var(--primary-color);\n    margin-bottom: 0.5rem;\n  }\n  \n  p {\n    color: var(--gray-600);\n  }\n`;\n\nconst RegisterForm = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: 1.5rem;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: var(--gray-800);\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 0.75rem 1rem;\n  border: 1px solid var(--gray-300);\n  border-radius: var(--border-radius-md);\n  transition: var(--transition-base);\n  \n  &:focus {\n    border-color: var(--primary-color);\n    outline: 0;\n    box-shadow: 0 0 0 0.2rem rgba(0, 102, 255, 0.25);\n  }\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  padding: 0.75rem 1rem;\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  border-radius: var(--border-radius-md);\n  font-weight: 500;\n  cursor: pointer;\n  transition: var(--transition-base);\n  \n  &:hover {\n    background-color: var(--primary-dark);\n  }\n  \n  &:disabled {\n    background-color: var(--gray-400);\n    cursor: not-allowed;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  background-color: var(--danger-color);\n  color: white;\n  padding: 0.75rem 1rem;\n  border-radius: var(--border-radius-md);\n  margin-bottom: 1.5rem;\n`;\n\nconst RegisterFooter = styled.div`\n  text-align: center;\n  margin-top: 1.5rem;\n  \n  p {\n    color: var(--gray-600);\n    margin-bottom: 0.5rem;\n  }\n  \n  a {\n    color: var(--primary-color);\n    text-decoration: none;\n    \n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst OrDivider = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 1.5rem 0;\n  \n  &::before, &::after {\n    content: '';\n    flex: 1;\n    border-bottom: 1px solid var(--gray-300);\n  }\n  \n  span {\n    padding: 0 0.75rem;\n    color: var(--gray-600);\n  }\n`;\n\nconst AnonymousButton = styled.button`\n  width: 100%;\n  padding: 0.75rem 1rem;\n  background-color: var(--gray-200);\n  color: var(--gray-800);\n  border: 1px solid var(--gray-300);\n  border-radius: var(--border-radius-md);\n  font-weight: 500;\n  cursor: pointer;\n  transition: var(--transition-base);\n  margin-top: 1rem;\n  \n  &:hover {\n    background-color: var(--gray-300);\n  }\n`;\n\nconst Register = () => {\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    name: '',\n    password: '',\n    confirmPassword: '',\n  });\n  const [nickname, setNickname] = useState('');\n  const [showAnonymousForm, setShowAnonymousForm] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [formError, setFormError] = useState('');\n  \n  const { register, anonymousLogin, loading } = useAuth();\n  const navigate = useNavigate();\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n  \n  const handleRegister = async (e) => {\n    e.preventDefault();\n    \n    // Basic validation\n    if (!formData.username || !formData.email || !formData.name || !formData.password) {\n      setFormError('Please fill in all required fields');\n      return;\n    }\n    \n    if (formData.password !== formData.confirmPassword) {\n      setFormError('Passwords do not match');\n      return;\n    }\n    \n    if (formData.password.length < 6) {\n      setFormError('Password must be at least 6 characters long');\n      return;\n    }\n    \n    setIsSubmitting(true);\n    setFormError('');\n    \n    try {\n      await register({\n        username: formData.username,\n        email: formData.email,\n        name: formData.name,\n        password: formData.password,\n      });\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Registration error:', error);\n      setFormError(error.message || 'Registration failed');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  const handleAnonymousLogin = async (e) => {\n    e.preventDefault();\n    \n    if (!nickname) {\n      setFormError('Please enter a nickname');\n      return;\n    }\n    \n    setIsSubmitting(true);\n    setFormError('');\n    \n    try {\n      await anonymousLogin(nickname);\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Anonymous login error:', error);\n      setFormError(error.message || 'Failed to login anonymously');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  if (loading) {\n    return <LoadingScreen text=\"Checking authentication...\" />;\n  }\n  \n  return (\n    <RegisterContainer>\n      <RegisterCard>\n        <RegisterLogo>\n          <h1>HugMeNow</h1>\n          <p>Create your account</p>\n        </RegisterLogo>\n        \n        {formError && <ErrorMessage>{formError}</ErrorMessage>}\n        \n        {showAnonymousForm ? (\n          <RegisterForm onSubmit={handleAnonymousLogin}>\n            <FormGroup>\n              <Label htmlFor=\"nickname\">Nickname</Label>\n              <Input\n                type=\"text\"\n                id=\"nickname\"\n                value={nickname}\n                onChange={(e) => setNickname(e.target.value)}\n                placeholder=\"Enter your nickname\"\n                required\n              />\n            </FormGroup>\n            \n            <Button type=\"submit\" disabled={isSubmitting}>\n              {isSubmitting ? 'Processing...' : 'Continue Anonymously'}\n            </Button>\n            \n            <RegisterFooter>\n              <p>\n                <a href=\"#\" onClick={() => setShowAnonymousForm(false)}>\n                  Back to registration\n                </a>\n              </p>\n            </RegisterFooter>\n          </RegisterForm>\n        ) : (\n          <>\n            <RegisterForm onSubmit={handleRegister}>\n              <FormGroup>\n                <Label htmlFor=\"username\">Username</Label>\n                <Input\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  value={formData.username}\n                  onChange={handleChange}\n                  placeholder=\"Choose a username\"\n                  required\n                />\n              </FormGroup>\n              \n              <FormGroup>\n                <Label htmlFor=\"email\">Email</Label>\n                <Input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleChange}\n                  placeholder=\"Enter your email\"\n                  required\n                />\n              </FormGroup>\n              \n              <FormGroup>\n                <Label htmlFor=\"name\">Full Name</Label>\n                <Input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleChange}\n                  placeholder=\"Enter your full name\"\n                  required\n                />\n              </FormGroup>\n              \n              <FormGroup>\n                <Label htmlFor=\"password\">Password</Label>\n                <Input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={handleChange}\n                  placeholder=\"Create a password (min. 6 characters)\"\n                  required\n                />\n              </FormGroup>\n              \n              <FormGroup>\n                <Label htmlFor=\"confirmPassword\">Confirm Password</Label>\n                <Input\n                  type=\"password\"\n                  id=\"confirmPassword\"\n                  name=\"confirmPassword\"\n                  value={formData.confirmPassword}\n                  onChange={handleChange}\n                  placeholder=\"Confirm your password\"\n                  required\n                />\n              </FormGroup>\n              \n              <Button type=\"submit\" disabled={isSubmitting}>\n                {isSubmitting ? 'Creating account...' : 'Create Account'}\n              </Button>\n            </RegisterForm>\n            \n            <OrDivider>\n              <span>or</span>\n            </OrDivider>\n            \n            <AnonymousButton \n              type=\"button\" \n              onClick={() => setShowAnonymousForm(true)}\n            >\n              Continue Anonymously\n            </AnonymousButton>\n            \n            <RegisterFooter>\n              <p>\n                Already have an account?{' '}\n                <Link to=\"/login\">Sign In</Link>\n              </p>\n            </RegisterFooter>\n          </>\n        )}\n      </RegisterCard>\n    </RegisterContainer>\n  );\n};\n\nexport default Register;"],"names":["RegisterContainer","styled","RegisterCard","RegisterLogo","RegisterForm","FormGroup","Label","Input","Button","ErrorMessage","RegisterFooter","OrDivider","AnonymousButton","Register","formData","setFormData","useState","nickname","setNickname","showAnonymousForm","setShowAnonymousForm","isSubmitting","setIsSubmitting","formError","setFormError","register","anonymousLogin","loading","useAuth","navigate","useNavigate","handleChange","e","name","value","handleRegister","error","handleAnonymousLogin","jsx","LoadingScreen","jsxs","Fragment","Link"],"mappings":"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"}