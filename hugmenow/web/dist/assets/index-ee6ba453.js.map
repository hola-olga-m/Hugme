{"version":3,"file":"index-ee6ba453.js","sources":["../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../node_modules/prop-types/factoryWithThrowingShims.js","../../node_modules/prop-types/index.js","../../src/components/HugIcon/index.js","../../src/components/HugIconGallery/index.js","../../src/pages/HugGalleryDemo/index.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { getHugIconByType, getHugTypeColor, getHugTypeDisplayName } from '../../utils/hugIcons';\n\n/**\n * Styled components for the HugIcon\n */\nconst IconContainer = styled(motion.div)`\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: ${props => props.margin || '0'};\n  cursor: ${props => props.onClick ? 'pointer' : 'default'};\n`;\n\nconst IconWrapper = styled(motion.div)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: ${props => {\n    switch (props.size) {\n      case 'xs': return '24px';\n      case 'sm': return '32px';\n      case 'md': return '48px';\n      case 'lg': return '64px';\n      case 'xl': return '96px';\n      default: return props.size || '48px';\n    }\n  }};\n  height: ${props => {\n    switch (props.size) {\n      case 'xs': return '24px';\n      case 'sm': return '32px';\n      case 'md': return '48px';\n      case 'lg': return '64px';\n      case 'xl': return '96px';\n      default: return props.size || '48px';\n    }\n  }};\n  background-color: ${props => props.showBackground ? '#ffffff' : 'transparent'};\n  border-radius: 50%;\n  padding: ${props => props.showBackground ? '8px' : '0'};\n  border: ${props => props.isSelected ? `2px solid ${props.color || '#4a90e2'}` : 'none'};\n  box-shadow: ${props => props.isSelected ? '0 0 10px rgba(0,0,0,0.1)' : 'none'};\n`;\n\nconst StyledIcon = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nconst IconLabel = styled.span`\n  margin-top: 8px;\n  font-size: 0.9rem;\n  color: #333;\n  text-align: center;\n`;\n\n/**\n * Animation variants for the HugIcon\n */\nconst iconVariants = {\n  initial: { scale: 1 },\n  hover: { scale: 1.1 },\n  tap: { scale: 0.95 },\n  selected: { \n    scale: 1.05,\n    transition: { \n      type: 'spring',\n      stiffness: 400,\n      damping: 10\n    }\n  }\n};\n\n/**\n * HugIcon Component\n * Displays a hug icon with optional label and animations\n */\nconst HugIcon = ({\n  /** Type of hug icon to display */\n  type = 'standard',\n  /** Size of the icon */\n  size = 'md',\n  /** Whether to show the label below the icon */\n  showLabel = false,\n  /** Whether to show a background behind the icon */\n  showBackground = false,\n  /** Whether the icon should be highlighted */\n  isSelected = false,\n  /** Whether to apply animations to the icon */\n  animate = true,\n  /** CSS margin value */\n  margin,\n  /** Click handler for the icon */\n  onClick\n}) => {\n  // Get the icon source and color based on the type\n  const iconSrc = getHugIconByType(type);\n  const color = getHugTypeColor(type);\n  const name = getHugTypeDisplayName(type);\n\n  return (\n    <IconContainer \n      margin={margin}\n      onClick={onClick}\n      data-testid={`hug-icon-${type}`}\n    >\n      <IconWrapper \n        size={size}\n        showBackground={showBackground}\n        isSelected={isSelected}\n        color={color}\n        initial=\"initial\"\n        whileHover={animate ? \"hover\" : \"\"}\n        whileTap={animate ? \"tap\" : \"\"}\n        animate={isSelected && animate ? \"selected\" : \"initial\"}\n        variants={animate ? iconVariants : {}}\n      >\n        <StyledIcon \n          src={iconSrc} \n          alt={`${name} icon`} \n        />\n      </IconWrapper>\n      \n      {showLabel && (\n        <IconLabel>{name}</IconLabel>\n      )}\n    </IconContainer>\n  );\n};\n\nHugIcon.propTypes = {\n  type: PropTypes.oneOf(['standard', 'supportive', 'group', 'comforting', 'enthusiastic', 'virtual']),\n  size: PropTypes.oneOfType([\n    PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n    PropTypes.string\n  ]),\n  showLabel: PropTypes.bool,\n  showBackground: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  animate: PropTypes.bool,\n  margin: PropTypes.string,\n  onClick: PropTypes.func\n};\n\nexport default HugIcon;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { HUG_ICONS, getHugTypeDescription } from '../../utils/hugIcons';\nimport HugIcon from '../HugIcon';\n\nconst GalleryContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  background-color: #ffffff;\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n\nconst GalleryHeader = styled.div`\n  margin-bottom: 16px;\n`;\n\nconst GalleryTitle = styled.h3`\n  font-size: 1.3rem;\n  color: #333;\n  margin: 0 0 4px 0;\n`;\n\nconst GalleryDescription = styled.p`\n  font-size: 0.9rem;\n  color: #666;\n  margin: 0;\n`;\n\nconst GalleryGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));\n  gap: 16px;\n  margin-bottom: ${props => props.showSelectedSection ? '16px' : '0'};\n  \n  @media (max-width: 480px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`;\n\nconst SelectedIconSection = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 16px;\n  margin-top: 16px;\n  background-color: #f5f5f5;\n  border-radius: 8px;\n`;\n\nconst SelectedIconTitle = styled.h4`\n  font-size: 1.1rem;\n  color: #333;\n  margin: 0 0 16px 0;\n  text-align: center;\n`;\n\nconst SelectedIconDetails = styled.div`\n  margin-top: 16px;\n  text-align: center;\n`;\n\nconst SelectedIconName = styled.h5`\n  font-size: 1.1rem;\n  color: #333;\n  margin: 0 0 8px 0;\n`;\n\nconst SelectedIconDescription = styled.p`\n  font-size: 0.9rem;\n  color: #666;\n  margin: 0;\n`;\n\n/**\n * Animation variants for the gallery items\n */\nconst galleryVariants = {\n  hidden: { opacity: 0 },\n  visible: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\nconst fadeInVariants = {\n  hidden: { opacity: 0, y: 20 },\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      type: 'spring',\n      stiffness: 300,\n      damping: 25\n    }\n  }\n};\n\n/**\n * HugIconGallery Component\n * Displays a gallery of all available hug icons with selection functionality\n */\nconst HugIconGallery = ({\n  /** Title for the gallery section */\n  title = 'Hug Types',\n  /** Description for the gallery */\n  description = 'Select a hug type to send',\n  /** Whether to show the selected icon section */\n  showSelectedSection = true,\n  /** Default selected hug type */\n  defaultSelectedType = 'standard',\n  /** Callback when a hug type is selected */\n  onSelectHugType\n}) => {\n  const [selectedType, setSelectedType] = useState(defaultSelectedType);\n  \n  // Update selected type if default changes\n  useEffect(() => {\n    setSelectedType(defaultSelectedType);\n  }, [defaultSelectedType]);\n  \n  // Handle icon selection\n  const handleSelectIcon = (type) => {\n    setSelectedType(type);\n    if (onSelectHugType) {\n      onSelectHugType(type);\n    }\n  };\n  \n  // Get the description for the selected hug type\n  const selectedDescription = getHugTypeDescription(selectedType);\n  \n  return (\n    <GalleryContainer data-testid=\"hug-icon-gallery\">\n      <GalleryHeader>\n        <GalleryTitle>{title}</GalleryTitle>\n        <GalleryDescription>{description}</GalleryDescription>\n      </GalleryHeader>\n      \n      <motion.div\n        variants={galleryVariants}\n        initial=\"hidden\"\n        animate=\"visible\"\n      >\n        <GalleryGrid showSelectedSection={showSelectedSection}>\n          {Object.keys(HUG_ICONS).map((hugType) => (\n            <motion.div key={hugType} variants={fadeInVariants}>\n              <HugIcon\n                type={hugType}\n                showLabel\n                showBackground\n                isSelected={selectedType === hugType}\n                margin=\"8px 0\"\n                onClick={() => handleSelectIcon(hugType)}\n              />\n            </motion.div>\n          ))}\n        </GalleryGrid>\n      </motion.div>\n      \n      {showSelectedSection && (\n        <SelectedIconSection\n          initial={{ opacity: 0, height: 0 }}\n          animate={{ opacity: 1, height: 'auto' }}\n          transition={{ duration: 0.3 }}\n        >\n          <SelectedIconTitle>Selected Hug Type</SelectedIconTitle>\n          <HugIcon\n            type={selectedType}\n            size=\"lg\"\n            showBackground\n            isSelected\n          />\n          <SelectedIconDetails>\n            <SelectedIconName>{HUG_ICONS[selectedType]?.name}</SelectedIconName>\n            <SelectedIconDescription>{selectedDescription}</SelectedIconDescription>\n          </SelectedIconDetails>\n        </SelectedIconSection>\n      )}\n    </GalleryContainer>\n  );\n};\n\nHugIconGallery.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  showSelectedSection: PropTypes.bool,\n  defaultSelectedType: PropTypes.oneOf(Object.keys(HUG_ICONS)),\n  onSelectHugType: PropTypes.func\n};\n\nexport default HugIconGallery;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { Link, useNavigate } from 'react-router-dom';\nimport SimpleLayout from '../../layouts/SimpleLayout';\nimport HugIconGallery from '../../components/HugIconGallery';\nimport HugIcon from '../../components/HugIcon';\nimport { getHugTypes, getHugTypeColor, getHugTypeDisplayName } from '../../utils/hugIcons';\n\n// Styled components\nconst PageContainer = styled.div`\n  padding: 16px;\n  width: 100%;\n  max-width: 800px;\n  margin: 0 auto;\n`;\n\nconst PageHeader = styled.div`\n  margin-bottom: 24px;\n`;\n\nconst Title = styled.h1`\n  font-size: 2rem;\n  color: #333;\n  margin: 0 0 8px 0;\n`;\n\nconst Description = styled.p`\n  font-size: 1rem;\n  color: #666;\n  margin: 0 0 16px 0;\n`;\n\nconst Section = styled.div`\n  margin-bottom: 32px;\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.5rem;\n  color: #333;\n  margin: 0 0 16px 0;\n`;\n\nconst CardGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));\n  gap: 16px;\n  margin-bottom: 24px;\n  \n  @media (max-width: 480px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n\nconst IconCard = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 16px;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n  border: 2px solid ${props => props.isSelected ? props.color : 'transparent'};\n`;\n\nconst IconName = styled.h3`\n  font-size: 0.9rem;\n  color: #333;\n  margin: 8px 0 0 0;\n  text-align: center;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 24px;\n`;\n\nconst Button = styled.button`\n  padding: 12px 24px;\n  background-color: #4a90e2;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  \n  &:hover {\n    background-color: #3a80d2;\n  }\n  \n  &:active {\n    transform: translateY(1px);\n  }\n`;\n\n// Animation variants\nconst cardVariants = {\n  hover: {\n    scale: 1.05,\n    boxShadow: '0 5px 15px rgba(0,0,0,0.1)',\n    transition: { type: 'spring', stiffness: 300, damping: 15 }\n  },\n  tap: {\n    scale: 0.98,\n    transition: { type: 'spring', stiffness: 300, damping: 15 }\n  }\n};\n\n/**\n * HugGalleryDemo page\n * Demonstrates the different hug icons and how they can be used\n */\nconst HugGalleryDemo = () => {\n  const navigate = useNavigate();\n  const [selectedHugType, setSelectedHugType] = useState('standard');\n  \n  // Handle hug type selection\n  const handleSelectHugType = (type) => {\n    setSelectedHugType(type);\n  };\n  \n  // Go back to the dashboard\n  const handleBackToDashboard = () => {\n    navigate('/dashboard');\n  };\n  \n  return (\n    <SimpleLayout>\n      <PageContainer>\n        <PageHeader>\n          <Title>Hug Icon Gallery</Title>\n          <Description>\n            Explore the different types of hugs available in the HugMeNow app.\n            These icons are used throughout the application to represent different\n            types of virtual hugs that you can send to friends and loved ones.\n          </Description>\n        </PageHeader>\n        \n        <Section>\n          <SectionTitle>Individual Hug Icons</SectionTitle>\n          <CardGrid>\n            {getHugTypes().map((hugType) => (\n              <IconCard \n                key={hugType}\n                whileHover=\"hover\"\n                whileTap=\"tap\"\n                variants={cardVariants}\n                isSelected={selectedHugType === hugType}\n                color={getHugTypeColor(hugType)}\n                onClick={() => handleSelectHugType(hugType)}\n              >\n                <HugIcon \n                  type={hugType} \n                  size=\"md\" \n                  showBackground={false}\n                />\n                <IconName>{getHugTypeDisplayName(hugType)}</IconName>\n              </IconCard>\n            ))}\n          </CardGrid>\n        </Section>\n        \n        <Section>\n          <SectionTitle>Hug Icon Gallery Component</SectionTitle>\n          <HugIconGallery \n            title=\"Select a Hug Type\"\n            description=\"Choose the type of hug you want to send\"\n            defaultSelectedType={selectedHugType}\n            onSelectHugType={handleSelectHugType}\n          />\n        </Section>\n        \n        <ButtonContainer>\n          <Link to=\"/login\">\n            <Button>\n              Sign In to HugMeNow\n            </Button>\n          </Link>\n        </ButtonContainer>\n      </PageContainer>\n    </SimpleLayout>\n  );\n};\n\nexport default HugGalleryDemo;"],"names":["ReactPropTypesSecret","ReactPropTypesSecret_1","require$$0","emptyFunction","emptyFunctionWithReset","factoryWithThrowingShims","shim","props","propName","componentName","location","propFullName","secret","err","getShim","ReactPropTypes","propTypesModule","IconContainer","styled","motion","IconWrapper","StyledIcon","IconLabel","iconVariants","HugIcon","type","size","showLabel","showBackground","isSelected","animate","margin","onClick","iconSrc","getHugIconByType","color","getHugTypeColor","name","getHugTypeDisplayName","jsxs","jsx","PropTypes","GalleryContainer","GalleryHeader","GalleryTitle","GalleryDescription","GalleryGrid","SelectedIconSection","SelectedIconTitle","SelectedIconDetails","SelectedIconName","SelectedIconDescription","galleryVariants","fadeInVariants","HugIconGallery","title","description","showSelectedSection","defaultSelectedType","onSelectHugType","selectedType","setSelectedType","useState","useEffect","handleSelectIcon","selectedDescription","getHugTypeDescription","HUG_ICONS","hugType","_a","PageContainer","PageHeader","Title","Description","Section","SectionTitle","CardGrid","IconCard","IconName","ButtonContainer","Button","cardVariants","HugGalleryDemo","useNavigate","selectedHugType","setSelectedHugType","handleSelectHugType","SimpleLayout","getHugTypes","Link"],"mappings":"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","x_google_ignoreList":[0,1,2]}