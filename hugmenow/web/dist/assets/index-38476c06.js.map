{"version":3,"file":"index-38476c06.js","sources":["../../src/layouts/SimpleLayout.jsx","../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../node_modules/prop-types/factoryWithThrowingShims.js","../../node_modules/prop-types/index.js","../../src/assets/icons/StandardHug.svg","../../src/assets/icons/SupportiveHug.svg","../../src/assets/icons/GroupHug.svg","../../src/assets/icons/ComfortingHug.svg","../../src/assets/icons/EnthusiasticHug.svg","../../src/assets/icons/VirtualHug.svg","../../src/utils/hugIcons.js","../../src/components/HugIcon/index.js","../../src/components/HugIconGallery/index.js","../../src/pages/HugGalleryDemo/index.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\n/**\n * SimpleLayout Component\n * \n * A minimal layout for static pages without authentication requirements\n * This layout doesn't include navigation bars or authenticated components\n */\nconst LayoutContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  background-color: ${props => props.theme.colors.background.primary};\n`;\n\nconst MainContent = styled.main`\n  flex: 1;\n  padding: 20px;\n`;\n\nconst SimpleLayout = ({ children }) => {\n  return (\n    <LayoutContainer>\n      <MainContent>\n        {children}\n      </MainContent>\n    </LayoutContainer>\n  );\n};\n\nexport default SimpleLayout;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","export default \"__VITE_ASSET__a26266bc__\"","export default \"__VITE_ASSET__a118d8d5__\"","export default \"__VITE_ASSET__f15c6cb2__\"","export default \"__VITE_ASSET__748e351c__\"","export default \"__VITE_ASSET__07c2c5c1__\"","export default \"__VITE_ASSET__0800d894__\"","/**\n * Utility for accessing hug icons throughout the application\n * Provides consistent access to icon assets for all hug types\n */\n\n// Import SVG icons\nimport StandardHugIcon from '../assets/icons/StandardHug.svg';\nimport SupportiveHugIcon from '../assets/icons/SupportiveHug.svg';\nimport GroupHugIcon from '../assets/icons/GroupHug.svg';\nimport ComfortingHugIcon from '../assets/icons/ComfortingHug.svg';\nimport EnthusiasticHugIcon from '../assets/icons/EnthusiasticHug.svg';\nimport VirtualHugIcon from '../assets/icons/VirtualHug.svg';\n\n/**\n * Object containing all hug icons mapped by their type\n */\nexport const HUG_ICONS = {\n  standard: {\n    icon: StandardHugIcon,\n    name: 'Standard Hug',\n    color: '#FFC107',\n    description: 'A warm, friendly hug to show you care'\n  },\n  supportive: {\n    icon: SupportiveHugIcon,\n    name: 'Supportive Hug',\n    color: '#FFA726',\n    description: 'A reassuring hug when someone needs support'\n  },\n  group: {\n    icon: GroupHugIcon,\n    name: 'Group Hug',\n    color: '#4CAF50',\n    description: 'Bring everyone together with a group hug'\n  },\n  comforting: {\n    icon: ComfortingHugIcon,\n    name: 'Comforting Hug',\n    color: '#5C6BC0',\n    description: 'A gentle hug to comfort in difficult times'\n  },\n  enthusiastic: {\n    icon: EnthusiasticHugIcon,\n    name: 'Enthusiastic Hug',\n    color: '#FF7043',\n    description: 'An energetic hug to celebrate good news'\n  },\n  virtual: {\n    icon: VirtualHugIcon,\n    name: 'Virtual Hug',\n    color: '#7E57C2',\n    description: 'A digital hug across any distance'\n  }\n};\n\n/**\n * Get hug icon by type\n * @param {string} type - Type of hug icon to retrieve\n * @returns {string} URL to the SVG icon\n */\nexport const getHugIconByType = (type) => {\n  const hugType = type?.toLowerCase() || 'standard';\n  return HUG_ICONS[hugType]?.icon || HUG_ICONS.standard.icon;\n};\n\n/**\n * Get all available hug types\n * @returns {Array<string>} Array of hug type names\n */\nexport const getHugTypes = () => {\n  return Object.keys(HUG_ICONS);\n};\n\n/**\n * Get color associated with hug type\n * @param {string} type - Type of hug \n * @returns {string} Hex color code\n */\nexport const getHugTypeColor = (type) => {\n  const hugType = type?.toLowerCase() || 'standard';\n  return HUG_ICONS[hugType]?.color || HUG_ICONS.standard.color;\n};\n\n/**\n * Get display name for hug type\n * @param {string} type - Type of hug\n * @returns {string} Display name\n */\nexport const getHugTypeDisplayName = (type) => {\n  const hugType = type?.toLowerCase() || 'standard';\n  return HUG_ICONS[hugType]?.name || HUG_ICONS.standard.name;\n};\n\n/**\n * Get description for hug type\n * @param {string} type - Type of hug\n * @returns {string} Description\n */\nexport const getHugTypeDescription = (type) => {\n  const hugType = type?.toLowerCase() || 'standard';\n  return HUG_ICONS[hugType]?.description || HUG_ICONS.standard.description;\n};\n\nexport default {\n  HUG_ICONS,\n  getHugIconByType,\n  getHugTypes,\n  getHugTypeColor,\n  getHugTypeDisplayName,\n  getHugTypeDescription\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { getHugIconByType, getHugTypeColor, getHugTypeDisplayName } from '../../utils/hugIcons';\n\n/**\n * Styled components for the HugIcon\n */\nconst IconContainer = styled(motion.div)`\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: ${props => props.margin || '0'};\n  cursor: ${props => props.onClick ? 'pointer' : 'default'};\n`;\n\nconst IconWrapper = styled(motion.div)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: ${props => {\n    switch (props.size) {\n      case 'xs': return '24px';\n      case 'sm': return '32px';\n      case 'md': return '48px';\n      case 'lg': return '64px';\n      case 'xl': return '96px';\n      default: return props.size || '48px';\n    }\n  }};\n  height: ${props => {\n    switch (props.size) {\n      case 'xs': return '24px';\n      case 'sm': return '32px';\n      case 'md': return '48px';\n      case 'lg': return '64px';\n      case 'xl': return '96px';\n      default: return props.size || '48px';\n    }\n  }};\n  background-color: ${props => props.showBackground ? props.theme.colors.background.secondary : 'transparent'};\n  border-radius: 50%;\n  padding: ${props => props.showBackground ? '8px' : '0'};\n  border: ${props => props.isSelected ? `2px solid ${props.color || props.theme.colors.primary}` : 'none'};\n  box-shadow: ${props => props.isSelected ? '0 0 10px rgba(0,0,0,0.1)' : 'none'};\n`;\n\nconst StyledIcon = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nconst IconLabel = styled.span`\n  margin-top: 8px;\n  font-size: ${props => props.theme.typography.sizes.small};\n  color: ${props => props.theme.colors.text.primary};\n  text-align: center;\n`;\n\n/**\n * Animation variants for the HugIcon\n */\nconst iconVariants = {\n  initial: { scale: 1 },\n  hover: { scale: 1.1 },\n  tap: { scale: 0.95 },\n  selected: { \n    scale: 1.05,\n    transition: { \n      type: 'spring',\n      stiffness: 400,\n      damping: 10\n    }\n  }\n};\n\n/**\n * HugIcon Component\n * Displays a hug icon with optional label and animations\n */\nconst HugIcon = ({\n  /** Type of hug icon to display */\n  type = 'standard',\n  /** Size of the icon */\n  size = 'md',\n  /** Whether to show the label below the icon */\n  showLabel = false,\n  /** Whether to show a background behind the icon */\n  showBackground = false,\n  /** Whether the icon should be highlighted */\n  isSelected = false,\n  /** Whether to apply animations to the icon */\n  animate = true,\n  /** CSS margin value */\n  margin,\n  /** Click handler for the icon */\n  onClick\n}) => {\n  // Get the icon source and color based on the type\n  const iconSrc = getHugIconByType(type);\n  const color = getHugTypeColor(type);\n  const name = getHugTypeDisplayName(type);\n\n  return (\n    <IconContainer \n      margin={margin}\n      onClick={onClick}\n      data-testid={`hug-icon-${type}`}\n    >\n      <IconWrapper \n        size={size}\n        showBackground={showBackground}\n        isSelected={isSelected}\n        color={color}\n        initial=\"initial\"\n        whileHover={animate ? \"hover\" : \"\"}\n        whileTap={animate ? \"tap\" : \"\"}\n        animate={isSelected && animate ? \"selected\" : \"initial\"}\n        variants={animate ? iconVariants : {}}\n      >\n        <StyledIcon \n          src={iconSrc} \n          alt={`${name} icon`} \n        />\n      </IconWrapper>\n      \n      {showLabel && (\n        <IconLabel>{name}</IconLabel>\n      )}\n    </IconContainer>\n  );\n};\n\nHugIcon.propTypes = {\n  type: PropTypes.oneOf(['standard', 'supportive', 'group', 'comforting', 'enthusiastic', 'virtual']),\n  size: PropTypes.oneOfType([\n    PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n    PropTypes.string\n  ]),\n  showLabel: PropTypes.bool,\n  showBackground: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  animate: PropTypes.bool,\n  margin: PropTypes.string,\n  onClick: PropTypes.func\n};\n\nexport default HugIcon;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { HUG_ICONS, getHugTypeDescription } from '../../utils/hugIcons';\nimport HugIcon from '../HugIcon';\n\nconst GalleryContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  background-color: ${props => props.theme.colors.background.primary};\n  border-radius: ${props => props.theme.borderRadius};\n  padding: 16px;\n  box-shadow: ${props => props.theme.shadows.light};\n`;\n\nconst GalleryHeader = styled.div`\n  margin-bottom: 16px;\n`;\n\nconst GalleryTitle = styled.h3`\n  font-size: ${props => props.theme.typography.sizes.large};\n  color: ${props => props.theme.colors.text.primary};\n  margin: 0 0 4px 0;\n`;\n\nconst GalleryDescription = styled.p`\n  font-size: ${props => props.theme.typography.sizes.small};\n  color: ${props => props.theme.colors.text.secondary};\n  margin: 0;\n`;\n\nconst GalleryGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));\n  gap: 16px;\n  margin-bottom: ${props => props.showSelectedSection ? '16px' : '0'};\n  \n  @media (max-width: 480px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`;\n\nconst SelectedIconSection = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 16px;\n  margin-top: 16px;\n  background-color: ${props => props.theme.colors.background.secondary};\n  border-radius: ${props => props.theme.borderRadius};\n`;\n\nconst SelectedIconTitle = styled.h4`\n  font-size: ${props => props.theme.typography.sizes.medium};\n  color: ${props => props.theme.colors.text.primary};\n  margin: 0 0 16px 0;\n  text-align: center;\n`;\n\nconst SelectedIconDetails = styled.div`\n  margin-top: 16px;\n  text-align: center;\n`;\n\nconst SelectedIconName = styled.h5`\n  font-size: ${props => props.theme.typography.sizes.medium};\n  color: ${props => props.theme.colors.text.primary};\n  margin: 0 0 8px 0;\n`;\n\nconst SelectedIconDescription = styled.p`\n  font-size: ${props => props.theme.typography.sizes.small};\n  color: ${props => props.theme.colors.text.secondary};\n  margin: 0;\n`;\n\n/**\n * Animation variants for the gallery items\n */\nconst galleryVariants = {\n  hidden: { opacity: 0 },\n  visible: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\nconst fadeInVariants = {\n  hidden: { opacity: 0, y: 20 },\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      type: 'spring',\n      stiffness: 300,\n      damping: 25\n    }\n  }\n};\n\n/**\n * HugIconGallery Component\n * Displays a gallery of all available hug icons with selection functionality\n */\nconst HugIconGallery = ({\n  /** Title for the gallery section */\n  title = 'Hug Types',\n  /** Description for the gallery */\n  description = 'Select a hug type to send',\n  /** Whether to show the selected icon section */\n  showSelectedSection = true,\n  /** Default selected hug type */\n  defaultSelectedType = 'standard',\n  /** Callback when a hug type is selected */\n  onSelectHugType\n}) => {\n  const [selectedType, setSelectedType] = useState(defaultSelectedType);\n  \n  // Update selected type if default changes\n  useEffect(() => {\n    setSelectedType(defaultSelectedType);\n  }, [defaultSelectedType]);\n  \n  // Handle icon selection\n  const handleSelectIcon = (type) => {\n    setSelectedType(type);\n    if (onSelectHugType) {\n      onSelectHugType(type);\n    }\n  };\n  \n  // Get the description for the selected hug type\n  const selectedDescription = getHugTypeDescription(selectedType);\n  \n  return (\n    <GalleryContainer data-testid=\"hug-icon-gallery\">\n      <GalleryHeader>\n        <GalleryTitle>{title}</GalleryTitle>\n        <GalleryDescription>{description}</GalleryDescription>\n      </GalleryHeader>\n      \n      <motion.div\n        variants={galleryVariants}\n        initial=\"hidden\"\n        animate=\"visible\"\n      >\n        <GalleryGrid showSelectedSection={showSelectedSection}>\n          {Object.keys(HUG_ICONS).map((hugType) => (\n            <motion.div key={hugType} variants={fadeInVariants}>\n              <HugIcon\n                type={hugType}\n                showLabel\n                showBackground\n                isSelected={selectedType === hugType}\n                margin=\"8px 0\"\n                onClick={() => handleSelectIcon(hugType)}\n              />\n            </motion.div>\n          ))}\n        </GalleryGrid>\n      </motion.div>\n      \n      {showSelectedSection && (\n        <SelectedIconSection\n          initial={{ opacity: 0, height: 0 }}\n          animate={{ opacity: 1, height: 'auto' }}\n          transition={{ duration: 0.3 }}\n        >\n          <SelectedIconTitle>Selected Hug Type</SelectedIconTitle>\n          <HugIcon\n            type={selectedType}\n            size=\"lg\"\n            showBackground\n            isSelected\n          />\n          <SelectedIconDetails>\n            <SelectedIconName>{HUG_ICONS[selectedType]?.name}</SelectedIconName>\n            <SelectedIconDescription>{selectedDescription}</SelectedIconDescription>\n          </SelectedIconDetails>\n        </SelectedIconSection>\n      )}\n    </GalleryContainer>\n  );\n};\n\nHugIconGallery.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  showSelectedSection: PropTypes.bool,\n  defaultSelectedType: PropTypes.oneOf(Object.keys(HUG_ICONS)),\n  onSelectHugType: PropTypes.func\n};\n\nexport default HugIconGallery;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { Link, useNavigate } from 'react-router-dom';\nimport SimpleLayout from '../../layouts/SimpleLayout';\nimport HugIconGallery from '../../components/HugIconGallery';\nimport HugIcon from '../../components/HugIcon';\nimport { getHugTypes, getHugTypeColor, getHugTypeDisplayName } from '../../utils/hugIcons';\n\n// Styled components\nconst PageContainer = styled.div`\n  padding: 16px;\n  width: 100%;\n  max-width: 800px;\n  margin: 0 auto;\n`;\n\nconst PageHeader = styled.div`\n  margin-bottom: 24px;\n`;\n\nconst Title = styled.h1`\n  font-size: ${props => props.theme.typography.sizes.xxlarge};\n  color: ${props => props.theme.colors.text.primary};\n  margin: 0 0 8px 0;\n`;\n\nconst Description = styled.p`\n  font-size: ${props => props.theme.typography.sizes.medium};\n  color: ${props => props.theme.colors.text.secondary};\n  margin: 0 0 16px 0;\n`;\n\nconst Section = styled.div`\n  margin-bottom: 32px;\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: ${props => props.theme.typography.sizes.large};\n  color: ${props => props.theme.colors.text.primary};\n  margin: 0 0 16px 0;\n`;\n\nconst CardGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));\n  gap: 16px;\n  margin-bottom: 24px;\n  \n  @media (max-width: 480px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n\nconst IconCard = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 16px;\n  background-color: ${props => props.theme.colors.background.secondary};\n  border-radius: ${props => props.theme.borderRadius};\n  box-shadow: ${props => props.theme.shadows.light};\n  cursor: pointer;\n  border: 2px solid ${props => props.isSelected ? props.color : 'transparent'};\n`;\n\nconst IconName = styled.h3`\n  font-size: ${props => props.theme.typography.sizes.small};\n  color: ${props => props.theme.colors.text.primary};\n  margin: 8px 0 0 0;\n  text-align: center;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 24px;\n`;\n\nconst Button = styled.button`\n  padding: 12px 24px;\n  background-color: ${props => props.theme.colors.primary};\n  color: white;\n  border: none;\n  border-radius: ${props => props.theme.borderRadius};\n  font-size: ${props => props.theme.typography.sizes.medium};\n  font-weight: 600;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  \n  &:hover {\n    background-color: ${props => props.theme.colors.primaryDark};\n  }\n  \n  &:active {\n    transform: translateY(1px);\n  }\n`;\n\n// Animation variants\nconst cardVariants = {\n  hover: {\n    scale: 1.05,\n    boxShadow: '0 5px 15px rgba(0,0,0,0.1)',\n    transition: { type: 'spring', stiffness: 300, damping: 15 }\n  },\n  tap: {\n    scale: 0.98,\n    transition: { type: 'spring', stiffness: 300, damping: 15 }\n  }\n};\n\n/**\n * HugGalleryDemo page\n * Demonstrates the different hug icons and how they can be used\n */\nconst HugGalleryDemo = () => {\n  const navigate = useNavigate();\n  const [selectedHugType, setSelectedHugType] = useState('standard');\n  \n  // Handle hug type selection\n  const handleSelectHugType = (type) => {\n    setSelectedHugType(type);\n  };\n  \n  // Go back to the dashboard\n  const handleBackToDashboard = () => {\n    navigate('/dashboard');\n  };\n  \n  return (\n    <SimpleLayout>\n      <PageContainer>\n        <PageHeader>\n          <Title>Hug Icon Gallery</Title>\n          <Description>\n            Explore the different types of hugs available in the HugMeNow app.\n            These icons are used throughout the application to represent different\n            types of virtual hugs that you can send to friends and loved ones.\n          </Description>\n        </PageHeader>\n        \n        <Section>\n          <SectionTitle>Individual Hug Icons</SectionTitle>\n          <CardGrid>\n            {getHugTypes().map((hugType) => (\n              <IconCard \n                key={hugType}\n                whileHover=\"hover\"\n                whileTap=\"tap\"\n                variants={cardVariants}\n                isSelected={selectedHugType === hugType}\n                color={getHugTypeColor(hugType)}\n                onClick={() => handleSelectHugType(hugType)}\n              >\n                <HugIcon \n                  type={hugType} \n                  size=\"md\" \n                  showBackground={false}\n                />\n                <IconName>{getHugTypeDisplayName(hugType)}</IconName>\n              </IconCard>\n            ))}\n          </CardGrid>\n        </Section>\n        \n        <Section>\n          <SectionTitle>Hug Icon Gallery Component</SectionTitle>\n          <HugIconGallery \n            title=\"Select a Hug Type\"\n            description=\"Choose the type of hug you want to send\"\n            defaultSelectedType={selectedHugType}\n            onSelectHugType={handleSelectHugType}\n          />\n        </Section>\n        \n        <ButtonContainer>\n          <Link to=\"/login\">\n            <Button>\n              Sign In to HugMeNow\n            </Button>\n          </Link>\n        </ButtonContainer>\n      </PageContainer>\n    </SimpleLayout>\n  );\n};\n\nexport default HugGalleryDemo;"],"names":["LayoutContainer","styled","props","MainContent","SimpleLayout","children","jsx","ReactPropTypesSecret","ReactPropTypesSecret_1","require$$0","emptyFunction","emptyFunctionWithReset","factoryWithThrowingShims","shim","propName","componentName","location","propFullName","secret","err","getShim","ReactPropTypes","propTypesModule","StandardHugIcon","SupportiveHugIcon","GroupHugIcon","ComfortingHugIcon","EnthusiasticHugIcon","VirtualHugIcon","HUG_ICONS","getHugIconByType","type","hugType","_a","getHugTypes","getHugTypeColor","getHugTypeDisplayName","getHugTypeDescription","IconContainer","motion","IconWrapper","StyledIcon","IconLabel","iconVariants","HugIcon","size","showLabel","showBackground","isSelected","animate","margin","onClick","iconSrc","color","name","jsxs","PropTypes","GalleryContainer","GalleryHeader","GalleryTitle","GalleryDescription","GalleryGrid","SelectedIconSection","SelectedIconTitle","SelectedIconDetails","SelectedIconName","SelectedIconDescription","galleryVariants","fadeInVariants","HugIconGallery","title","description","showSelectedSection","defaultSelectedType","onSelectHugType","selectedType","setSelectedType","useState","useEffect","handleSelectIcon","selectedDescription","PageContainer","PageHeader","Title","Description","Section","SectionTitle","CardGrid","IconCard","IconName","ButtonContainer","Button","cardVariants","HugGalleryDemo","useNavigate","selectedHugType","setSelectedHugType","handleSelectHugType","Link"],"mappings":"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","x_google_ignoreList":[1,2,3]}