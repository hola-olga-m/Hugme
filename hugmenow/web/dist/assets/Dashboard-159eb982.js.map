{"version":3,"file":"Dashboard-159eb982.js","sources":["../../src/components/common/LoadingSpinner.jsx","../../src/components/FriendsMoodList.jsx","../../src/assets/icons/happy-face.svg","../../src/assets/icons/hug-icon.svg","../../src/assets/icons/mood-tracker.svg","../../src/assets/icons/community.svg","../../src/assets/icons/png/ComfortingHug.png","../../src/assets/icons/png/EnthusiasticHug.png","../../src/assets/icons/png/GroupHug.png","../../src/assets/icons/png/StandardHug.png","../../src/assets/icons/png/SupportiveHug.png","../../src/assets/icons/png/VirtualHug.png","../../src/assets/icons/png/RelaxingHug.png","../../src/assets/icons/png/WelcomeHug.png","../../src/assets/icons/png/FriendlyHug.png","../../src/assets/icons/png/GentleHug.png","../../src/assets/icons/png/FamilyHug.png","../../src/assets/icons/png/SmilingHug.png","../../src/components/ui/IconComponent.jsx","../../src/components/dashboard/DashboardStats.jsx","../../../../node_modules/date-fns/constants.js","../../../../node_modules/date-fns/constructFrom.js","../../../../node_modules/date-fns/toDate.js","../../../../node_modules/date-fns/_lib/defaultOptions.js","../../../../node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","../../../../node_modules/date-fns/_lib/normalizeDates.js","../../../../node_modules/date-fns/compareAsc.js","../../../../node_modules/date-fns/constructNow.js","../../../../node_modules/date-fns/differenceInCalendarMonths.js","../../../../node_modules/date-fns/_lib/getRoundingMethod.js","../../../../node_modules/date-fns/differenceInMilliseconds.js","../../../../node_modules/date-fns/endOfDay.js","../../../../node_modules/date-fns/endOfMonth.js","../../../../node_modules/date-fns/isLastDayOfMonth.js","../../../../node_modules/date-fns/differenceInMonths.js","../../../../node_modules/date-fns/differenceInSeconds.js","../../../../node_modules/date-fns/locale/en-US/_lib/formatDistance.js","../../../../node_modules/date-fns/locale/_lib/buildFormatLongFn.js","../../../../node_modules/date-fns/locale/en-US/_lib/formatLong.js","../../../../node_modules/date-fns/locale/en-US/_lib/formatRelative.js","../../../../node_modules/date-fns/locale/_lib/buildLocalizeFn.js","../../../../node_modules/date-fns/locale/en-US/_lib/localize.js","../../../../node_modules/date-fns/locale/_lib/buildMatchFn.js","../../../../node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","../../../../node_modules/date-fns/locale/en-US/_lib/match.js","../../../../node_modules/date-fns/locale/en-US.js","../../../../node_modules/date-fns/formatDistance.js","../../../../node_modules/date-fns/formatDistanceToNow.js","../../src/components/dashboard/FriendMoodsWidget.jsx","../../src/components/dashboard/QuickSendHugWidget.jsx","../../src/components/dashboard/ReceivedHugsWidget.jsx","../../src/components/dashboard/QuickHugButton.jsx","../../src/components/dashboard/WelcomeHugButton.jsx","../../src/pages/Dashboard.jsx"],"sourcesContent":["import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\n\nconst SpinnerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 1.5rem;\n`;\n\nconst Spinner = styled.div`\n  width: 40px;\n  height: 40px;\n  border: 4px solid var(--gray-200);\n  border-top: 4px solid var(--primary-color);\n  border-radius: 50%;\n  animation: ${spin} 1s linear infinite;\n`;\n\nconst SpinnerText = styled.div`\n  margin-top: 1rem;\n  color: var(--gray-600);\n  font-size: 0.9rem;\n`;\n\nconst LoadingSpinner = ({ text = 'Loading...' }) => {\n  return (\n    <SpinnerContainer>\n      <Spinner />\n      {text && <SpinnerText>{text}</SpinnerText>}\n    </SpinnerContainer>\n  );\n};\n\nexport default LoadingSpinner;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useQuery } from '@apollo/client';\nimport { GET_FRIENDS_MOODS } from '../graphql/queries';\nimport LoadingSpinner from './common/LoadingSpinner';\nimport ErrorMessage from './common/ErrorMessage';\n\n// Styled components\nconst FriendsMoodsContainer = styled.div`\n  background-color: white;\n  border-radius: var(--border-radius-lg);\n  padding: 1.5rem;\n  box-shadow: var(--shadow-md);\n  margin-bottom: 2rem;\n`;\n\nconst MoodsHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1.5rem;\n  \n  h2 {\n    color: var(--gray-800);\n    margin: 0;\n  }\n`;\n\nconst RefreshButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--primary-color);\n  cursor: pointer;\n  font-size: 0.9rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  \n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst MoodsList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 1rem;\n  \n  @media (max-width: 640px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst MoodCard = styled.div`\n  border: 1px solid var(--gray-200);\n  border-radius: var(--border-radius);\n  padding: 1rem;\n  transition: var(--transition-base);\n  \n  &:hover {\n    box-shadow: var(--shadow-sm);\n    transform: translateY(-2px);\n  }\n`;\n\nconst MoodHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 0.5rem;\n`;\n\nconst MoodScore = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  \n  .emoji {\n    font-size: 1.5rem;\n  }\n  \n  .label {\n    font-weight: 500;\n    color: var(--gray-800);\n  }\n`;\n\nconst MoodDate = styled.div`\n  font-size: 0.8rem;\n  color: var(--gray-500);\n`;\n\nconst MoodNote = styled.p`\n  color: var(--gray-700);\n  font-size: 0.9rem;\n  margin: 0.5rem 0;\n  line-height: 1.4;\n`;\n\nconst UserInfo = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 1rem;\n  font-size: 0.8rem;\n  color: var(--gray-600);\n  \n  .avatar {\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n    background-color: var(--primary-light);\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: bold;\n    font-size: 0.7rem;\n    margin-right: 0.5rem;\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 2rem;\n  color: var(--gray-600);\n  \n  p {\n    margin-bottom: 1rem;\n  }\n`;\n\n// Helper functions\nconst getMoodEmoji = (intensity) => {\n  const emojis = ['😢', '😟', '😐', '🙂', '😄'];\n  return emojis[Math.min(Math.floor(intensity/2) - 1, 4)];\n};\n\nconst getMoodLabel = (intensity) => {\n  const labels = ['Very Sad', 'Sad', 'Neutral', 'Happy', 'Very Happy'];\n  return labels[Math.min(Math.floor(intensity/2) - 1, 4)];\n};\n\nconst getFormattedDate = (dateString) => {\n  const date = new Date(dateString);\n  return date.toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n  });\n};\n\nconst getInitials = (name) => {\n  if (!name) return '?';\n  return name\n    .split(' ')\n    .map(part => part[0])\n    .join('')\n    .toUpperCase()\n    .substring(0, 2);\n};\n\nconst FriendsMoodList = () => {\n  const { loading, error, data, refetch } = useQuery(GET_FRIENDS_MOODS);\n  \n  if (loading) return <LoadingSpinner text=\"Loading friends' moods...\" />;\n  \n  if (error) return <ErrorMessage error={error} />;\n  \n  // Extract moods from the GraphQL response\n  const friendsMoods = data?.friendsMoods || [];\n  \n  if (friendsMoods.length === 0) {\n    return (\n      <FriendsMoodsContainer>\n        <MoodsHeader>\n          <h2>Friends' Moods</h2>\n          <RefreshButton onClick={() => refetch()}>\n            <span>Refresh</span>\n          </RefreshButton>\n        </MoodsHeader>\n        <EmptyState>\n          <p>No friend moods have been shared yet.</p>\n          <p>Your friends' mood board will populate as they share their feelings.</p>\n        </EmptyState>\n      </FriendsMoodsContainer>\n    );\n  }\n  \n  return (\n    <FriendsMoodsContainer>\n      <MoodsHeader>\n        <h2>Friends' Moods</h2>\n        <RefreshButton onClick={() => refetch()}>\n          <span>Refresh</span>\n        </RefreshButton>\n      </MoodsHeader>\n      \n      <MoodsList>\n        {friendsMoods.map((mood) => (\n          <MoodCard key={mood.id}>\n            <MoodHeader>\n              <MoodScore>\n                <span className=\"emoji\">{getMoodEmoji(mood.intensity)}</span>\n                <span className=\"label\">{getMoodLabel(mood.intensity)}</span>\n              </MoodScore>\n              <MoodDate>{getFormattedDate(mood.createdAt)}</MoodDate>\n            </MoodHeader>\n            \n            {mood.note && <MoodNote>{mood.note}</MoodNote>}\n            \n            <UserInfo>\n              <div className=\"avatar\">{getInitials(mood.user?.name)}</div>\n              <span>{mood.user?.name || 'Anonymous User'}</span>\n            </UserInfo>\n          </MoodCard>\n        ))}\n      </MoodsList>\n    </FriendsMoodsContainer>\n  );\n};\n\nexport default FriendsMoodList;","export default \"__VITE_ASSET__18c0984b__\"","export default \"__VITE_ASSET__a552c3e1__\"","export default \"__VITE_ASSET__458b8591__\"","export default \"__VITE_ASSET__bdb084b4__\"","export default \"__VITE_ASSET__cb47f13d__\"","export default \"__VITE_ASSET__5ce7d239__\"","export default \"__VITE_ASSET__c876e738__\"","export default \"__VITE_ASSET__ff937dab__\"","export default \"__VITE_ASSET__241e2d16__\"","export default \"__VITE_ASSET__835694ca__\"","export default \"__VITE_ASSET__704fac60__\"","export default \"__VITE_ASSET__575d2f69__\"","export default \"__VITE_ASSET__668a36ae__\"","export default \"__VITE_ASSET__642f56d2__\"","export default \"__VITE_ASSET__15f96c17__\"","export default \"__VITE_ASSET__1217a788__\"","import React from 'react';\nimport { motion } from 'framer-motion';\nimport happyFace from '../../assets/icons/happy-face.svg';\nimport hugIcon from '../../assets/icons/hug-icon.svg';\nimport moodTracker from '../../assets/icons/mood-tracker.svg';\nimport community from '../../assets/icons/community.svg';\n\n// Import hug type PNGs\nimport ComfortingHug from '../../assets/icons/png/ComfortingHug.png';\nimport EnthusiasticHug from '../../assets/icons/png/EnthusiasticHug.png';\nimport GroupHug from '../../assets/icons/png/GroupHug.png';\nimport StandardHug from '../../assets/icons/png/StandardHug.png';\nimport SupportiveHug from '../../assets/icons/png/SupportiveHug.png';\nimport VirtualHug from '../../assets/icons/png/VirtualHug.png';\nimport RelaxingHug from '../../assets/icons/png/RelaxingHug.png';\nimport WelcomeHug from '../../assets/icons/png/WelcomeHug.png';\nimport FriendlyHug from '../../assets/icons/png/FriendlyHug.png';\nimport GentleHug from '../../assets/icons/png/GentleHug.png';\nimport FamilyHug from '../../assets/icons/png/FamilyHug.png';\nimport SmilingHug from '../../assets/icons/png/SmilingHug.png';\n\n// SVG data URIs for mood emojis\nconst moodEmojis = {\n  verySad: `data:image/svg+xml,%3Csvg width='40' height='40' viewBox='0 0 120 120' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='60' cy='60' r='50' fill='%23FFCDD2'/%3E%3Cpath d='M40 45C40 45 45 40 50 45' stroke='%23374151' stroke-width='3' stroke-linecap='round'/%3E%3Cpath d='M70 45C70 45 75 40 80 45' stroke='%23374151' stroke-width='3' stroke-linecap='round'/%3E%3Cpath d='M40 85C40 85 60 75 80 85' stroke='%23374151' stroke-width='3' stroke-linecap='round'/%3E%3C/svg%3E`,\n  \n  sad: `data:image/svg+xml,%3Csvg width='40' height='40' viewBox='0 0 120 120' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='60' cy='60' r='50' fill='%23FFCDD2'/%3E%3Cpath d='M40 50C40 50 45 45 50 50' stroke='%23374151' stroke-width='3' stroke-linecap='round'/%3E%3Cpath d='M70 50C70 50 75 45 80 50' stroke='%23374151' stroke-width='3' stroke-linecap='round'/%3E%3Cpath d='M40 80C40 80 60 70 80 80' stroke='%23374151' stroke-width='3' stroke-linecap='round'/%3E%3C/svg%3E`,\n  \n  neutral: `data:image/svg+xml,%3Csvg width='40' height='40' viewBox='0 0 120 120' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='60' cy='60' r='50' fill='%23FFCDD2'/%3E%3Cpath d='M40 50C40 50 45 45 50 50' stroke='%23374151' stroke-width='3' stroke-linecap='round'/%3E%3Cpath d='M70 50C70 50 75 45 80 50' stroke='%23374151' stroke-width='3' stroke-linecap='round'/%3E%3Cpath d='M40 75C40 75 60 75 80 75' stroke='%23374151' stroke-width='3' stroke-linecap='round'/%3E%3C/svg%3E`,\n  \n  happy: `data:image/svg+xml,%3Csvg width='40' height='40' viewBox='0 0 120 120' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='60' cy='60' r='50' fill='%23FFCDD2'/%3E%3Cpath d='M40 50C40 50 45 45 50 50' stroke='%23374151' stroke-width='3' stroke-linecap='round'/%3E%3Cpath d='M70 50C70 50 75 45 80 50' stroke='%23374151' stroke-width='3' stroke-linecap='round'/%3E%3Cpath d='M40 70C40 70 60 80 80 70' stroke='%23374151' stroke-width='3' stroke-linecap='round'/%3E%3C/svg%3E`,\n  \n  veryHappy: `data:image/svg+xml,%3Csvg width='40' height='40' viewBox='0 0 120 120' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='60' cy='60' r='50' fill='%23FFCDD2'/%3E%3Cpath d='M35 45C35 45 40 40 45 45' stroke='%23374151' stroke-width='3' stroke-linecap='round'/%3E%3Cpath d='M75 45C75 45 80 40 85 45' stroke='%23374151' stroke-width='3' stroke-linecap='round'/%3E%3Cpath d='M35 65C35 65 60 90 85 65' stroke='%23374151' stroke-width='3' stroke-linecap='round'/%3E%3C/svg%3E`,\n};\n\n// Hearts SVG\nconst heart = `data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z' fill='%23EC4899'/%3E%3C/svg%3E`;\n\n// Fire SVG for streak\nconst fire = `data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M12 2c3 4 5 6 9 7-4 4-7 8-7 13H10c0-5-3-9-7-13 4-1 6-3 9-7z' fill='%23F59E0B'/%3E%3C/svg%3E`;\n\n/**\n * Icon component for mood emojis and other SVG assets\n */\nexport const Icon = ({ type, score, size = 40, animate = true, ...props }) => {\n  // Handle mood type with score\n  if (type === 'mood' && score !== undefined) {\n    let moodType;\n    if (score === null) return <div style={{ width: size, height: size }}></div>;\n    if (score >= 8.5) moodType = 'veryHappy';\n    else if (score >= 7) moodType = 'happy';\n    else if (score >= 5) moodType = 'neutral';\n    else if (score >= 3) moodType = 'sad';\n    else moodType = 'verySad';\n    \n    const src = moodEmojis[moodType];\n    \n    if (animate) {\n      return (\n        <motion.img \n          src={src}\n          alt={`Mood level: ${moodType}`}\n          width={size}\n          height={size}\n          initial={{ scale: 0 }}\n          animate={{ \n            scale: 1,\n            rotate: [0, 10, -10, 0]\n          }}\n          transition={{ \n            type: \"spring\",\n            damping: 10,\n            stiffness: 100,\n            delay: 0.3\n          }}\n          {...props}\n        />\n      );\n    }\n    \n    return <img src={src} alt={`Mood level: ${moodType}`} width={size} height={size} {...props} />;\n  }\n  \n  // Fixed icon types\n  let src;\n  let alt;\n  \n  switch (type) {\n    case 'happyFace':\n      src = happyFace;\n      alt = 'Happy Face';\n      break;\n    case 'hugIcon':\n      src = hugIcon;\n      alt = 'Hug Icon';\n      break;\n    case 'moodTracker':\n      src = moodTracker;\n      alt = 'Mood Tracker';\n      break;\n    case 'community':\n      src = community;\n      alt = 'Community';\n      break;\n    case 'heart':\n      src = heart;\n      alt = 'Heart';\n      break;\n    case 'fire':\n      src = fire;\n      alt = 'Fire';\n      break;\n    // Hug type icons\n    case 'Comforting':\n    case 'ComfortingHug':\n      src = ComfortingHug;\n      alt = 'Comforting Hug';\n      break;\n    case 'Enthusiastic':\n    case 'EnthusiasticHug':\n      src = EnthusiasticHug;\n      alt = 'Enthusiastic Hug';\n      break;\n    case 'Group':\n    case 'GroupHug':\n      src = GroupHug;\n      alt = 'Group Hug';\n      break;\n    case 'Standard':\n    case 'StandardHug':\n      src = StandardHug;\n      alt = 'Standard Hug';\n      break;\n    case 'Supportive':\n    case 'SupportiveHug':\n      src = SupportiveHug;\n      alt = 'Supportive Hug';\n      break;\n    case 'Virtual':\n    case 'VirtualHug':\n      src = VirtualHug;\n      alt = 'Virtual Hug';\n      break;\n    case 'Relaxing':\n    case 'RelaxingHug':\n      src = RelaxingHug;\n      alt = 'Relaxing Hug';\n      break;\n    case 'Welcome':\n    case 'WelcomeHug':\n      src = WelcomeHug;\n      alt = 'Welcome Hug';\n      break;\n    case 'Friendly':\n    case 'FriendlyHug':\n      src = FriendlyHug;\n      alt = 'Friendly Hug';\n      break;\n    case 'Gentle':\n    case 'GentleHug':\n      src = GentleHug;\n      alt = 'Gentle Hug';\n      break;\n    case 'Family':\n    case 'FamilyHug':\n      src = FamilyHug;\n      alt = 'Family Hug';\n      break;\n    case 'Smiling':\n    case 'SmilingHug':\n      src = SmilingHug;\n      alt = 'Smiling Hug';\n      break;\n    default:\n      // For any other hug type, fall back to standard\n      if (type && type.includes('Hug')) {\n        src = StandardHug;\n        alt = type;\n      } else {\n        return null;\n      }\n  }\n  \n  if (animate) {\n    // More elaborate animation for hug icons\n    if (alt && alt.includes('Hug')) {\n      return (\n        <motion.img \n          src={src} \n          alt={alt}\n          width={size}\n          height={size}\n          initial={{ scale: 0, rotate: -5 }}\n          animate={{ \n            scale: 1, \n            rotate: 0,\n            y: [0, -5, 0]\n          }}\n          whileHover={{ \n            scale: 1.1, \n            rotate: [-2, 2, -2, 0],\n            transition: { \n              rotate: { repeat: 0, duration: 0.5 },\n              scale: { duration: 0.2 }\n            }\n          }}\n          transition={{ \n            type: \"spring\",\n            damping: 12,\n            stiffness: 150,\n            delay: 0.2,\n            y: {\n              repeat: Infinity,\n              repeatType: \"reverse\",\n              duration: 1.5,\n              ease: \"easeInOut\"\n            }\n          }}\n          {...props}\n        />\n      );\n    }\n    \n    // Standard animation for other icons\n    return (\n      <motion.img \n        src={src} \n        alt={alt}\n        width={size}\n        height={size}\n        initial={{ scale: 0 }}\n        animate={{ scale: 1 }}\n        transition={{ \n          type: \"spring\",\n          damping: 15,\n          stiffness: 200,\n          delay: 0.2\n        }}\n        {...props}\n      />\n    );\n  }\n  \n  return <img src={src} alt={alt} width={size} height={size} {...props} />;\n}\n\n/**\n * Animated avatar component\n */\nexport const UserAvatar = ({ name, size = 40, bgColor = \"#4F46E5\", ...props }) => {\n  const initial = name ? name[0].toUpperCase() : \"?\";\n  \n  return (\n    <motion.div\n      className=\"user-avatar\"\n      style={{\n        width: size,\n        height: size,\n        borderRadius: '50%',\n        background: bgColor,\n        color: 'white',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontWeight: 'bold',\n        fontSize: size / 2,\n        ...props.style\n      }}\n      initial={{ scale: 0, opacity: 0 }}\n      animate={{ scale: 1, opacity: 1 }}\n      transition={{ \n        type: \"spring\",\n        damping: 12,\n        stiffness: 200,\n        delay: 0.1\n      }}\n      {...props}\n    >\n      {initial}\n    </motion.div>\n  );\n};\n\nexport default Icon;","import React, { useMemo, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { Icon } from '../ui/IconComponent';\nimport { useMeshSdk } from '../../hooks/useMeshSdk';\n\n// Styled components\nconst StatsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 16px;\n  margin-bottom: 30px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media (max-width: 480px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst StatCard = styled(motion.div)`\n  background: white;\n  border-radius: 16px;\n  padding: 20px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  position: relative;\n  overflow: hidden;\n  transition: transform 0.2s, box-shadow 0.2s;\n\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst StatValue = styled.div`\n  font-size: 2.5rem;\n  font-weight: 700;\n  margin: 10px 0 5px;\n  color: var(--primary-color);\n  position: relative;\n  z-index: 1;\n`;\n\nconst StatLabel = styled.div`\n  font-size: 1rem;\n  color: var(--gray-600);\n  font-weight: 500;\n  position: relative;\n  z-index: 1;\n`;\n\nconst IconContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 48px;\n  height: 48px;\n  border-radius: 12px;\n  background-color: ${props => props.bgColor || 'var(--primary-lightest)'};\n  color: ${props => props.iconColor || 'var(--primary-color)'};\n  position: relative;\n  z-index: 1;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);\n`;\n\nconst BackgroundDecoration = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 120px;\n  height: 120px;\n  opacity: 0.05;\n  z-index: 0;\n  \n  svg {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\n// Animation variants\nconst containerVariants = {\n  hidden: { opacity: 0 },\n  visible: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.15\n    }\n  }\n};\n\nconst cardVariants = {\n  hidden: { y: 20, opacity: 0 },\n  visible: {\n    y: 0,\n    opacity: 1,\n    transition: {\n      type: 'spring',\n      damping: 12,\n      stiffness: 200\n    }\n  }\n};\n\n/**\n * Enhanced dashboard statistics component with animated cards\n * using PNG icons for visual appeal\n */\nconst DashboardStats = () => {\n  // Use Mesh SDK for data fetching\n  const { getMoodStreak, getUserMoods, getSentHugs, getReceivedHugs } = useMeshSdk();\n  \n  // State for stats data\n  const [stats, setStats] = useState({\n    moodStreak: 0,\n    totalMoodEntries: 0,\n    hugsSent: 0,\n    hugsReceived: 0\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  \n  // Fetch data using Mesh SDK\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        setIsLoading(true);\n        \n        // Fetch all data in parallel\n        const [moodStreak, userMoods, sentHugs, receivedHugs] = await Promise.all([\n          getMoodStreak(),\n          getUserMoods(),\n          getSentHugs(),\n          getReceivedHugs()\n        ]);\n        \n        // Update stats\n        setStats({\n          moodStreak: moodStreak?.currentStreak || 0,\n          totalMoodEntries: userMoods?.length || 0,\n          hugsSent: sentHugs?.length || 0,\n          hugsReceived: receivedHugs?.length || 0\n        });\n      } catch (error) {\n        console.error('Error fetching dashboard stats:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    \n    fetchData();\n  }, [getMoodStreak, getUserMoods, getSentHugs, getReceivedHugs]);\n  \n  // Define stats cards data with updated styling\n  const statsCards = [\n    {\n      label: 'Day Streak',\n      value: stats.moodStreak,\n      icon: 'fire',\n      color: '#FF9800',\n      bgColor: 'rgba(255, 152, 0, 0.1)',\n      decoration: (\n        <svg viewBox=\"0 0 120 120\" fill=\"none\">\n          <circle cx=\"100\" cy=\"20\" r=\"80\" fill=\"#FF9800\" />\n        </svg>\n      )\n    },\n    {\n      label: 'Moods Tracked',\n      value: stats.totalMoodEntries,\n      icon: 'moodTracker',\n      color: '#4CAF50',\n      bgColor: 'rgba(76, 175, 80, 0.1)',\n      decoration: (\n        <svg viewBox=\"0 0 120 120\" fill=\"none\">\n          <circle cx=\"100\" cy=\"20\" r=\"80\" fill=\"#4CAF50\" />\n        </svg>\n      )\n    },\n    {\n      label: 'Hugs Sent',\n      value: stats.hugsSent,\n      icon: 'StandardHug',\n      color: '#6c5ce7',\n      bgColor: 'rgba(108, 92, 231, 0.1)',\n      decoration: (\n        <svg viewBox=\"0 0 120 120\" fill=\"none\">\n          <circle cx=\"100\" cy=\"20\" r=\"80\" fill=\"#6c5ce7\" />\n        </svg>\n      )\n    },\n    {\n      label: 'Hugs Received',\n      value: stats.hugsReceived,\n      icon: 'ComfortingHug',\n      color: '#9D65C9',\n      bgColor: 'rgba(157, 101, 201, 0.1)',\n      decoration: (\n        <svg viewBox=\"0 0 120 120\" fill=\"none\">\n          <circle cx=\"100\" cy=\"20\" r=\"80\" fill=\"#9D65C9\" />\n        </svg>\n      )\n    }\n  ];\n  \n  if (isLoading) {\n    return (\n      <StatsContainer>\n        {[1, 2, 3, 4].map((_, index) => (\n          <StatCard key={index} style={{ opacity: 0.5 }}>\n            <IconContainer style={{ background: '#f0f0f0' }} />\n            <StatValue style={{ background: '#f0f0f0', width: '60px', height: '40px' }}></StatValue>\n            <StatLabel style={{ background: '#f0f0f0', width: '80px', height: '20px' }}></StatLabel>\n          </StatCard>\n        ))}\n      </StatsContainer>\n    );\n  }\n\n  return (\n    <StatsContainer as={motion.div} variants={containerVariants} initial=\"hidden\" animate=\"visible\">\n      {statsCards.map((stat, index) => (\n        <StatCard key={index} variants={cardVariants}>\n          <IconContainer bgColor={stat.bgColor} iconColor={stat.color}>\n            <Icon type={stat.icon} size={28} />\n          </IconContainer>\n          \n          <StatValue style={{ color: stat.color }}>{stat.value}</StatValue>\n          <StatLabel>{stat.label}</StatLabel>\n          \n          <BackgroundDecoration>\n            {stat.decoration}\n          </BackgroundDecoration>\n        </StatCard>\n      ))}\n    </StatsContainer>\n  );\n};\n\nexport default DashboardStats;","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport function compareAsc(dateLeft, dateRight) {\n  const diff = +toDate(dateLeft) - +toDate(dateRight);\n\n  if (diff < 0) return -1;\n  else if (diff > 0) return 1;\n\n  // Return 0 if diff is 0; return NaN if diff is NaN\n  return diff;\n}\n\n// Fallback for modularized imports:\nexport default compareAsc;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name constructNow\n * @category Generic Helpers\n * @summary Constructs a new current date using the passed value constructor.\n * @pure false\n *\n * @description\n * The function constructs a new current date using the constructor from\n * the reference date. It helps to build generic functions that accept date\n * extensions and use the current date.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @param date - The reference date to take constructor from\n *\n * @returns Current date initialized using the given date constructor\n *\n * @example\n * import { constructNow, isSameDay } from 'date-fns'\n *\n * function isToday<DateType extends Date>(\n *   date: DateArg<DateType>,\n * ): boolean {\n *   // If we were to use `new Date()` directly, the function would  behave\n *   // differently in different timezones and return false for the same date.\n *   return isSameDay(date, constructNow(date));\n * }\n */\nexport function constructNow(date) {\n  return constructFrom(date, Date.now());\n}\n\n// Fallback for modularized imports:\nexport default constructNow;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link differenceInCalendarMonths} function options.\n */\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport function differenceInCalendarMonths(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const yearsDiff = laterDate_.getFullYear() - earlierDate_.getFullYear();\n  const monthsDiff = laterDate_.getMonth() - earlierDate_.getMonth();\n\n  return yearsDiff * 12 + monthsDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarMonths;\n","export function getRoundingMethod(method) {\n  return (number) => {\n    const round = method ? Math[method] : Math.trunc;\n    const result = round(number);\n    // Prevent negative zero\n    return result === 0 ? 0 : result;\n  };\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n *\n * @returns The number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport function differenceInMilliseconds(laterDate, earlierDate) {\n  return +toDate(laterDate) - +toDate(earlierDate);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMilliseconds;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfDay} function options.\n */\n\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport function endOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfDay;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfMonth} function options.\n */\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n","import { endOfDay } from \"./endOfDay.js\";\nimport { endOfMonth } from \"./endOfMonth.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @param date - The date to check\n * @param options - An object with options\n *\n * @returns The date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport function isLastDayOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  return +endOfDay(_date, options) === +endOfMonth(_date, options);\n}\n\n// Fallback for modularized imports:\nexport default isLastDayOfMonth;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.js\";\nimport { isLastDayOfMonth } from \"./isLastDayOfMonth.js\";\n\n/**\n * The {@link differenceInMonths} function options.\n */\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport function differenceInMonths(laterDate, earlierDate, options) {\n  const [laterDate_, workingLaterDate, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    laterDate,\n    earlierDate,\n  );\n\n  const sign = compareAsc(workingLaterDate, earlierDate_);\n  const difference = Math.abs(\n    differenceInCalendarMonths(workingLaterDate, earlierDate_),\n  );\n\n  if (difference < 1) return 0;\n\n  if (workingLaterDate.getMonth() === 1 && workingLaterDate.getDate() > 27)\n    workingLaterDate.setDate(30);\n\n  workingLaterDate.setMonth(workingLaterDate.getMonth() - sign * difference);\n\n  let isLastMonthNotFull = compareAsc(workingLaterDate, earlierDate_) === -sign;\n\n  if (\n    isLastDayOfMonth(laterDate_) &&\n    difference === 1 &&\n    compareAsc(laterDate_, earlierDate_) === 1\n  ) {\n    isLastMonthNotFull = false;\n  }\n\n  const result = sign * (difference - +isLastMonthNotFull);\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInMonths;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.js\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.js\";\n\n/**\n * The {@link differenceInSeconds} function options.\n */\n\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of seconds\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nexport function differenceInSeconds(laterDate, earlierDate, options) {\n  const diff = differenceInMilliseconds(laterDate, earlierDate) / 1000;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInSeconds;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { minutesInDay, minutesInMonth } from \"./constants.js\";\nimport { differenceInMonths } from \"./differenceInMonths.js\";\nimport { differenceInSeconds } from \"./differenceInSeconds.js\";\n\n/**\n * The {@link formatDistance} function options.\n */\n\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @param laterDate - The date\n * @param earlierDate - The date to compare with\n * @param options - An object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `baseDate` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\nexport function formatDistance(laterDate, earlierDate, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n  const minutesInAlmostTwoDays = 2520;\n\n  const comparison = compareAsc(laterDate, earlierDate);\n\n  if (isNaN(comparison)) throw new RangeError(\"Invalid time value\");\n\n  const localizeOptions = Object.assign({}, options, {\n    addSuffix: options?.addSuffix,\n    comparison: comparison,\n  });\n\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    ...(comparison > 0 ? [earlierDate, laterDate] : [laterDate, earlierDate]),\n  );\n\n  const seconds = differenceInSeconds(earlierDate_, laterDate_);\n  const offsetInSeconds =\n    (getTimezoneOffsetInMilliseconds(earlierDate_) -\n      getTimezoneOffsetInMilliseconds(laterDate_)) /\n    1000;\n  const minutes = Math.round((seconds - offsetInSeconds) / 60);\n  let months;\n\n  // 0 up to 2 mins\n  if (minutes < 2) {\n    if (options?.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance(\"lessThanXSeconds\", 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance(\"lessThanXSeconds\", 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance(\"lessThanXSeconds\", 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance(\"halfAMinute\", 0, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n      }\n    }\n\n    // 2 mins up to 0.75 hrs\n  } else if (minutes < 45) {\n    return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n\n    // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance(\"aboutXHours\", 1, localizeOptions);\n\n    // 1.5 hrs up to 24 hrs\n  } else if (minutes < minutesInDay) {\n    const hours = Math.round(minutes / 60);\n    return locale.formatDistance(\"aboutXHours\", hours, localizeOptions);\n\n    // 1 day up to 1.75 days\n  } else if (minutes < minutesInAlmostTwoDays) {\n    return locale.formatDistance(\"xDays\", 1, localizeOptions);\n\n    // 1.75 days up to 30 days\n  } else if (minutes < minutesInMonth) {\n    const days = Math.round(minutes / minutesInDay);\n    return locale.formatDistance(\"xDays\", days, localizeOptions);\n\n    // 1 month up to 2 months\n  } else if (minutes < minutesInMonth * 2) {\n    months = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"aboutXMonths\", months, localizeOptions);\n  }\n\n  months = differenceInMonths(earlierDate_, laterDate_);\n\n  // 2 months up to 12 months\n  if (months < 12) {\n    const nearestMonth = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"xMonths\", nearestMonth, localizeOptions);\n\n    // 1 year up to max Date\n  } else {\n    const monthsSinceStartOfYear = months % 12;\n    const years = Math.trunc(months / 12);\n\n    // N years up to 1 years 3 months\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance(\"aboutXYears\", years, localizeOptions);\n\n      // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance(\"overXYears\", years, localizeOptions);\n\n      // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance(\"almostXYears\", years + 1, localizeOptions);\n    }\n  }\n}\n\n// Fallback for modularized imports:\nexport default formatDistance;\n","import { constructNow } from \"./constructNow.js\";\n\nimport { formatDistance } from \"./formatDistance.js\";\n\n/**\n * The {@link formatDistanceToNow} function options.\n */\n\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * @param date - The given date\n * @param options - The object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nexport function formatDistanceToNow(date, options) {\n  return formatDistance(date, constructNow(date), options);\n}\n\n// Fallback for modularized imports:\nexport default formatDistanceToNow;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useMeshSdk } from '../../hooks/useMeshSdk';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { FiUser, FiClock, FiSend, FiHeart, FiAlertCircle, FiBell } from 'react-icons/fi';\nimport { formatDistanceToNow } from 'date-fns';\n\n// Styled Components\nconst WidgetContainer = styled(motion.div)`\n  background: #ffffff;\n  border-radius: 16px;\n  padding: 1.5rem;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n  width: 100%;\n  overflow: hidden;\n`;\n\nconst WidgetHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n`;\n\nconst Title = styled.h3`\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: #333;\n  margin: 0;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst ViewAllButton = styled.button`\n  background: none;\n  border: none;\n  color: #6c5ce7;\n  font-weight: 500;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  padding: 4px;\n  border-radius: 4px;\n  transition: background 0.2s;\n\n  &:hover {\n    background: rgba(108, 92, 231, 0.1);\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 2rem 1rem;\n  color: #888;\n`;\n\nconst MoodsList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  max-height: 320px;\n  overflow-y: auto;\n  padding-right: 4px;\n\n  /* Custom scrollbar */\n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: rgba(0, 0, 0, 0.03);\n    border-radius: 10px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: rgba(108, 92, 231, 0.2);\n    border-radius: 10px;\n  }\n\n  &::-webkit-scrollbar-thumb:hover {\n    background: rgba(108, 92, 231, 0.4);\n  }\n`;\n\nconst MoodCard = styled(motion.div)`\n  display: flex;\n  padding: 12px;\n  border-radius: 12px;\n  background: #f8f9fa;\n  gap: 12px;\n  position: relative;\n  transition: transform 0.2s, box-shadow 0.2s;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);\n  }\n\n  ${props => props.needsSupport && `\n    border: 1px solid rgba(255, 59, 48, 0.3);\n    background: rgba(255, 59, 48, 0.05);\n  `}\n`;\n\nconst UserAvatar = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${props => props.bgColor || '#6c5ce7'};\n  color: white;\n  font-weight: 600;\n  flex-shrink: 0;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nconst NeedsSupportBadge = styled.div`\n  position: absolute;\n  top: -5px;\n  right: -5px;\n  background: #ff3b30;\n  color: white;\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 12px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\n`;\n\nconst MoodContent = styled.div`\n  flex: 1;\n`;\n\nconst MoodHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 4px;\n`;\n\nconst UserName = styled.span`\n  font-weight: 600;\n  color: #333;\n`;\n\nconst MoodScore = styled.span`\n  display: inline-block;\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-weight: 600;\n  font-size: 0.875rem;\n  background-color: ${props => {\n    if (props.intensity >= 8) return '#4cd964';\n    if (props.intensity >= 5) return '#ffcc00';\n    return '#ff3b30';\n  }};\n  color: ${props => {\n    if (props.intensity >= 8) return '#006400';\n    if (props.intensity >= 5) return '#664d00';\n    return '#fff';\n  }};\n`;\n\nconst MoodNote = styled.p`\n  margin: 0;\n  color: #555;\n  font-size: 0.9rem;\n  margin-bottom: 8px;\n  word-break: break-word;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`;\n\nconst MoodFooter = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: #888;\n  font-size: 0.8rem;\n`;\n\nconst TimeStamp = styled.span`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n`;\n\nconst SendHugButton = styled.button`\n  background: none;\n  border: none;\n  color: #6c5ce7;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  cursor: pointer;\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 0.8rem;\n  transition: background 0.2s;\n\n  &:hover {\n    background: rgba(108, 92, 231, 0.1);\n  }\n\n  ${props => props.needsSupport && `\n    color: #ff3b30;\n    font-weight: 600;\n\n    &:hover {\n      background: rgba(255, 59, 48, 0.1);\n    }\n  `}\n`;\n\nconst LoadingState = styled.div`\n  padding: 2rem 1rem;\n  text-align: center;\n  color: #888;\n`;\n\nconst AlertBanner = styled(motion.div)`\n  background-color: rgba(255, 59, 48, 0.1);\n  border: 1px solid rgba(255, 59, 48, 0.3);\n  border-radius: 8px;\n  padding: 10px 16px;\n  margin-bottom: 12px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n\n  p {\n    margin: 0;\n    font-size: 0.9rem;\n    color: #d32f2f;\n    flex: 1;\n  }\n`;\n\nconst HugSentToast = styled(motion.div)`\n  position: fixed;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: #4cd964;\n  color: white;\n  padding: 10px 16px;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  z-index: 1000;\n`;\n\nconst FilterControls = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-bottom: 12px;\n  padding-bottom: 8px;\n  border-bottom: 1px solid #eee;\n`;\n\nconst FilterButton = styled.button`\n  background: ${props => props.active ? 'rgba(108, 92, 231, 0.1)' : 'transparent'};\n  border: 1px solid ${props => props.active ? 'rgba(108, 92, 231, 0.3)' : '#eee'};\n  color: ${props => props.active ? '#6c5ce7' : '#666'};\n  font-size: 0.8rem;\n  padding: 4px 8px;\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:hover {\n    background: rgba(108, 92, 231, 0.1);\n    border-color: rgba(108, 92, 231, 0.3);\n  }\n`;\n\n// Component\nconst FriendMoodsWidget = () => {\n  // Use the Mesh SDK for data fetching and mutations\n  const { FriendsMoods, sendHug } = useMeshSdk();\n  \n  const [expandedMood, setExpandedMood] = useState(null);\n  const [filter, setFilter] = useState('all'); // 'all', 'needSupport', 'recent'\n  const [showHugSentToast, setShowHugSentToast] = useState(false);\n  const [hugSentToUser, setHugSentToUser] = useState(null);\n  const [sendingHugTo, setSendingHugTo] = useState(null);\n  \n  // State for data, loading and error\n  const [moods, setMoods] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [sendingHug, setSendingHug] = useState(false);\n  \n  // Fetch data\n  const fetchMoods = async () => {\n    try {\n      setLoading(true);\n      const result = await FriendsMoods({ limit: 10, offset: 0 });\n      setMoods(result?.friendsMoods || []);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error fetching friends moods:\", err);\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Initial data load\n  useEffect(() => {\n    fetchMoods();\n    \n    // Poll for updates every minute\n    const interval = setInterval(() => {\n      fetchMoods();\n    }, 60000);\n    \n    return () => clearInterval(interval);\n  }, []);\n  \n  // Check for friends with bad moods (intensity <= 4)\n  const friendsNeedingSupport = moods.filter(mood => mood.intensity <= 4) || [];\n  const hasFriendsNeedingSupport = friendsNeedingSupport.length > 0;\n\n  // Effect to auto-dismiss hug sent toast\n  useEffect(() => {\n    if (showHugSentToast) {\n      const timer = setTimeout(() => {\n        setShowHugSentToast(false);\n      }, 3000);\n\n      return () => clearTimeout(timer);\n    }\n  }, [showHugSentToast]);\n\n  // Helper functions\n  const getInitials = (name) => {\n    if (!name) return '?';\n    return name\n      .split(' ')\n      .map(part => part[0])\n      .join('')\n      .toUpperCase()\n      .substring(0, 2);\n  };\n\n  const getRandomColor = (userId) => {\n    const colors = ['#6c5ce7', '#00cec9', '#fdcb6e', '#e17055', '#74b9ff', '#55efc4'];\n    const index = userId ? userId.charCodeAt(0) % colors.length : 0;\n    return colors[index];\n  };\n\n  // Handle sending a hug to a friend\n  const handleSendHug = async (event, mood) => {\n    event.stopPropagation(); // Prevent card expansion\n\n    if (sendingHug) return; // Prevent multiple clicks\n\n    setSendingHugTo(mood.user.id);\n    setSendingHug(true);\n\n    try {\n      // Format the hug data according to the SDK format\n      const hugData = {\n        recipientId: mood.user.id,\n        type: mood.intensity <= 4 ? 'ComfortingHug' : 'StandardHug',\n        message: mood.intensity <= 4 \n          ? `I noticed you're not feeling great. Sending you a comforting hug!` \n          : `Hey! Just sending a friendly hug your way!`,\n      };\n\n      const result = await sendHug(hugData);\n\n      if (result) {\n        setHugSentToUser(mood.user.name || mood.user.username);\n        setShowHugSentToast(true);\n\n        // Refetch moods after a short delay to show updated state\n        setTimeout(() => {\n          fetchMoods();\n        }, 1000);\n      }\n    } catch (err) {\n      console.error('Error sending hug:', err);\n    } finally {\n      setSendingHugTo(null);\n      setSendingHug(false);\n    }\n  };\n\n  // Filter moods based on selected filter\n  const getFilteredMoods = () => {\n    if (!moods || moods.length === 0) return [];\n\n    let filteredMoods = [...moods];\n\n    if (filter === 'needSupport') {\n      return filteredMoods.filter(mood => mood.intensity <= 4);\n    } else if (filter === 'recent') {\n      return filteredMoods.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n    }\n\n    return filteredMoods;\n  };\n\n  // Render functions\n  const renderMoods = () => {\n    if (loading) return <LoadingState>Loading friends' moods...</LoadingState>;\n    if (error) return <EmptyState>Couldn't load friends' moods. Please try again.</EmptyState>;\n    if (!moods || moods.length === 0) {\n      return <EmptyState>No friend moods yet. Add friends to see their moods here!</EmptyState>;\n    }\n\n    const filteredMoods = getFilteredMoods();\n\n    if (filteredMoods.length === 0) {\n      return <EmptyState>No moods match the current filter.</EmptyState>;\n    }\n\n    return (\n      <MoodsList>\n        {filteredMoods.map(mood => {\n          const needsSupport = mood.intensity <= 4;\n\n          return (\n            <MoodCard \n              key={mood.id}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.3 }}\n              onClick={() => setExpandedMood(expandedMood === mood.id ? null : mood.id)}\n              needsSupport={needsSupport}\n            >\n              {needsSupport && <NeedsSupportBadge><FiAlertCircle size={12} /></NeedsSupportBadge>}\n\n              <UserAvatar bgColor={getRandomColor(mood.user.id)}>\n                {mood.user.avatarUrl ? (\n                  <img src={mood.user.avatarUrl} alt={mood.user.name} />\n                ) : (\n                  getInitials(mood.user.name || mood.user.username)\n                )}\n              </UserAvatar>\n              <MoodContent>\n                <MoodHeader>\n                  <UserName>{mood.user.name || mood.user.username}</UserName>\n                  <MoodScore intensity={mood.intensity}>{mood.intensity}/10</MoodScore>\n                </MoodHeader>\n                <MoodNote>\n                  {mood.note || \"No description provided.\"}\n                </MoodNote>\n                <MoodFooter>\n                  <TimeStamp>\n                    <FiClock size={12} />\n                    {formatDistanceToNow(new Date(mood.createdAt), { addSuffix: true })}\n                  </TimeStamp>\n                  <SendHugButton \n                    onClick={(e) => handleSendHug(e, mood)}\n                    needsSupport={needsSupport}\n                    disabled={sendingHug && sendingHugTo === mood.user.id}\n                  >\n                    {sendingHug && sendingHugTo === mood.user.id ? (\n                      'Sending...'\n                    ) : (\n                      <>\n                        {needsSupport ? <FiHeart size={12} /> : <FiSend size={12} />}\n                        {needsSupport ? 'Send Support' : 'Send Hug'}\n                      </>\n                    )}\n                  </SendHugButton>\n                </MoodFooter>\n              </MoodContent>\n            </MoodCard>\n          );\n        })}\n      </MoodsList>\n    );\n  };\n\n  return (\n    <WidgetContainer\n      initial={{ opacity: 0, scale: 0.95 }}\n      animate={{ opacity: 1, scale: 1 }}\n      transition={{ duration: 0.3 }}\n    >\n      <WidgetHeader>\n        <Title>\n          <FiUser size={16} />\n          Friends' Moods\n          {hasFriendsNeedingSupport && (\n            <motion.span \n              style={{ \n                background: '#ff3b30', \n                color: 'white', \n                borderRadius: '50%', \n                width: '20px', \n                height: '20px',\n                display: 'inline-flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                fontSize: '0.7rem',\n                fontWeight: 'bold'\n              }}\n              initial={{ scale: 0 }}\n              animate={{ scale: 1 }}\n              transition={{ type: 'spring', stiffness: 500, damping: 15 }}\n            >\n              {friendsNeedingSupport.length}\n            </motion.span>\n          )}\n        </Title>\n        <ViewAllButton>\n          View All\n        </ViewAllButton>\n      </WidgetHeader>\n\n      {/* Alert banner for friends needing support */}\n      <AnimatePresence>\n        {hasFriendsNeedingSupport && (\n          <AlertBanner\n            initial={{ opacity: 0, height: 0, marginBottom: 0 }}\n            animate={{ opacity: 1, height: 'auto', marginBottom: 12 }}\n            exit={{ opacity: 0, height: 0, marginBottom: 0 }}\n          >\n            <FiBell size={18} color=\"#d32f2f\" />\n            <p>\n              {friendsNeedingSupport.length === 1 \n                ? `${friendsNeedingSupport[0].user.name || 'Your friend'} is feeling down.` \n                : `${friendsNeedingSupport.length} friends are having a tough time.`} \n              Consider sending support!\n            </p>\n          </AlertBanner>\n        )}\n      </AnimatePresence>\n\n      {/* Filter controls */}\n      <FilterControls>\n        <FilterButton \n          active={filter === 'all'} \n          onClick={() => setFilter('all')}\n        >\n          All\n        </FilterButton>\n        <FilterButton \n          active={filter === 'needSupport'} \n          onClick={() => setFilter('needSupport')}\n        >\n          Needs Support {hasFriendsNeedingSupport && `(${friendsNeedingSupport.length})`}\n        </FilterButton>\n        <FilterButton \n          active={filter === 'recent'} \n          onClick={() => setFilter('recent')}\n        >\n          Recent\n        </FilterButton>\n      </FilterControls>\n\n      {renderMoods()}\n\n      {/* Toast notification when hug is sent */}\n      <AnimatePresence>\n        {showHugSentToast && (\n          <HugSentToast\n            initial={{ opacity: 0, y: 50 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 50 }}\n          >\n            <FiHeart size={16} />\n            Hug sent to {hugSentToUser}!\n          </HugSentToast>\n        )}\n      </AnimatePresence>\n    </WidgetContainer>\n  );\n};\n\nexport default FriendMoodsWidget;","import React, { useState, useEffect } from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_USERS } from '../../graphql/queries';\nimport { SEND_HUG } from '../../graphql/mutations';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { FiSend, FiSearch, FiUsers, FiX, FiCheck, FiHeart, FiMail } from 'react-icons/fi';\nimport { Icon } from '../ui/IconComponent';\n\n// Styled Components\nconst WidgetContainer = styled(motion.div)`\n  background: #ffffff;\n  border-radius: 16px;\n  padding: 1.5rem;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n  width: 100%;\n  overflow: hidden;\n`;\n\nconst WidgetHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n`;\n\nconst Title = styled.h3`\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: #333;\n  margin: 0;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst SearchContainer = styled.div`\n  position: relative;\n  width: 100%;\n  margin-bottom: 1rem;\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  padding: 12px 12px 12px 40px;\n  border: 1px solid #eee;\n  border-radius: 12px;\n  font-size: 0.9rem;\n  \n  &:focus {\n    outline: none;\n    border-color: #6c5ce7;\n    box-shadow: 0 0 0 2px rgba(108, 92, 231, 0.1);\n  }\n`;\n\nconst SearchIcon = styled.div`\n  position: absolute;\n  left: 12px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: #888;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ClearButton = styled.button`\n  position: absolute;\n  right: 12px;\n  top: 50%;\n  transform: translateY(-50%);\n  background: none;\n  border: none;\n  color: #888;\n  cursor: pointer;\n  display: ${props => props.visible ? 'flex' : 'none'};\n  align-items: center;\n  justify-content: center;\n  padding: 4px;\n  border-radius: 50%;\n  \n  &:hover {\n    background: #f0f0f0;\n  }\n`;\n\nconst HugTypeSelector = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-bottom: 1rem;\n  overflow-x: auto;\n  padding-bottom: 8px;\n  \n  /* Hide scrollbar */\n  &::-webkit-scrollbar {\n    height: 4px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: rgba(0, 0, 0, 0.03);\n    border-radius: 10px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: rgba(108, 92, 231, 0.2);\n    border-radius: 10px;\n  }\n`;\n\nconst HugTypeOption = styled.button`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 12px 8px;\n  background: ${props => props.selected ? 'rgba(108, 92, 231, 0.1)' : 'transparent'};\n  border: 1px solid ${props => props.selected ? '#6c5ce7' : '#eee'};\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  min-width: 80px;\n  flex-shrink: 0;\n  box-shadow: ${props => props.selected ? '0 4px 8px rgba(108, 92, 231, 0.15)' : 'none'};\n  transform: ${props => props.selected ? 'translateY(-2px)' : 'none'};\n  \n  &:hover {\n    background: rgba(108, 92, 231, 0.05);\n    box-shadow: 0 4px 8px rgba(108, 92, 231, 0.08);\n    transform: translateY(-2px);\n  }\n  \n  .icon-wrapper {\n    width: 48px;\n    height: 48px;\n    margin-bottom: 8px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  \n  span {\n    font-size: 0.75rem;\n    font-weight: ${props => props.selected ? '600' : '500'};\n    color: ${props => props.selected ? '#6c5ce7' : '#666'};\n  }\n`;\n\nconst RecipientsList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  max-height: 200px;\n  overflow-y: auto;\n  margin-bottom: 1rem;\n  \n  /* Custom scrollbar */\n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: rgba(0, 0, 0, 0.03);\n    border-radius: 10px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: rgba(108, 92, 231, 0.2);\n    border-radius: 10px;\n  }\n  \n  &::-webkit-scrollbar-thumb:hover {\n    background: rgba(108, 92, 231, 0.4);\n  }\n`;\n\nconst RecipientOption = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 8px 12px;\n  border-radius: 8px;\n  cursor: pointer;\n  background: ${props => props.selected ? 'rgba(108, 92, 231, 0.1)' : '#f8f9fa'};\n  border: 1px solid ${props => props.selected ? 'rgba(108, 92, 231, 0.3)' : 'transparent'};\n  transition: all 0.2s;\n  \n  &:hover {\n    background: rgba(108, 92, 231, 0.05);\n  }\n`;\n\nconst UserAvatar = styled.div`\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${props => props.bgColor || '#6c5ce7'};\n  color: white;\n  font-weight: 600;\n  flex-shrink: 0;\n  margin-right: 12px;\n  \n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nconst UserInfo = styled.div`\n  flex: 1;\n`;\n\nconst UserName = styled.div`\n  font-weight: 500;\n  color: #333;\n  font-size: 0.9rem;\n`;\n\nconst Username = styled.div`\n  color: #888;\n  font-size: 0.8rem;\n`;\n\nconst SelectButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  background: ${props => props.selected ? '#6c5ce7' : '#f0f0f0'};\n  color: ${props => props.selected ? 'white' : '#666'};\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s;\n  \n  &:hover {\n    background: ${props => props.selected ? '#5b4cc8' : '#e0e0e0'};\n  }\n`;\n\nconst MessageArea = styled.textarea`\n  width: 100%;\n  padding: 12px;\n  border: 1px solid #eee;\n  border-radius: 12px;\n  font-size: 0.9rem;\n  resize: none;\n  height: 80px;\n  margin-bottom: 1rem;\n  \n  &:focus {\n    outline: none;\n    border-color: #6c5ce7;\n  }\n`;\n\nconst TabsContainer = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-bottom: 1rem;\n  border-bottom: 1px solid #eee;\n`;\n\nconst Tab = styled.button`\n  padding: 8px 12px;\n  background: none;\n  border: none;\n  color: ${props => props.active ? '#6c5ce7' : '#888'};\n  font-weight: ${props => props.active ? '600' : '400'};\n  border-bottom: 2px solid ${props => props.active ? '#6c5ce7' : 'transparent'};\n  cursor: pointer;\n  transition: all 0.2s;\n  \n  &:hover {\n    color: #6c5ce7;\n  }\n`;\n\nconst ExternalRecipientForm = styled.div`\n  margin-bottom: 1rem;\n`;\n\nconst ExternalRecipientInput = styled.input`\n  width: 100%;\n  padding: 12px;\n  border: 1px solid #eee;\n  border-radius: 12px;\n  font-size: 0.9rem;\n  margin-bottom: 8px;\n  \n  &:focus {\n    outline: none;\n    border-color: #6c5ce7;\n  }\n`;\n\nconst SendButton = styled.button`\n  width: 100%;\n  padding: 12px;\n  background: #6c5ce7;\n  color: white;\n  border: none;\n  border-radius: 12px;\n  font-weight: 600;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  transition: background 0.2s;\n  \n  &:hover {\n    background: #5b4cc8;\n  }\n  \n  &:disabled {\n    background: #a8a3e1;\n    cursor: not-allowed;\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 1rem;\n  color: #888;\n  font-size: 0.9rem;\n`;\n\nconst LoadingState = styled.div`\n  text-align: center;\n  padding: 1rem;\n  color: #888;\n`;\n\nconst HugSentToast = styled(motion.div)`\n  position: fixed;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: #4cd964;\n  color: white;\n  padding: 10px 16px;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  z-index: 1000;\n`;\n\nconst ErrorMessage = styled.div`\n  color: #ff3b30;\n  font-size: 0.8rem;\n  margin-top: 4px;\n  margin-bottom: 8px;\n`;\n\n// Component\nconst QuickSendHugWidget = () => {\n  const [selectedTab, setSelectedTab] = useState('friends');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedHugType, setSelectedHugType] = useState('StandardHug');\n  const [selectedRecipient, setSelectedRecipient] = useState(null);\n  const [message, setMessage] = useState('');\n  const [externalRecipient, setExternalRecipient] = useState('');\n  const [externalType, setExternalType] = useState('email');\n  const [showHugSentToast, setShowHugSentToast] = useState(false);\n  const [sendError, setSendError] = useState('');\n  const [isExternalValid, setIsExternalValid] = useState(false);\n  \n  // GraphQL queries and mutations\n  const { loading, error, data } = useQuery(GET_USERS, {\n    fetchPolicy: 'network-only'\n  });\n  \n  const [sendHug, { loading: sendingHug }] = useMutation(SEND_HUG);\n  \n  // Effect to hide toast after 3 seconds\n  useEffect(() => {\n    if (showHugSentToast) {\n      const timer = setTimeout(() => {\n        setShowHugSentToast(false);\n      }, 3000);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [showHugSentToast]);\n  \n  // Effect to validate external recipient input\n  useEffect(() => {\n    if (selectedTab === 'external') {\n      if (externalType === 'email') {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        setIsExternalValid(emailRegex.test(externalRecipient));\n      } else if (externalType === 'telegram') {\n        // Just check if it's not empty for Telegram\n        setIsExternalValid(externalRecipient.trim().length > 0);\n      }\n    }\n  }, [externalRecipient, externalType, selectedTab]);\n  \n  // Effect to generate default message based on hug type\n  useEffect(() => {\n    let defaultMessage = '';\n    \n    switch (selectedHugType) {\n      case 'ComfortingHug':\n        defaultMessage = \"I'm sending you a comforting hug to help you feel better!\";\n        break;\n      case 'FriendlyHug':\n        defaultMessage = \"Hey friend! Thought you might appreciate a friendly hug today.\";\n        break;\n      case 'EnthusiasticHug':\n        defaultMessage = \"Sending you an enthusiastic hug to celebrate with you!\";\n        break;\n      case 'GroupHug':\n        defaultMessage = \"Group hug! Bringing us all together.\";\n        break;\n      case 'FamilyHug':\n        defaultMessage = \"A warm family hug to let you know I care about you.\";\n        break;\n      case 'StandardHug':\n      default:\n        defaultMessage = \"Just sending a hug to brighten your day!\";\n        break;\n    }\n    \n    setMessage(defaultMessage);\n  }, [selectedHugType]);\n  \n  // Helper function to get user initials\n  const getInitials = (name) => {\n    if (!name) return '?';\n    return name\n      .split(' ')\n      .map(part => part[0])\n      .join('')\n      .toUpperCase()\n      .substring(0, 2);\n  };\n  \n  // Helper function to generate random avatar color\n  const getRandomColor = (userId) => {\n    const colors = ['#6c5ce7', '#00cec9', '#fdcb6e', '#e17055', '#74b9ff', '#55efc4'];\n    const index = userId ? userId.charCodeAt(0) % colors.length : 0;\n    return colors[index];\n  };\n  \n  // Handle send hug action\n  const handleSendHug = async () => {\n    setSendError('');\n    \n    try {\n      // Send hug to internal user\n      if (selectedTab === 'friends' && selectedRecipient) {\n        const response = await sendHug({\n          variables: {\n            hugInput: {\n              recipientId: selectedRecipient.id,\n              type: selectedHugType,\n              message: message.trim(),\n            }\n          }\n        });\n        \n        if (response.data?.sendHug) {\n          setShowHugSentToast(true);\n          setSelectedRecipient(null);\n          resetForm();\n        }\n      } \n      // Send hug to external recipient\n      else if (selectedTab === 'external' && isExternalValid) {\n        const response = await sendHug({\n          variables: {\n            hugInput: {\n              externalRecipient: {\n                type: externalType,\n                contact: externalRecipient.trim(),\n              },\n              type: selectedHugType,\n              message: message.trim(),\n            }\n          }\n        });\n        \n        if (response.data?.sendHug) {\n          setShowHugSentToast(true);\n          resetForm();\n        }\n      }\n    } catch (err) {\n      console.error('Error sending hug:', err);\n      setSendError('Failed to send hug. Please try again.');\n    }\n  };\n  \n  const resetForm = () => {\n    setMessage(getDefaultMessage(selectedHugType));\n    setExternalRecipient('');\n  };\n  \n  const getDefaultMessage = (hugType) => {\n    switch (hugType) {\n      case 'ComfortingHug':\n        return \"I'm sending you a comforting hug to help you feel better!\";\n      case 'FriendlyHug':\n        return \"Hey friend! Thought you might appreciate a friendly hug today.\";\n      case 'EnthusiasticHug':\n        return \"Sending you an enthusiastic hug to celebrate with you!\";\n      case 'GroupHug':\n        return \"Group hug! Bringing us all together.\";\n      case 'FamilyHug':\n        return \"A warm family hug to let you know I care about you.\";\n      case 'StandardHug':\n      default:\n        return \"Just sending a hug to brighten your day!\";\n    }\n  };\n  \n  // Handle searching\n  const handleSearch = (e) => {\n    setSearchTerm(e.target.value);\n  };\n  \n  const handleClearSearch = () => {\n    setSearchTerm('');\n  };\n  \n  const toggleUserSelection = (user) => {\n    if (selectedRecipient && selectedRecipient.id === user.id) {\n      setSelectedRecipient(null);\n    } else {\n      setSelectedRecipient(user);\n    }\n  };\n  \n  // Render functions\n  const renderUsers = () => {\n    if (loading) return <LoadingState>Loading friends...</LoadingState>;\n    if (error) return <EmptyState>Error loading friends. Please try again.</EmptyState>;\n    if (!data || !data.users || data.users.length === 0) {\n      return <EmptyState>No friends found. Add some friends to send hugs!</EmptyState>;\n    }\n    \n    // Filter users based on search term\n    const filteredUsers = data.users.filter(user => {\n      if (!searchTerm) return true;\n      const term = searchTerm.toLowerCase();\n      return (\n        (user.name && user.name.toLowerCase().includes(term)) ||\n        (user.username && user.username.toLowerCase().includes(term))\n      );\n    });\n    \n    if (filteredUsers.length === 0) {\n      return <EmptyState>No friends match your search.</EmptyState>;\n    }\n    \n    return (\n      <RecipientsList>\n        {filteredUsers.map(user => (\n          <RecipientOption \n            key={user.id}\n            selected={selectedRecipient && selectedRecipient.id === user.id}\n            onClick={() => toggleUserSelection(user)}\n          >\n            <UserAvatar bgColor={getRandomColor(user.id)}>\n              {user.avatarUrl ? (\n                <img src={user.avatarUrl} alt={user.name} />\n              ) : (\n                getInitials(user.name || user.username)\n              )}\n            </UserAvatar>\n            <UserInfo>\n              <UserName>{user.name || 'Unnamed User'}</UserName>\n              <Username>@{user.username}</Username>\n            </UserInfo>\n            <SelectButton selected={selectedRecipient && selectedRecipient.id === user.id}>\n              {selectedRecipient && selectedRecipient.id === user.id ? (\n                <FiCheck size={14} />\n              ) : null}\n            </SelectButton>\n          </RecipientOption>\n        ))}\n      </RecipientsList>\n    );\n  };\n  \n  const renderExternalForm = () => {\n    return (\n      <ExternalRecipientForm>\n        <TabsContainer style={{ marginBottom: '8px' }}>\n          <Tab \n            active={externalType === 'email'} \n            onClick={() => setExternalType('email')}\n          >\n            Email\n          </Tab>\n          <Tab \n            active={externalType === 'telegram'} \n            onClick={() => setExternalType('telegram')}\n          >\n            Telegram\n          </Tab>\n        </TabsContainer>\n        \n        <ExternalRecipientInput\n          type={externalType === 'email' ? 'email' : 'text'}\n          placeholder={externalType === 'email' ? 'Enter email address' : 'Enter Telegram username'}\n          value={externalRecipient}\n          onChange={(e) => setExternalRecipient(e.target.value)}\n        />\n        \n        {!isExternalValid && externalRecipient.trim() !== '' && (\n          <ErrorMessage>\n            {externalType === 'email' \n              ? 'Please enter a valid email address.' \n              : 'Please enter a valid Telegram username.'}\n          </ErrorMessage>\n        )}\n      </ExternalRecipientForm>\n    );\n  };\n  \n  const canSendHug = () => {\n    if (selectedTab === 'friends') {\n      return selectedRecipient !== null && message.trim() !== '';\n    } else if (selectedTab === 'external') {\n      return isExternalValid && message.trim() !== '';\n    }\n    return false;\n  };\n  \n  return (\n    <WidgetContainer\n      initial={{ opacity: 0, scale: 0.95 }}\n      animate={{ opacity: 1, scale: 1 }}\n      transition={{ duration: 0.3 }}\n    >\n      <WidgetHeader>\n        <Title>\n          <FiSend size={16} />\n          Quick Send Hug\n        </Title>\n      </WidgetHeader>\n      \n      <TabsContainer>\n        <Tab \n          active={selectedTab === 'friends'} \n          onClick={() => setSelectedTab('friends')}\n        >\n          <FiUsers size={14} style={{ marginRight: '4px' }} />\n          Friends\n        </Tab>\n        <Tab \n          active={selectedTab === 'external'} \n          onClick={() => setSelectedTab('external')}\n        >\n          <FiMail size={14} style={{ marginRight: '4px' }} />\n          External\n        </Tab>\n      </TabsContainer>\n      \n      {/* Friends Tab */}\n      {selectedTab === 'friends' && (\n        <>\n          <SearchContainer>\n            <SearchIcon>\n              <FiSearch size={16} />\n            </SearchIcon>\n            <SearchInput \n              type=\"text\" \n              placeholder=\"Search friends...\" \n              value={searchTerm}\n              onChange={handleSearch}\n            />\n            <ClearButton \n              visible={searchTerm !== ''}\n              onClick={handleClearSearch}\n            >\n              <FiX size={16} />\n            </ClearButton>\n          </SearchContainer>\n          \n          {renderUsers()}\n        </>\n      )}\n      \n      {/* External Tab */}\n      {selectedTab === 'external' && renderExternalForm()}\n      \n      {/* Hug Type Selector (Common to both tabs) */}\n      <HugTypeSelector>\n        <HugTypeOption \n          selected={selectedHugType === 'StandardHug'} \n          onClick={() => setSelectedHugType('StandardHug')}\n        >\n          <div className=\"icon-wrapper\">\n            <Icon type=\"StandardHug\" size={36} animate={true} />\n          </div>\n          <span>Standard</span>\n        </HugTypeOption>\n        <HugTypeOption \n          selected={selectedHugType === 'FriendlyHug'} \n          onClick={() => setSelectedHugType('FriendlyHug')}\n        >\n          <div className=\"icon-wrapper\">\n            <Icon type=\"FriendlyHug\" size={36} animate={true} />\n          </div>\n          <span>Friendly</span>\n        </HugTypeOption>\n        <HugTypeOption \n          selected={selectedHugType === 'ComfortingHug'} \n          onClick={() => setSelectedHugType('ComfortingHug')}\n        >\n          <div className=\"icon-wrapper\">\n            <Icon type=\"ComfortingHug\" size={36} animate={true} />\n          </div>\n          <span>Comforting</span>\n        </HugTypeOption>\n        <HugTypeOption \n          selected={selectedHugType === 'EnthusiasticHug'} \n          onClick={() => setSelectedHugType('EnthusiasticHug')}\n        >\n          <div className=\"icon-wrapper\">\n            <Icon type=\"EnthusiasticHug\" size={36} animate={true} />\n          </div>\n          <span>Enthusiastic</span>\n        </HugTypeOption>\n        <HugTypeOption \n          selected={selectedHugType === 'FamilyHug'} \n          onClick={() => setSelectedHugType('FamilyHug')}\n        >\n          <div className=\"icon-wrapper\">\n            <Icon type=\"FamilyHug\" size={36} animate={true} />\n          </div>\n          <span>Family</span>\n        </HugTypeOption>\n        <HugTypeOption \n          selected={selectedHugType === 'GroupHug'} \n          onClick={() => setSelectedHugType('GroupHug')}\n        >\n          <div className=\"icon-wrapper\">\n            <Icon type=\"GroupHug\" size={36} animate={true} />\n          </div>\n          <span>Group</span>\n        </HugTypeOption>\n      </HugTypeSelector>\n      \n      {/* Message Area (Common to both tabs) */}\n      <MessageArea\n        placeholder=\"Write your message...\"\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n      />\n      \n      {sendError && <ErrorMessage>{sendError}</ErrorMessage>}\n      \n      {/* Send Button */}\n      <SendButton \n        onClick={handleSendHug}\n        disabled={!canSendHug() || sendingHug}\n      >\n        {sendingHug ? 'Sending...' : 'Send Hug'}\n        <FiHeart size={16} />\n      </SendButton>\n      \n      {/* Success Toast */}\n      <AnimatePresence>\n        {showHugSentToast && (\n          <HugSentToast\n            initial={{ opacity: 0, y: 50 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 50 }}\n          >\n            <FiHeart size={16} />\n            Hug sent successfully!\n          </HugSentToast>\n        )}\n      </AnimatePresence>\n    </WidgetContainer>\n  );\n};\n\nexport default QuickSendHugWidget;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { FiUser, FiClock, FiMessageCircle, FiCheck, FiHeart, FiCornerUpRight } from 'react-icons/fi';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Icon } from '../ui/IconComponent';\nimport { useMeshSdk } from '../../hooks/useMeshSdk';\n\n// Styled Components\nconst WidgetContainer = styled(motion.div)`\n  background: #ffffff;\n  border-radius: 16px;\n  padding: 1.5rem;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n  width: 100%;\n  overflow: hidden;\n`;\n\nconst WidgetHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n`;\n\nconst Title = styled.h3`\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: #333;\n  margin: 0;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst ViewAllButton = styled.button`\n  background: none;\n  border: none;\n  color: #6c5ce7;\n  font-weight: 500;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  padding: 4px;\n  border-radius: 4px;\n  transition: background 0.2s;\n\n  &:hover {\n    background: rgba(108, 92, 231, 0.1);\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 2rem 1rem;\n  color: #888;\n`;\n\nconst HugsList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  max-height: 320px;\n  overflow-y: auto;\n  padding-right: 4px;\n\n  /* Custom scrollbar */\n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: rgba(0, 0, 0, 0.03);\n    border-radius: 10px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: rgba(108, 92, 231, 0.2);\n    border-radius: 10px;\n  }\n\n  &::-webkit-scrollbar-thumb:hover {\n    background: rgba(108, 92, 231, 0.4);\n  }\n`;\n\nconst HugCard = styled(motion.div)`\n  display: flex;\n  padding: 16px;\n  border-radius: 16px;\n  background: ${props => props.isRead ? '#f8f9fa' : 'linear-gradient(to right, rgba(108, 92, 231, 0.05), #f8f9fa)'};\n  gap: 16px;\n  position: relative;\n  transition: transform 0.3s ease, box-shadow 0.3s ease, background-color 0.3s ease;\n  border: 1px solid ${props => props.isRead ? 'transparent' : 'rgba(108, 92, 231, 0.1)'};\n\n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.08);\n    background: ${props => props.isRead ? '#f0f0f5' : 'linear-gradient(to right, rgba(108, 92, 231, 0.08), #f0f0f5)'};\n  }\n\n  ${props => !props.isRead && `\n    &::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 4px;\n      height: 100%;\n      background: #6c5ce7;\n      border-radius: 0 4px 4px 0;\n      box-shadow: 0 0 10px rgba(108, 92, 231, 0.3);\n    }\n  `}\n`;\n\nconst HugIconWrapper = styled.div`\n  width: 62px;\n  height: 62px;\n  border-radius: 16px;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${props => props.bgColor || 'rgba(108, 92, 231, 0.1)'};\n  flex-shrink: 0;\n  padding: 6px;\n  position: relative;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.08);\n  transition: transform 0.2s, box-shadow 0.2s;\n\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.12);\n  }\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n`;\n\nconst SenderAvatar = styled.div`\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${props => props.bgColor || '#6c5ce7'};\n  color: white;\n  font-weight: 600;\n  flex-shrink: 0;\n  position: absolute;\n  bottom: -5px;\n  left: -5px;\n  border: 2px solid white;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  font-size: 0.7rem;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nconst HugContent = styled.div`\n  flex: 1;\n`;\n\nconst HugHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 4px;\n`;\n\nconst SenderName = styled.span`\n  font-weight: 600;\n  color: #333;\n`;\n\nconst HugType = styled.span`\n  display: inline-block;\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-weight: 500;\n  font-size: 0.75rem;\n  background: ${props => {\n    switch (props.type) {\n      case 'ComfortingHug': return 'rgba(255, 152, 0, 0.15)';\n      case 'GroupHug': return 'rgba(76, 175, 80, 0.15)';\n      case 'EnthusiasticHug': return 'rgba(233, 30, 99, 0.15)';\n      case 'FriendlyHug': return 'rgba(33, 150, 243, 0.15)';\n      case 'FamilyHug': return 'rgba(156, 39, 176, 0.15)';\n      case 'StandardHug': \n      default: return 'rgba(108, 92, 231, 0.15)';\n    }\n  }};\n  color: ${props => {\n    switch (props.type) {\n      case 'ComfortingHug': return '#f57c00';\n      case 'GroupHug': return '#388e3c';\n      case 'EnthusiasticHug': return '#c2185b';\n      case 'FriendlyHug': return '#1976d2';\n      case 'FamilyHug': return '#7b1fa2';\n      case 'StandardHug':\n      default: return '#5c4ccc';\n    }\n  }};\n`;\n\nconst HugMessage = styled.p`\n  margin: 0;\n  color: #555;\n  font-size: 0.9rem;\n  margin-bottom: 8px;\n  word-break: break-word;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`;\n\nconst HugFooter = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: #888;\n  font-size: 0.8rem;\n`;\n\nconst TimeStamp = styled.span`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  margin-right: auto;\n`;\n\nconst ReadButton = styled.button`\n  background: none;\n  border: none;\n  color: #6c5ce7;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  cursor: pointer;\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 0.8rem;\n  transition: background 0.2s;\n\n  &:hover {\n    background: rgba(108, 92, 231, 0.1);\n  }\n`;\n\nconst ReplyButton = styled.button`\n  background: none;\n  border: none;\n  color: #6c5ce7;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  cursor: pointer;\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 0.8rem;\n  transition: background 0.2s;\n\n  &:hover {\n    background: rgba(108, 92, 231, 0.1);\n  }\n`;\n\nconst LoadingState = styled.div`\n  padding: 2rem 1rem;\n  text-align: center;\n  color: #888;\n`;\n\nconst UnreadCountBadge = styled.span`\n  background-color: #ff3b30;\n  color: white;\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.7rem;\n  font-weight: bold;\n  margin-left: 6px;\n`;\n\nconst HugSentToast = styled(motion.div)`\n  position: fixed;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: #4cd964;\n  color: white;\n  padding: 10px 16px;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  z-index: 1000;\n`;\n\nconst ReplyDialog = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 1000;\n`;\n\nconst ReplyDialogContent = styled(motion.div)`\n  background: white;\n  border-radius: 12px;\n  padding: 1.5rem;\n  width: 90%;\n  max-width: 400px;\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\n\n  h4 {\n    margin-top: 0;\n    margin-bottom: 1rem;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    color: #333;\n  }\n`;\n\nconst HugTypeSelector = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 12px;\n  margin-bottom: 1.25rem;\n  padding: 5px;\n  max-height: 225px;\n  overflow-y: auto;\n\n  /* Custom scrollbar */\n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: rgba(0, 0, 0, 0.03);\n    border-radius: 10px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: rgba(108, 92, 231, 0.2);\n    border-radius: 10px;\n  }\n`;\n\nconst HugTypeOption = styled.button`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 14px;\n  background: ${props => props.selected ? 'rgba(108, 92, 231, 0.1)' : '#f8f9fa'};\n  border: 1px solid ${props => props.selected ? '#6c5ce7' : '#eee'};\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 0.2s;\n  box-shadow: ${props => props.selected ? '0 2px 8px rgba(108, 92, 231, 0.15)' : 'none'};\n\n  &:hover {\n    background: rgba(108, 92, 231, 0.05);\n    border-color: #d0ccfa;\n    transform: translateY(-2px);\n  }\n\n  .icon-wrapper {\n    width: 48px;\n    height: 48px;\n    margin-bottom: 8px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  span {\n    font-size: 0.85rem;\n    font-weight: ${props => props.selected ? '500' : 'normal'};\n    color: ${props => props.selected ? '#6c5ce7' : '#444'};\n    text-align: center;\n  }\n`;\n\nconst TextField = styled.textarea`\n  width: 100%;\n  padding: 12px;\n  border: 1px solid #eee;\n  border-radius: 8px;\n  font-size: 0.9rem;\n  margin-bottom: 1rem;\n  resize: none;\n  height: 100px;\n\n  &:focus {\n    outline: none;\n    border-color: #6c5ce7;\n  }\n`;\n\nconst DialogActions = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 8px;\n`;\n\nconst CancelButton = styled.button`\n  padding: 8px 16px;\n  background: #f8f9fa;\n  color: #666;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-weight: 500;\n  transition: background 0.2s;\n\n  &:hover {\n    background: #eee;\n  }\n`;\n\nconst SendButton = styled.button`\n  padding: 8px 16px;\n  background: #6c5ce7;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-weight: 500;\n  transition: background 0.2s;\n\n  &:hover {\n    background: #5b4cc8;\n  }\n\n  &:disabled {\n    background: #a8a3e1;\n    cursor: not-allowed;\n  }\n`;\n\n// Component\nconst ReceivedHugsWidget = () => {\n  // Use Mesh SDK for data fetching and mutations\n  const { getReceivedHugs, markHugAsRead, sendHug } = useMeshSdk();\n  \n  // State for data, loading and error\n  const [receivedHugs, setReceivedHugs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [sendingHug, setSendingHug] = useState(false);\n\n  const [replyingToHug, setReplyingToHug] = useState(null);\n  const [replyMessage, setReplyMessage] = useState('');\n  const [replyHugType, setReplyHugType] = useState('StandardHug');\n  const [showReplyDialog, setShowReplyDialog] = useState(false);\n  const [showHugSentToast, setShowHugSentToast] = useState(false);\n  const [hugSentToUser, setHugSentToUser] = useState(null);\n\n  // Load received hugs on component mount\n  useEffect(() => {\n    fetchReceivedHugs();\n  }, []);\n\n  // Function to fetch received hugs\n  const fetchReceivedHugs = async () => {\n    try {\n      setLoading(true);\n      const hugs = await getReceivedHugs();\n      setReceivedHugs(hugs || []);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error fetching received hugs:\", err);\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Calculate unread hugs\n  const unreadHugs = receivedHugs.filter(hug => !hug.isRead) || [];\n  const hasUnreadHugs = unreadHugs.length > 0;\n\n  // Auto dismiss toast\n  useEffect(() => {\n    if (showHugSentToast) {\n      const timer = setTimeout(() => {\n        setShowHugSentToast(false);\n      }, 3000);\n\n      return () => clearTimeout(timer);\n    }\n  }, [showHugSentToast]);\n\n  // Helper functions\n  const getInitials = (name) => {\n    if (!name) return '?';\n    return name\n      .split(' ')\n      .map(part => part[0])\n      .join('')\n      .toUpperCase()\n      .substring(0, 2);\n  };\n\n  const getRandomColor = (userId) => {\n    const colors = ['#6c5ce7', '#00cec9', '#fdcb6e', '#e17055', '#74b9ff', '#55efc4'];\n    const index = userId ? userId.charCodeAt(0) % colors.length : 0;\n    return colors[index];\n  };\n\n  const handleMarkAsRead = async (event, hugId) => {\n    event.stopPropagation();\n\n    try {\n      await markHugAsRead(hugId);\n      \n      // Refresh the data after marking as read\n      fetchReceivedHugs();\n    } catch (err) {\n      console.error('Error marking hug as read:', err);\n    }\n  };\n\n  const openReplyDialog = (event, hug) => {\n    event.stopPropagation();\n\n    setReplyingToHug(hug);\n    setReplyMessage(`Thanks for the ${hug.type.replace(/([A-Z])/g, ' $1').trim().toLowerCase()}!`);\n    setReplyHugType('StandardHug');\n    setShowReplyDialog(true);\n  };\n\n  const closeReplyDialog = () => {\n    setShowReplyDialog(false);\n    setReplyingToHug(null);\n    setReplyMessage('');\n  };\n\n  const handleReplySubmit = async () => {\n    if (!replyingToHug || !replyMessage.trim()) return;\n\n    try {\n      setSendingHug(true);\n      \n      // Format hug data according to the SDK requirements\n      const hugData = {\n        recipientId: replyingToHug.sender.id,\n        type: replyHugType,\n        message: replyMessage.trim(),\n      };\n      \n      const result = await sendHug(hugData);\n      \n      if (result) {\n        setHugSentToUser(replyingToHug.sender.name || replyingToHug.sender.username);\n        setShowHugSentToast(true);\n        closeReplyDialog();\n\n        // Refetch after a short delay\n        setTimeout(() => {\n          fetchReceivedHugs();\n        }, 1000);\n      }\n    } catch (err) {\n      console.error('Error sending reply hug:', err);\n    } finally {\n      setSendingHug(false);\n    }\n  };\n\n  // Get background color based on hug type\n  const getHugBackgroundColor = (type) => {\n    switch (type) {\n      case 'ComfortingHug': return 'rgba(255, 152, 0, 0.1)';\n      case 'GroupHug': return 'rgba(76, 175, 80, 0.1)';\n      case 'EnthusiasticHug': return 'rgba(233, 30, 99, 0.1)';\n      case 'FriendlyHug': return 'rgba(33, 150, 243, 0.1)';\n      case 'FamilyHug': return 'rgba(156, 39, 176, 0.1)';\n      case 'StandardHug':\n      default: return 'rgba(108, 92, 231, 0.1)';\n    }\n  };\n\n  // Render functions\n  const renderHugs = () => {\n    if (loading) return <LoadingState>Loading received hugs...</LoadingState>;\n    if (error) return <EmptyState>Couldn't load hugs. Please try again.</EmptyState>;\n    if (!receivedHugs || receivedHugs.length === 0) {\n      return <EmptyState>No hugs received yet. Send some to get the ball rolling!</EmptyState>;\n    }\n\n    return (\n      <HugsList>\n        {receivedHugs.map(hug => (\n          <HugCard \n            key={hug.id}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3 }}\n            isRead={hug.isRead}\n          >\n            <HugIconWrapper bgColor={getHugBackgroundColor(hug.type)}>\n              <Icon type={hug.type} size={48} animate={true} />\n              <SenderAvatar bgColor={getRandomColor(hug.sender.id)}>\n                {getInitials(hug.sender.name || hug.sender.username)}\n              </SenderAvatar>\n            </HugIconWrapper>\n            <HugContent>\n              <HugHeader>\n                <SenderName>{hug.sender.name || hug.sender.username}</SenderName>\n                <HugType type={hug.type}>\n                  {hug.type.replace(/([A-Z])/g, ' $1').trim()}\n                </HugType>\n              </HugHeader>\n              <HugMessage>\n                {hug.message || \"Sent you a hug!\"}\n              </HugMessage>\n              <HugFooter>\n                <TimeStamp>\n                  <FiClock size={12} />\n                  {formatDistanceToNow(new Date(hug.createdAt), { addSuffix: true })}\n                </TimeStamp>\n\n                {!hug.isRead && (\n                  <ReadButton onClick={(e) => handleMarkAsRead(e, hug.id)}>\n                    <FiCheck size={12} />\n                    Mark Read\n                  </ReadButton>\n                )}\n\n                <ReplyButton onClick={(e) => openReplyDialog(e, hug)}>\n                  <FiCornerUpRight size={12} />\n                  Reply\n                </ReplyButton>\n              </HugFooter>\n            </HugContent>\n          </HugCard>\n        ))}\n      </HugsList>\n    );\n  };\n\n  return (\n    <WidgetContainer\n      initial={{ opacity: 0, scale: 0.95 }}\n      animate={{ opacity: 1, scale: 1 }}\n      transition={{ duration: 0.3 }}\n    >\n      <WidgetHeader>\n        <Title>\n          <FiHeart size={16} />\n          Received Hugs\n          {hasUnreadHugs && (\n            <UnreadCountBadge>{unreadHugs.length}</UnreadCountBadge>\n          )}\n        </Title>\n        <ViewAllButton>\n          View All\n        </ViewAllButton>\n      </WidgetHeader>\n\n      {renderHugs()}\n\n      {/* Reply Dialog */}\n      <AnimatePresence>\n        {showReplyDialog && replyingToHug && (\n          <ReplyDialog\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n          >\n            <ReplyDialogContent\n              initial={{ y: 20, opacity: 0 }}\n              animate={{ y: 0, opacity: 1 }}\n              exit={{ y: 20, opacity: 0 }}\n            >\n              <h4>\n                <FiCornerUpRight size={18} />\n                Reply to {replyingToHug.sender.name || replyingToHug.sender.username}\n              </h4>\n\n              <HugTypeSelector>\n                <HugTypeOption \n                  selected={replyHugType === 'StandardHug'} \n                  onClick={() => setReplyHugType('StandardHug')}\n                >\n                  <div className=\"icon-wrapper\">\n                    <Icon type=\"StandardHug\" size={42} animate={true} />\n                  </div>\n                  <span>Standard</span>\n                </HugTypeOption>\n                <HugTypeOption \n                  selected={replyHugType === 'FriendlyHug'} \n                  onClick={() => setReplyHugType('FriendlyHug')}\n                >\n                  <div className=\"icon-wrapper\">\n                    <Icon type=\"FriendlyHug\" size={42} animate={true} />\n                  </div>\n                  <span>Friendly</span>\n                </HugTypeOption>\n                <HugTypeOption \n                  selected={replyHugType === 'EnthusiasticHug'} \n                  onClick={() => setReplyHugType('EnthusiasticHug')}\n                >\n                  <div className=\"icon-wrapper\">\n                    <Icon type=\"EnthusiasticHug\" size={42} animate={true} />\n                  </div>\n                  <span>Enthusiastic</span>\n                </HugTypeOption>\n                <HugTypeOption \n                  selected={replyHugType === 'ComfortingHug'} \n                  onClick={() => setReplyHugType('ComfortingHug')}\n                >\n                  <div className=\"icon-wrapper\">\n                    <Icon type=\"ComfortingHug\" size={42} animate={true} />\n                  </div>\n                  <span>Comforting</span>\n                </HugTypeOption>\n              </HugTypeSelector>\n\n              <TextField\n                value={replyMessage}\n                onChange={(e) => setReplyMessage(e.target.value)}\n                placeholder=\"Write your reply message...\"\n              />\n\n              <DialogActions>\n                <CancelButton onClick={closeReplyDialog}>\n                  Cancel\n                </CancelButton>\n                <SendButton \n                  onClick={handleReplySubmit}\n                  disabled={!replyMessage.trim() || sendingHug}\n                >\n                  {sendingHug ? 'Sending...' : 'Send Reply'}\n                </SendButton>\n              </DialogActions>\n            </ReplyDialogContent>\n          </ReplyDialog>\n        )}\n      </AnimatePresence>\n\n      {/* Toast notification when hug is sent */}\n      <AnimatePresence>\n        {showHugSentToast && (\n          <HugSentToast\n            initial={{ opacity: 0, y: 50 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 50 }}\n          >\n            <FiHeart size={16} />\n            Hug sent to {hugSentToUser}!\n          </HugSentToast>\n        )}\n      </AnimatePresence>\n    </WidgetContainer>\n  );\n};\n\nexport default ReceivedHugsWidget;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useMeshSdk } from '../../hooks/useMeshSdk';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { FiSend, FiHeart, FiX, FiAlertCircle } from 'react-icons/fi';\nimport { Icon } from '../ui/IconComponent';\n\n// Styled Components\nconst QuickHugContainer = styled(motion.div)`\n  position: relative;\n`;\n\nconst QuickHugTrigger = styled(motion.button)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  background: linear-gradient(135deg, #6c5ce7 0%, #a29bfe 100%);\n  color: white;\n  border: none;\n  border-radius: 12px;\n  padding: 12px 20px;\n  font-weight: 600;\n  cursor: pointer;\n  box-shadow: 0 4px 12px rgba(108, 92, 231, 0.2);\n  transition: transform 0.2s, box-shadow 0.2s;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 16px rgba(108, 92, 231, 0.3);\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 16px;\n    font-size: 0.9rem;\n  }\n  \n  @media (max-width: 480px) {\n    padding: 8px 12px;\n    font-size: 0.85rem;\n  }\n`;\n\nconst QuickHugPopup = styled(motion.div)`\n  position: absolute;\n  top: calc(100% + 12px);\n  right: 0;\n  background: white;\n  border-radius: 16px;\n  padding: 1.5rem;\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);\n  width: 320px;\n  z-index: 100;\n  \n  &:before {\n    content: '';\n    position: absolute;\n    top: -6px;\n    right: 20px;\n    width: 12px;\n    height: 12px;\n    background: white;\n    transform: rotate(45deg);\n    border-radius: 2px;\n  }\n`;\n\nconst PopupHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n`;\n\nconst PopupTitle = styled.h4`\n  margin: 0;\n  font-size: 1.1rem;\n  color: #333;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  color: #888;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 4px;\n  border-radius: 50%;\n  \n  &:hover {\n    background: #f0f0f0;\n  }\n`;\n\nconst FriendsList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  max-height: 200px;\n  overflow-y: auto;\n  margin-bottom: 1rem;\n  \n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: rgba(0, 0, 0, 0.03);\n    border-radius: 10px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: rgba(108, 92, 231, 0.2);\n    border-radius: 10px;\n  }\n`;\n\nconst FriendOption = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 8px 12px;\n  border-radius: 8px;\n  cursor: pointer;\n  background: ${props => props.selected ? 'rgba(108, 92, 231, 0.1)' : '#f8f9fa'};\n  border: 1px solid ${props => props.selected ? 'rgba(108, 92, 231, 0.3)' : 'transparent'};\n  transition: all 0.2s;\n  \n  &:hover {\n    background: rgba(108, 92, 231, 0.05);\n  }\n`;\n\nconst Avatar = styled.div`\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${props => props.bgColor || '#6c5ce7'};\n  color: white;\n  font-weight: 600;\n  flex-shrink: 0;\n  margin-right: 12px;\n  \n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nconst UserInfo = styled.div`\n  flex: 1;\n`;\n\nconst UserName = styled.div`\n  font-weight: 500;\n  color: #333;\n  font-size: 0.9rem;\n`;\n\nconst Username = styled.div`\n  color: #888;\n  font-size: 0.8rem;\n`;\n\nconst HugTypeSelector = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-bottom: 1rem;\n  overflow-x: auto;\n  padding-bottom: 8px;\n  \n  /* Hide scrollbar */\n  &::-webkit-scrollbar {\n    height: 4px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: rgba(0, 0, 0, 0.03);\n    border-radius: 10px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: rgba(108, 92, 231, 0.2);\n    border-radius: 10px;\n  }\n`;\n\nconst HugTypeOption = styled.button`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 12px 8px;\n  background: ${props => props.selected ? 'rgba(108, 92, 231, 0.1)' : 'transparent'};\n  border: 1px solid ${props => props.selected ? '#6c5ce7' : '#eee'};\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  min-width: 80px;\n  flex-shrink: 0;\n  box-shadow: ${props => props.selected ? '0 4px 8px rgba(108, 92, 231, 0.15)' : 'none'};\n  transform: ${props => props.selected ? 'translateY(-2px)' : 'none'};\n  \n  &:hover {\n    background: rgba(108, 92, 231, 0.05);\n    box-shadow: 0 4px 8px rgba(108, 92, 231, 0.08);\n    transform: translateY(-2px);\n  }\n  \n  .icon-wrapper {\n    width: 48px;\n    height: 48px;\n    margin-bottom: 8px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  \n  span {\n    font-size: 0.75rem;\n    font-weight: ${props => props.selected ? '600' : '500'};\n    color: ${props => props.selected ? '#6c5ce7' : '#666'};\n  }\n`;\n\nconst SendButton = styled(motion.button)`\n  width: 100%;\n  padding: 12px;\n  background: #6c5ce7;\n  color: white;\n  border: none;\n  border-radius: 12px;\n  font-weight: 600;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  transition: background 0.2s;\n  \n  &:hover {\n    background: #5b4cc8;\n  }\n  \n  &:disabled {\n    background: #a8a3e1;\n    cursor: not-allowed;\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 1rem;\n  color: #888;\n  font-size: 0.9rem;\n`;\n\nconst ErrorState = styled.div`\n  text-align: center;\n  padding: 1rem;\n  color: #e74c3c;\n  font-size: 0.9rem;\n  background-color: rgba(231, 76, 60, 0.1);\n  border-radius: 8px;\n  margin-bottom: 1rem;\n`;\n\nconst LoadingState = styled.div`\n  text-align: center;\n  padding: 1rem;\n  color: #888;\n`;\n\nconst Toast = styled(motion.div)`\n  position: fixed;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 10px 16px;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  z-index: 1000;\n`;\n\nconst HugSentToast = styled(Toast)`\n  background-color: #4cd964;\n  color: white;\n`;\n\nconst ErrorToast = styled(Toast)`\n  background-color: #e74c3c;\n  color: white;\n`;\n\n// Quick Hug Button Component\nconst QuickHugButton = ({ onSent = () => {} }) => {\n  // Use Mesh SDK for data fetching and mutations\n  const { getUsers, sendHug } = useMeshSdk();\n  \n  const [showPopup, setShowPopup] = useState(false);\n  const [selectedFriend, setSelectedFriend] = useState(null);\n  const [selectedHugType, setSelectedHugType] = useState('StandardHug');\n  const [showHugSentToast, setShowHugSentToast] = useState(false);\n  const [showErrorToast, setShowErrorToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [sentToUser, setSentToUser] = useState('');\n  \n  // State for users data, loading and error\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [sendingHug, setSendingHug] = useState(false);\n  \n  // Fetch users when popup is opened\n  useEffect(() => {\n    if (showPopup) {\n      fetchUsers();\n    }\n  }, [showPopup]);\n  \n  // Function to fetch users\n  const fetchUsers = async () => {\n    try {\n      setLoading(true);\n      const usersList = await getUsers();\n      setUsers(usersList || []);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error fetching users:\", err);\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Close popup when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (showPopup && event.target.closest('.quick-hug-popup') === null &&\n          event.target.closest('.quick-hug-trigger') === null) {\n        setShowPopup(false);\n      }\n    };\n    \n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, [showPopup]);\n  \n  // Hide toasts after 3 seconds\n  useEffect(() => {\n    if (showHugSentToast) {\n      const timer = setTimeout(() => {\n        setShowHugSentToast(false);\n      }, 3000);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [showHugSentToast]);\n\n  useEffect(() => {\n    if (showErrorToast) {\n      const timer = setTimeout(() => {\n        setShowErrorToast(false);\n      }, 3000);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [showErrorToast]);\n  \n  // Toggle popup visibility\n  const togglePopup = () => {\n    setShowPopup(prev => !prev);\n    \n    // Reset selections when opening\n    if (!showPopup) {\n      setSelectedFriend(null);\n      setSelectedHugType('StandardHug');\n    }\n  };\n  \n  // Close popup\n  const closePopup = () => {\n    setShowPopup(false);\n  };\n  \n  // Select a friend\n  const handleSelectFriend = (friend) => {\n    setSelectedFriend(friend === selectedFriend ? null : friend);\n  };\n  \n  // Helper function to get user initials\n  const getInitials = (name) => {\n    if (!name) return '?';\n    return name\n      .split(' ')\n      .map(part => part[0])\n      .join('')\n      .toUpperCase()\n      .substring(0, 2);\n  };\n  \n  // Helper function for avatar color\n  const getRandomColor = (userId) => {\n    const colors = ['#6c5ce7', '#00cec9', '#fdcb6e', '#e17055', '#74b9ff', '#55efc4'];\n    const index = userId ? userId.charCodeAt(0) % colors.length : 0;\n    return colors[index];\n  };\n  \n  // Send hug to selected friend\n  const handleSendHug = async () => {\n    if (!selectedFriend) return;\n    \n    try {\n      setSendingHug(true);\n      \n      // Format hug data according to the SDK requirements\n      const hugData = {\n        recipientId: selectedFriend.id,\n        type: selectedHugType,\n        message: `Sending you a quick ${selectedHugType.replace(/([A-Z])/g, ' $1').trim().toLowerCase()}!`,\n      };\n      \n      const result = await sendHug(hugData);\n      \n      if (result) {\n        setSentToUser(selectedFriend.name || selectedFriend.username);\n        setShowHugSentToast(true);\n        closePopup();\n        onSent(); // Callback to parent component\n      }\n    } catch (err) {\n      console.error('Error sending hug:', err);\n      setErrorMessage(err.message?.split(':')[0] || 'Failed to send hug');\n      setShowErrorToast(true);\n    } finally {\n      setSendingHug(false);\n    }\n  };\n  \n  return (\n    <QuickHugContainer>\n      <QuickHugTrigger \n        className=\"quick-hug-trigger\"\n        onClick={togglePopup}\n        whileHover={{ scale: 1.05 }}\n        whileTap={{ scale: 0.95 }}\n      >\n        <FiHeart size={16} />\n        Quick Hug\n      </QuickHugTrigger>\n      \n      <AnimatePresence>\n        {showPopup && (\n          <QuickHugPopup\n            className=\"quick-hug-popup\"\n            initial={{ opacity: 0, y: -10 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -10 }}\n            transition={{ duration: 0.2 }}\n          >\n            <PopupHeader>\n              <PopupTitle>\n                <FiHeart size={16} />\n                Send a Quick Hug\n              </PopupTitle>\n              <CloseButton onClick={closePopup}>\n                <FiX size={18} />\n              </CloseButton>\n            </PopupHeader>\n            \n            {/* Friends List */}\n            {loading ? (\n              <LoadingState>Loading friends...</LoadingState>\n            ) : error ? (\n              <ErrorState>\n                Couldn't load friends list. \n                {error.message && <div>Error: {error.message.split(':')[0]}</div>}\n              </ErrorState>\n            ) : !users || users.length === 0 ? (\n              <EmptyState>No friends found</EmptyState>\n            ) : (\n              <FriendsList>\n                {users.map(friend => (\n                  <FriendOption\n                    key={friend.id}\n                    selected={selectedFriend && selectedFriend.id === friend.id}\n                    onClick={() => handleSelectFriend(friend)}\n                  >\n                    <Avatar bgColor={getRandomColor(friend.id)}>\n                      {friend.avatarUrl ? (\n                        <img src={friend.avatarUrl} alt={friend.name} />\n                      ) : (\n                        getInitials(friend.name || friend.username)\n                      )}\n                    </Avatar>\n                    <UserInfo>\n                      <UserName>{friend.name || 'Unnamed User'}</UserName>\n                      <Username>@{friend.username}</Username>\n                    </UserInfo>\n                  </FriendOption>\n                ))}\n              </FriendsList>\n            )}\n            \n            {/* Hug Type Selector */}\n            <HugTypeSelector>\n              <HugTypeOption \n                selected={selectedHugType === 'StandardHug'} \n                onClick={() => setSelectedHugType('StandardHug')}\n              >\n                <div className=\"icon-wrapper\">\n                  <Icon type=\"StandardHug\" size={48} animate={true} />\n                </div>\n                <span>Standard</span>\n              </HugTypeOption>\n              <HugTypeOption \n                selected={selectedHugType === 'FriendlyHug'} \n                onClick={() => setSelectedHugType('FriendlyHug')}\n              >\n                <div className=\"icon-wrapper\">\n                  <Icon type=\"FriendlyHug\" size={48} animate={true} />\n                </div>\n                <span>Friendly</span>\n              </HugTypeOption>\n              <HugTypeOption \n                selected={selectedHugType === 'ComfortingHug'} \n                onClick={() => setSelectedHugType('ComfortingHug')}\n              >\n                <div className=\"icon-wrapper\">\n                  <Icon type=\"ComfortingHug\" size={48} animate={true} />\n                </div>\n                <span>Comforting</span>\n              </HugTypeOption>\n            </HugTypeSelector>\n            \n            {/* Send Button */}\n            <SendButton\n              onClick={handleSendHug}\n              disabled={!selectedFriend || sendingHug}\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n            >\n              {sendingHug ? 'Sending...' : 'Send Hug'}\n              <FiSend size={16} />\n            </SendButton>\n          </QuickHugPopup>\n        )}\n      </AnimatePresence>\n      \n      {/* Toast notifications */}\n      <AnimatePresence>\n        {showHugSentToast && (\n          <HugSentToast\n            initial={{ opacity: 0, y: 50 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 50 }}\n          >\n            <FiHeart size={16} />\n            Hug sent to {sentToUser}!\n          </HugSentToast>\n        )}\n        \n        {showErrorToast && (\n          <ErrorToast\n            initial={{ opacity: 0, y: 50 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 50 }}\n          >\n            <FiAlertCircle size={16} />\n            {errorMessage}\n          </ErrorToast>\n        )}\n      </AnimatePresence>\n    </QuickHugContainer>\n  );\n};\n\nexport default QuickHugButton;","import React, { useState, useEffect } from 'react';\nimport { useMeshSdk } from '../../hooks/useMeshSdk';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { FiSend, FiUserPlus, FiX, FiAlertCircle, FiUsers, FiSearch } from 'react-icons/fi';\nimport { Icon } from '../ui/IconComponent';\n\n// Styled Components\nconst WelcomeHugContainer = styled(motion.div)`\n  position: relative;\n`;\n\nconst WelcomeHugTrigger = styled(motion.button)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  background: linear-gradient(135deg, #4CAF50 0%, #8BC34A 100%);\n  color: white;\n  border: none;\n  border-radius: 12px;\n  padding: 12px 20px;\n  font-weight: 600;\n  cursor: pointer;\n  box-shadow: 0 4px 12px rgba(76, 175, 80, 0.2);\n  transition: transform 0.2s, box-shadow 0.2s;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 16px rgba(76, 175, 80, 0.3);\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 16px;\n    font-size: 0.9rem;\n  }\n  \n  @media (max-width: 480px) {\n    padding: 8px 12px;\n    font-size: 0.85rem;\n  }\n`;\n\nconst WelcomeHugPopup = styled(motion.div)`\n  position: absolute;\n  top: calc(100% + 12px);\n  right: 0;\n  background: white;\n  border-radius: 16px;\n  padding: 1.5rem;\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);\n  width: 320px;\n  z-index: 100;\n  \n  &:before {\n    content: '';\n    position: absolute;\n    top: -6px;\n    right: 20px;\n    width: 12px;\n    height: 12px;\n    background: white;\n    transform: rotate(45deg);\n    border-radius: 2px;\n  }\n`;\n\nconst PopupHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n`;\n\nconst PopupTitle = styled.h4`\n  margin: 0;\n  font-size: 1.1rem;\n  color: #333;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  color: #888;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 4px;\n  border-radius: 50%;\n  \n  &:hover {\n    background: #f0f0f0;\n  }\n`;\n\nconst SearchInput = styled.div`\n  display: flex;\n  align-items: center;\n  background: #f8f9fa;\n  border-radius: 8px;\n  padding: 0 12px;\n  margin-bottom: 16px;\n  \n  input {\n    flex: 1;\n    border: none;\n    background: transparent;\n    padding: 12px 8px;\n    outline: none;\n    font-size: 0.9rem;\n    \n    &::placeholder {\n      color: #aaa;\n    }\n  }\n  \n  svg {\n    color: #888;\n  }\n`;\n\nconst UsersList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  max-height: 200px;\n  overflow-y: auto;\n  margin-bottom: 1rem;\n  \n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: rgba(0, 0, 0, 0.03);\n    border-radius: 10px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: rgba(76, 175, 80, 0.2);\n    border-radius: 10px;\n  }\n`;\n\nconst UserOption = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 8px 12px;\n  border-radius: 8px;\n  cursor: pointer;\n  background: ${props => props.selected ? 'rgba(76, 175, 80, 0.1)' : '#f8f9fa'};\n  border: 1px solid ${props => props.selected ? 'rgba(76, 175, 80, 0.3)' : 'transparent'};\n  transition: all 0.2s;\n  \n  &:hover {\n    background: rgba(76, 175, 80, 0.05);\n  }\n`;\n\nconst Avatar = styled.div`\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${props => props.bgColor || '#4CAF50'};\n  color: white;\n  font-weight: 600;\n  flex-shrink: 0;\n  margin-right: 12px;\n  \n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nconst UserInfo = styled.div`\n  flex: 1;\n`;\n\nconst UserName = styled.div`\n  font-weight: 500;\n  color: #333;\n  font-size: 0.9rem;\n`;\n\nconst Username = styled.div`\n  color: #888;\n  font-size: 0.8rem;\n`;\n\nconst MessageInput = styled.textarea`\n  width: 100%;\n  padding: 12px;\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  resize: none;\n  font-size: 0.9rem;\n  margin-bottom: 16px;\n  font-family: inherit;\n  outline: none;\n  \n  &:focus {\n    border-color: #4CAF50;\n  }\n`;\n\nconst SendButton = styled(motion.button)`\n  width: 100%;\n  padding: 12px;\n  background: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 12px;\n  font-weight: 600;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  transition: background 0.2s;\n  \n  &:hover {\n    background: #388E3C;\n  }\n  \n  &:disabled {\n    background: #A5D6A7;\n    cursor: not-allowed;\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 1rem;\n  color: #888;\n  font-size: 0.9rem;\n`;\n\nconst ErrorState = styled.div`\n  text-align: center;\n  padding: 1rem;\n  color: #e74c3c;\n  font-size: 0.9rem;\n  background-color: rgba(231, 76, 60, 0.1);\n  border-radius: 8px;\n  margin-bottom: 1rem;\n`;\n\nconst LoadingState = styled.div`\n  text-align: center;\n  padding: 1rem;\n  color: #888;\n`;\n\nconst Toast = styled(motion.div)`\n  position: fixed;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 10px 16px;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  z-index: 1000;\n`;\n\nconst SuccessToast = styled(Toast)`\n  background-color: #4CAF50;\n  color: white;\n`;\n\nconst ErrorToast = styled(Toast)`\n  background-color: #e74c3c;\n  color: white;\n`;\n\n// Welcome Hug Button Component\nconst WelcomeHugButton = ({ onSent = () => {} }) => {\n  const [showPopup, setShowPopup] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [welcomeMessage, setWelcomeMessage] = useState('');\n  const [showSuccessToast, setShowSuccessToast] = useState(false);\n  const [showErrorToast, setShowErrorToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [sentToUser, setSentToUser] = useState('');\n\n  // Default welcome message\n  useEffect(() => {\n    if (!welcomeMessage) {\n      setWelcomeMessage('Hi there! I\\'d like to connect and be friends on HugMeNow! Sending you a warm welcome hug. 🤗');\n    }\n  }, []);\n  \n  // Use the Mesh SDK for API operations\n  const { getUsers, sendHug } = useMeshSdk();\n  \n  // State for users data\n  const [usersData, setUsersData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [sendingHug, setSendingHug] = useState(false);\n  \n  // Load users when the popup is shown\n  useEffect(() => {\n    async function loadUsers() {\n      if (!showPopup) return;\n      \n      setLoading(true);\n      setError(null);\n      \n      try {\n        const users = await getUsers();\n        if (users && Array.isArray(users)) {\n          setUsersData(users);\n        } else {\n          setUsersData([]);\n        }\n      } catch (err) {\n        console.error(\"Error fetching users:\", err);\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    \n    loadUsers();\n  }, [showPopup, searchTerm, getUsers]);\n  \n  // Close popup when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (showPopup && event.target.closest('.welcome-hug-popup') === null &&\n          event.target.closest('.welcome-hug-trigger') === null) {\n        setShowPopup(false);\n      }\n    };\n    \n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, [showPopup]);\n  \n  // Hide toasts after 3 seconds\n  useEffect(() => {\n    if (showSuccessToast) {\n      const timer = setTimeout(() => {\n        setShowSuccessToast(false);\n      }, 3000);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [showSuccessToast]);\n\n  useEffect(() => {\n    if (showErrorToast) {\n      const timer = setTimeout(() => {\n        setShowErrorToast(false);\n      }, 3000);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [showErrorToast]);\n  \n  // Toggle popup visibility\n  const togglePopup = () => {\n    setShowPopup(prev => !prev);\n    \n    // Reset selections when opening\n    if (!showPopup) {\n      setSelectedUser(null);\n      setSearchTerm('');\n      if (!welcomeMessage) {\n        setWelcomeMessage('Hi there! I\\'d like to connect and be friends on HugMeNow! Sending you a warm welcome hug. 🤗');\n      }\n    }\n  };\n  \n  // Close popup\n  const closePopup = () => {\n    setShowPopup(false);\n  };\n  \n  // Handle search input change\n  const handleSearchChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n  \n  // Select a user\n  const handleSelectUser = (user) => {\n    setSelectedUser(user === selectedUser ? null : user);\n  };\n  \n  // Helper function to get user initials\n  const getInitials = (name) => {\n    if (!name) return '?';\n    return name\n      .split(' ')\n      .map(part => part[0])\n      .join('')\n      .toUpperCase()\n      .substring(0, 2);\n  };\n  \n  // Helper function for avatar color\n  const getRandomColor = (userId) => {\n    const colors = ['#4CAF50', '#8BC34A', '#CDDC39', '#009688', '#00BCD4', '#3F51B5'];\n    const index = userId ? userId.charCodeAt(0) % colors.length : 0;\n    return colors[index];\n  };\n  \n  // Send welcome hug using Mesh SDK\n  // Note: Friend request functionality has been removed since it's not in the current schema\n  const handleSendWelcomeHug = async () => {\n    if (!selectedUser) return;\n    \n    try {\n      setSendingHug(true);\n      \n      // Prepare the hug input with the proper parameter structure\n      const hugInput = {\n        recipientId: selectedUser.id,\n        type: \"WelcomeHug\",\n        message: welcomeMessage || 'Hi there! I\\'d like to connect and be friends on HugMeNow! Sending you a warm welcome hug.',\n      };\n      \n      // Send the welcome hug with the input structured according to the schema requirements\n      const result = await sendHug(hugInput);\n      \n      if (result) {\n        setSentToUser(selectedUser.name || selectedUser.username);\n        setShowSuccessToast(true);\n        closePopup();\n        onSent(); // Callback to parent component\n      }\n    } catch (err) {\n      console.error('Error:', err);\n      setErrorMessage(err.message || 'Something went wrong');\n      setShowErrorToast(true);\n    } finally {\n      setSendingHug(false);\n    }\n  };\n  \n  return (\n    <WelcomeHugContainer>\n      <WelcomeHugTrigger \n        className=\"welcome-hug-trigger\"\n        onClick={togglePopup}\n        whileHover={{ scale: 1.05 }}\n        whileTap={{ scale: 0.95 }}\n      >\n        <FiUserPlus size={16} />\n        Welcome Friend\n      </WelcomeHugTrigger>\n      \n      <AnimatePresence>\n        {showPopup && (\n          <WelcomeHugPopup\n            className=\"welcome-hug-popup\"\n            initial={{ opacity: 0, y: -10 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -10 }}\n            transition={{ duration: 0.2 }}\n          >\n            <PopupHeader>\n              <PopupTitle>\n                <FiUsers size={16} />\n                Welcome a New Friend\n              </PopupTitle>\n              <CloseButton onClick={closePopup}>\n                <FiX size={18} />\n              </CloseButton>\n            </PopupHeader>\n            \n            <SearchInput>\n              <FiSearch size={16} />\n              <input \n                type=\"text\" \n                placeholder=\"Search users...\" \n                value={searchTerm}\n                onChange={handleSearchChange}\n              />\n            </SearchInput>\n            \n            {/* Users List */}\n            {loading ? (\n              <LoadingState>Loading users...</LoadingState>\n            ) : error ? (\n              <ErrorState>\n                Couldn't load users list. \n                {error.message && <div>Error: {error.message.split(':')[0]}</div>}\n              </ErrorState>\n            ) : !usersData || usersData.length === 0 ? (\n              <EmptyState>No users found</EmptyState>\n            ) : (\n              <UsersList>\n                {usersData\n                  .filter(user => searchTerm ? \n                    (user.name?.toLowerCase().includes(searchTerm.toLowerCase()) || \n                     user.username?.toLowerCase().includes(searchTerm.toLowerCase())) : \n                    true)\n                  .map(user => (\n                    <UserOption\n                      key={user.id}\n                      selected={selectedUser && selectedUser.id === user.id}\n                      onClick={() => handleSelectUser(user)}\n                    >\n                      <Avatar bgColor={getRandomColor(user.id)}>\n                        {user.avatarUrl ? (\n                          <img src={user.avatarUrl} alt={user.name} />\n                        ) : (\n                          getInitials(user.name || user.username)\n                        )}\n                      </Avatar>\n                      <UserInfo>\n                        <UserName>{user.name || 'Unnamed User'}</UserName>\n                        <Username>@{user.username}</Username>\n                      </UserInfo>\n                    </UserOption>\n                  ))\n                }\n              </UsersList>\n            )}\n            \n            {/* Welcome Message Input */}\n            <MessageInput\n              placeholder=\"Add a welcome message (optional)\"\n              value={welcomeMessage}\n              onChange={(e) => setWelcomeMessage(e.target.value)}\n              rows={3}\n            />\n            \n            {/* Preview of the welcome hug */}\n            <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '16px' }}>\n              <Icon type=\"WelcomeHug\" size={64} animate={true} />\n            </div>\n            \n            {/* Send Button */}\n            <SendButton\n              onClick={handleSendWelcomeHug}\n              disabled={!selectedUser || sendingHug}\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n            >\n              {sendingHug ? 'Sending...' : 'Send Welcome Hug'}\n              <FiSend size={16} />\n            </SendButton>\n          </WelcomeHugPopup>\n        )}\n      </AnimatePresence>\n      \n      {/* Toast notifications */}\n      <AnimatePresence>\n        {showSuccessToast && (\n          <SuccessToast\n            initial={{ opacity: 0, y: 50 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 50 }}\n          >\n            <FiUserPlus size={16} />\n            Welcome hug sent to {sentToUser}!\n          </SuccessToast>\n        )}\n        \n        {showErrorToast && (\n          <ErrorToast\n            initial={{ opacity: 0, y: 50 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 50 }}\n          >\n            <FiAlertCircle size={16} />\n            {errorMessage}\n          </ErrorToast>\n        )}\n      </AnimatePresence>\n    </WelcomeHugContainer>\n  );\n};\n\nexport default WelcomeHugButton;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { useAuth } from '../contexts/AuthContext';\nimport LoadingScreen from '../components/common/LoadingScreen';\nimport FriendsMoodList from '../components/FriendsMoodList';\nimport DashboardStats from '../components/dashboard/DashboardStats';\nimport FriendMoodsWidget from '../components/dashboard/FriendMoodsWidget';\nimport QuickSendHugWidget from '../components/dashboard/QuickSendHugWidget';\nimport ReceivedHugsWidget from '../components/dashboard/ReceivedHugsWidget';\nimport QuickHugButton from '../components/dashboard/QuickHugButton';\nimport WelcomeHugButton from '../components/dashboard/WelcomeHugButton';\nimport { Icon } from '../components/ui/IconComponent';\n\n// Styled components\nconst DashboardContainer = styled.div`\n  min-height: 100vh;\n  background-color: #f8f9fa;\n`;\n\nconst DashboardHeader = styled.header`\n  background-color: white;\n  padding: 1rem 1.5rem;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: sticky;\n  top: 0;\n  z-index: 100;\n`;\n\nconst Logo = styled.div`\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: #6c5ce7;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst HeaderActions = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  \n  @media (max-width: 768px) {\n    gap: 8px;\n  }\n`;\n\nconst UserInfo = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    .user-name {\n      display: none;\n    }\n  }\n`;\n\nconst Avatar = styled(motion.div)`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: #6c5ce7;\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  margin-right: 0.5rem;\n  box-shadow: 0 2px 8px rgba(108, 92, 231, 0.25);\n`;\n\nconst Username = styled.span`\n  font-weight: 500;\n  margin-right: 1rem;\n  color: #333;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 150px;\n  \n  @media (max-width: 480px) {\n    max-width: 80px;\n  }\n`;\n\nconst LogoutButton = styled(motion.button)`\n  background: none;\n  border: none;\n  color: #666;\n  cursor: pointer;\n  padding: 6px 12px;\n  border-radius: 4px;\n  font-weight: 500;\n  \n  &:hover {\n    color: #e74c3c;\n    background-color: #f8f9fa;\n  }\n`;\n\nconst DashboardContent = styled.main`\n  padding: 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n  \n  @media (max-width: 768px) {\n    padding: 1.5rem;\n  }\n  \n  @media (max-width: 480px) {\n    padding: 1rem;\n  }\n`;\n\nconst WelcomeCard = styled(motion.div)`\n  background-color: #6c5ce7;\n  background-image: linear-gradient(135deg, #6c5ce7 0%, #a29bfe 100%);\n  border-radius: 16px;\n  padding: 2rem;\n  box-shadow: 0 8px 20px rgba(108, 92, 231, 0.15);\n  margin-bottom: 2rem;\n  position: relative;\n  overflow: hidden;\n  \n  h1 {\n    margin-bottom: 1rem;\n    color: white;\n    position: relative;\n    z-index: 1;\n    font-size: 1.8rem;\n    \n    @media (max-width: 480px) {\n      font-size: 1.5rem;\n    }\n  }\n  \n  p {\n    color: rgba(255, 255, 255, 0.9);\n    margin-bottom: 1rem;\n    position: relative;\n    z-index: 1;\n    max-width: 700px;\n    font-size: 1.1rem;\n    line-height: 1.5;\n    \n    @media (max-width: 480px) {\n      font-size: 1rem;\n    }\n  }\n`;\n\nconst WelcomeDecoration = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 300px;\n  height: 100%;\n  opacity: 0.1;\n  z-index: 0;\n  pointer-events: none;\n`;\n\nconst FeaturesGrid = styled(motion.div)`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 1.5rem;\n  margin-top: 2.5rem;\n  \n  @media (max-width: 768px) {\n    grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n  }\n  \n  @media (max-width: 480px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst WidgetsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 1.5rem;\n  margin: 2.5rem 0;\n  \n  @media (max-width: 992px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst WidgetColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n`;\n\nconst SectionTitle = styled(motion.h2)`\n  margin: 2rem 0 1rem;\n  color: #333;\n  font-size: 1.5rem;\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  \n  &::after {\n    content: \"\";\n    flex: 1;\n    height: 1px;\n    background: linear-gradient(to right, #e0e0e0, transparent);\n    margin-left: 1rem;\n  }\n  \n  @media (max-width: 768px) {\n    font-size: 1.3rem;\n  }\n`;\n\nconst FeatureCard = styled(motion.div)`\n  background-color: white;\n  border-radius: 16px;\n  padding: 1.5rem;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n  transition: all 0.3s ease;\n  cursor: pointer;\n  overflow: hidden;\n  position: relative;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\n  }\n  \n  h3 {\n    color: #6c5ce7;\n    margin-bottom: 1rem;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    position: relative;\n    z-index: 1;\n    font-size: 1.3rem;\n  }\n  \n  p {\n    color: #666;\n    position: relative;\n    z-index: 1;\n    margin-bottom: 0;\n    line-height: 1.5;\n  }\n`;\n\nconst FeatureDecoration = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n  opacity: 0.03;\n  z-index: 0;\n  pointer-events: none;\n`;\n\n// Animation variants\nconst fadeInUp = {\n  hidden: { opacity: 0, y: 20 },\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: { duration: 0.5, ease: [0.22, 1, 0.36, 1] }\n  }\n};\n\nconst staggerContainer = {\n  hidden: { opacity: 0 },\n  visible: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\nconst Dashboard = () => {\n  const { currentUser, logout } = useAuth();\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n  \n  useEffect(() => {\n    // Check if we're coming from a login redirect\n    const hasRedirectFlag = localStorage.getItem('redirectToDashboard') === 'true';\n    \n    if (hasRedirectFlag) {\n      console.log('Dashboard detected redirect flag from login');\n      // Clear the flag\n      localStorage.removeItem('redirectToDashboard');\n    }\n    \n    // Simulate loading data\n    const timer = setTimeout(() => {\n      setIsLoading(false);\n      \n      if (hasRedirectFlag) {\n        console.log('Dashboard fully loaded after login redirect');\n      }\n    }, 1000);\n    \n    return () => clearTimeout(timer);\n  }, []);\n  \n  const handleLogout = async () => {\n    await logout();\n    navigate('/login');\n  };\n  \n  const navigateToFeature = (path) => {\n    navigate(path);\n  };\n  \n  const getInitials = (name) => {\n    if (!name) return '?';\n    return name\n      .split(' ')\n      .map(part => part[0])\n      .join('')\n      .toUpperCase()\n      .substring(0, 2);\n  };\n  \n  if (isLoading) {\n    return <LoadingScreen text=\"Loading dashboard...\" />;\n  }\n  \n  return (\n    <DashboardContainer>\n      <DashboardHeader>\n        <Logo>\n          <Icon type=\"hugIcon\" size={28} />\n          HugMeNow\n        </Logo>\n        <HeaderActions>\n          <QuickHugButton onSent={() => console.log('Quick hug sent successfully!')} />\n          <WelcomeHugButton onSent={() => console.log('Welcome hug and friend request sent successfully!')} />\n          <UserInfo>\n            <Avatar \n              initial={{ scale: 0 }}\n              animate={{ scale: 1 }}\n              transition={{ type: 'spring', bounce: 0.5 }}\n              whileHover={{ scale: 1.1 }}\n            >\n              {getInitials(currentUser?.name)}\n            </Avatar>\n            <Username className=\"user-name\">{currentUser?.name || 'Guest'}</Username>\n            <LogoutButton \n              onClick={handleLogout}\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              Logout\n            </LogoutButton>\n          </UserInfo>\n        </HeaderActions>\n      </DashboardHeader>\n      \n      <DashboardContent>\n        <WelcomeCard\n          initial=\"hidden\"\n          animate=\"visible\"\n          variants={fadeInUp}\n        >\n          <WelcomeDecoration>\n            <svg viewBox=\"0 0 300 200\" fill=\"none\">\n              <circle cx=\"250\" cy=\"50\" r=\"200\" fill=\"white\" />\n              <circle cx=\"50\" cy=\"150\" r=\"100\" fill=\"white\" />\n            </svg>\n          </WelcomeDecoration>\n          \n          <h1>Welcome, {currentUser?.name || 'Friend'}!</h1>\n          <p>\n            Track your daily emotions, send and receive virtual hugs, and connect with supportive friends.\n          </p>\n        </WelcomeCard>\n        \n        {/* Stats Section */}\n        <DashboardStats />\n        \n        {/* Widgets Section */}\n        <SectionTitle \n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.2 }}\n        >\n          <Icon type=\"heart\" size={20} />\n          Your Activity Center\n        </SectionTitle>\n        \n        <WidgetsContainer>\n          <WidgetColumn>\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.3 }}\n            >\n              <FriendMoodsWidget />\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.5 }}\n            >\n              <FriendsMoodList />\n            </motion.div>\n          </WidgetColumn>\n          \n          <WidgetColumn>\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.4 }}\n            >\n              <ReceivedHugsWidget />\n            </motion.div>\n            \n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.5 }}\n            >\n              <QuickSendHugWidget />\n            </motion.div>\n          </WidgetColumn>\n        </WidgetsContainer>\n        \n        {/* Features Section */}\n        <SectionTitle \n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.2 }}\n        >\n          <Icon type=\"moodTracker\" size={20} />\n          Featured Tools\n        </SectionTitle>\n        \n        <FeaturesGrid\n          variants={staggerContainer}\n          initial=\"hidden\"\n          animate=\"visible\"\n        >\n          <FeatureCard\n            onClick={() => navigateToFeature('/mood-tracker')}\n            variants={fadeInUp}\n            whileHover={{ scale: 1.02 }}\n            whileTap={{ scale: 0.98 }}\n          >\n            <FeatureDecoration>\n              <svg viewBox=\"0 0 200 200\" fill=\"none\">\n                <path d=\"M0 0C50 20 100 50 150 100C170 120 190 150 200 200V0H0Z\" fill=\"var(--primary-color)\" />\n              </svg>\n            </FeatureDecoration>\n            \n            <h3>\n              <Icon type=\"moodTracker\" size={24} />\n              Mood Tracker\n            </h3>\n            <p>\n              Track your daily mood and discover patterns in your emotional well-being over time.\n            </p>\n          </FeatureCard>\n          \n          <FeatureCard\n            onClick={() => navigateToFeature('/hug-center')}\n            variants={fadeInUp}\n            whileHover={{ scale: 1.02 }}\n            whileTap={{ scale: 0.98 }}\n          >\n            <FeatureDecoration>\n              <svg viewBox=\"0 0 200 200\" fill=\"none\">\n                <path d=\"M0 0C50 20 100 50 150 100C170 120 190 150 200 200V0H0Z\" fill=\"#9D65C9\" />\n              </svg>\n            </FeatureDecoration>\n            \n            <h3>\n              <Icon type=\"ComfortingHug\" size={28} />\n              Hug Center\n            </h3>\n            <p>\n              Send customized virtual hugs to friends or request support from your community.\n            </p>\n          </FeatureCard>\n          \n          <FeatureCard\n            onClick={() => navigateToFeature('/profile')}\n            variants={fadeInUp}\n            whileHover={{ scale: 1.02 }}\n            whileTap={{ scale: 0.98 }}\n          >\n            <FeatureDecoration>\n              <svg viewBox=\"0 0 200 200\" fill=\"none\">\n                <path d=\"M0 0C50 20 100 50 150 100C170 120 190 150 200 200V0H0Z\" fill=\"#4CAF50\" />\n              </svg>\n            </FeatureDecoration>\n            \n            <h3>\n              <Icon type=\"profile\" size={24} />\n              Profile\n            </h3>\n            <p>\n              Customize your profile, manage privacy settings, and track your emotional journey.\n            </p>\n          </FeatureCard>\n        </FeaturesGrid>\n      </DashboardContent>\n    </DashboardContainer>\n  );\n};\n\nexport default Dashboard;"],"names":["spin","keyframes","SpinnerContainer","styled","Spinner","SpinnerText","LoadingSpinner","text","jsx","FriendsMoodsContainer","MoodsHeader","RefreshButton","MoodsList","MoodCard","MoodHeader","MoodScore","MoodDate","MoodNote","UserInfo","EmptyState","getMoodEmoji","intensity","getMoodLabel","getFormattedDate","dateString","getInitials","name","part","FriendsMoodList","loading","error","data","refetch","useQuery","GET_FRIENDS_MOODS","ErrorMessage","friendsMoods","jsxs","mood","_a","_b","happyFace","hugIcon","moodTracker","community","ComfortingHug","EnthusiasticHug","GroupHug","StandardHug","SupportiveHug","VirtualHug","RelaxingHug","WelcomeHug","FriendlyHug","GentleHug","FamilyHug","SmilingHug","moodEmojis","heart","fire","Icon","type","score","size","animate","props","moodType","src","motion","alt","StatsContainer","StatCard","StatValue","StatLabel","IconContainer","BackgroundDecoration","containerVariants","cardVariants","DashboardStats","getMoodStreak","getUserMoods","getSentHugs","getReceivedHugs","useMeshSdk","stats","setStats","useState","isLoading","setIsLoading","useEffect","fetchData","moodStreak","userMoods","sentHugs","receivedHugs","statsCards","_","index","stat","minutesInMonth","minutesInDay","constructFromSymbol","constructFrom","date","value","toDate","argument","context","defaultOptions","getDefaultOptions","getTimezoneOffsetInMilliseconds","_date","utcDate","normalizeDates","dates","normalize","compareAsc","dateLeft","dateRight","diff","constructNow","differenceInCalendarMonths","laterDate","earlierDate","options","laterDate_","earlierDate_","yearsDiff","monthsDiff","getRoundingMethod","method","number","result","differenceInMilliseconds","endOfDay","endOfMonth","month","isLastDayOfMonth","differenceInMonths","workingLaterDate","sign","difference","isLastMonthNotFull","differenceInSeconds","formatDistanceLocale","formatDistance","token","count","tokenValue","buildFormatLongFn","args","width","dateFormats","timeFormats","dateTimeFormats","formatLong","formatRelativeLocale","formatRelative","_baseDate","_options","buildLocalizeFn","valuesArray","defaultWidth","eraValues","quarterValues","monthValues","dayValues","dayPeriodValues","formattingDayPeriodValues","ordinalNumber","dirtyNumber","rem100","localize","quarter","buildMatchFn","string","matchPattern","matchResult","matchedString","parsePatterns","key","findIndex","pattern","findKey","rest","object","predicate","array","buildMatchPatternFn","parseResult","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","match","enUS","locale","defaultLocale","minutesInAlmostTwoDays","comparison","localizeOptions","seconds","offsetInSeconds","minutes","months","hours","days","nearestMonth","monthsSinceStartOfYear","years","formatDistanceToNow","WidgetContainer","WidgetHeader","Title","ViewAllButton","UserAvatar","NeedsSupportBadge","MoodContent","UserName","MoodFooter","TimeStamp","SendHugButton","LoadingState","AlertBanner","HugSentToast","FilterControls","FilterButton","FriendMoodsWidget","FriendsMoods","sendHug","expandedMood","setExpandedMood","filter","setFilter","showHugSentToast","setShowHugSentToast","hugSentToUser","setHugSentToUser","sendingHugTo","setSendingHugTo","moods","setMoods","setLoading","setError","sendingHug","setSendingHug","fetchMoods","err","interval","friendsNeedingSupport","hasFriendsNeedingSupport","timer","getRandomColor","userId","colors","handleSendHug","event","hugData","getFilteredMoods","filteredMoods","a","b","renderMoods","needsSupport","FiAlertCircle","FiClock","e","Fragment","FiHeart","FiSend","FiUser","AnimatePresence","FiBell","SearchContainer","SearchInput","SearchIcon","ClearButton","HugTypeSelector","HugTypeOption","RecipientsList","RecipientOption","Username","SelectButton","MessageArea","TabsContainer","Tab","ExternalRecipientForm","ExternalRecipientInput","SendButton","QuickSendHugWidget","selectedTab","setSelectedTab","searchTerm","setSearchTerm","selectedHugType","setSelectedHugType","selectedRecipient","setSelectedRecipient","message","setMessage","externalRecipient","setExternalRecipient","externalType","setExternalType","sendError","setSendError","isExternalValid","setIsExternalValid","GET_USERS","useMutation","SEND_HUG","defaultMessage","resetForm","getDefaultMessage","hugType","handleSearch","handleClearSearch","toggleUserSelection","user","renderUsers","filteredUsers","term","FiCheck","renderExternalForm","canSendHug","FiUsers","FiMail","FiSearch","FiX","HugsList","HugCard","HugIconWrapper","SenderAvatar","HugContent","HugHeader","SenderName","HugType","HugMessage","HugFooter","ReadButton","ReplyButton","UnreadCountBadge","ReplyDialog","ReplyDialogContent","TextField","DialogActions","CancelButton","ReceivedHugsWidget","markHugAsRead","setReceivedHugs","replyingToHug","setReplyingToHug","replyMessage","setReplyMessage","replyHugType","setReplyHugType","showReplyDialog","setShowReplyDialog","fetchReceivedHugs","hugs","unreadHugs","hug","hasUnreadHugs","handleMarkAsRead","hugId","openReplyDialog","closeReplyDialog","handleReplySubmit","getHugBackgroundColor","renderHugs","FiCornerUpRight","QuickHugContainer","QuickHugTrigger","QuickHugPopup","PopupHeader","PopupTitle","CloseButton","FriendsList","FriendOption","Avatar","ErrorState","Toast","ErrorToast","QuickHugButton","onSent","getUsers","showPopup","setShowPopup","selectedFriend","setSelectedFriend","showErrorToast","setShowErrorToast","errorMessage","setErrorMessage","sentToUser","setSentToUser","users","setUsers","fetchUsers","usersList","handleClickOutside","togglePopup","prev","closePopup","handleSelectFriend","friend","WelcomeHugContainer","WelcomeHugTrigger","WelcomeHugPopup","UsersList","UserOption","MessageInput","SuccessToast","WelcomeHugButton","selectedUser","setSelectedUser","welcomeMessage","setWelcomeMessage","showSuccessToast","setShowSuccessToast","usersData","setUsersData","loadUsers","handleSearchChange","handleSelectUser","handleSendWelcomeHug","hugInput","FiUserPlus","DashboardContainer","DashboardHeader","Logo","HeaderActions","LogoutButton","DashboardContent","WelcomeCard","WelcomeDecoration","FeaturesGrid","WidgetsContainer","WidgetColumn","SectionTitle","FeatureCard","FeatureDecoration","fadeInUp","staggerContainer","Dashboard","currentUser","logout","useAuth","navigate","useNavigate","hasRedirectFlag","handleLogout","navigateToFeature","path","LoadingScreen"],"mappings":"obAGA,MAAMA,GAAOC;AAAAA;AAAAA;AAAAA,EAKPC,GAAmBC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQ1BC,GAAUD,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAMRH,EAAI;AAAA,EAGbK,GAAcF,EAAO;AAAA;AAAA;AAAA;AAAA,EAMrBG,GAAiB,CAAC,CAAE,KAAAC,EAAO,uBAE5BL,GACC,CAAA,SAAA,CAAAM,EAAA,IAACJ,GAAQ,EAAA,EACRG,GAASC,EAAAA,IAAAH,GAAA,CAAa,SAAKE,CAAA,CAAA,CAC9B,CAAA,CAAA,EC5BEE,GAAwBN,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQ/BO,GAAcP,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYrBQ,GAAgBR,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAevBS,GAAYT,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUnBU,GAAWV,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYlBW,GAAaX,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAOpBY,GAAYZ,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAenBa,GAAWb,EAAO;AAAA;AAAA;AAAA,EAKlBc,GAAWd,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAOlBe,GAAWf,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAsBlBgB,GAAahB,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWpBiB,GAAgBC,GACL,CAAC,KAAM,KAAM,KAAM,KAAM,IAAI,EAC9B,KAAK,IAAI,KAAK,MAAMA,EAAU,CAAC,EAAI,EAAG,CAAC,CAAC,EAGlDC,GAAgBD,GACL,CAAC,WAAY,MAAO,UAAW,QAAS,YAAY,EACrD,KAAK,IAAI,KAAK,MAAMA,EAAU,CAAC,EAAI,EAAG,CAAC,CAAC,EAGlDE,GAAoBC,GACX,IAAI,KAAKA,CAAU,EACpB,mBAAmB,QAAS,CACtC,KAAM,UACN,MAAO,QACP,IAAK,SAAA,CACN,EAGGC,GAAeC,GACdA,EACEA,EACJ,MAAM,GAAG,EACT,OAAYC,EAAK,CAAC,CAAC,EACnB,KAAK,EAAE,EACP,YACA,EAAA,UAAU,EAAG,CAAC,EANC,IASdC,GAAkB,IAAM,CAC5B,KAAM,CAAE,QAAAC,EAAS,MAAAC,EAAO,KAAAC,EAAM,QAAAC,GAAYC,GAASC,EAAiB,EAEhE,GAAAL,EAAgB,OAAArB,EAAA,IAACF,GAAe,CAAA,KAAK,2BAA4B,CAAA,EAEjE,GAAAwB,EAAc,OAAAtB,MAAC2B,IAAa,MAAAL,CAAc,CAAA,EAGxC,MAAAM,GAAeL,GAAA,YAAAA,EAAM,eAAgB,GAEvC,OAAAK,EAAa,SAAW,SAEvB3B,GACC,CAAA,SAAA,CAAA4B,OAAC3B,GACC,CAAA,SAAA,CAAAF,EAAAA,IAAC,MAAG,SAAc,gBAAA,CAAA,EAClBA,EAAAA,IAACG,IAAc,QAAS,IAAMqB,IAC5B,SAAAxB,EAAA,IAAC,OAAK,CAAA,SAAA,SAAA,CAAO,CACf,CAAA,CAAA,EACF,SACCW,GACC,CAAA,SAAA,CAAAX,EAAAA,IAAC,KAAE,SAAqC,uCAAA,CAAA,EACxCA,EAAAA,IAAC,KAAE,SAAoE,sEAAA,CAAA,CAAA,EACzE,CACF,CAAA,CAAA,SAKDC,GACC,CAAA,SAAA,CAAA4B,OAAC3B,GACC,CAAA,SAAA,CAAAF,EAAAA,IAAC,MAAG,SAAc,gBAAA,CAAA,EAClBA,EAAAA,IAACG,IAAc,QAAS,IAAMqB,IAC5B,SAAAxB,EAAA,IAAC,OAAK,CAAA,SAAA,SAAA,CAAO,CACf,CAAA,CAAA,EACF,QAECI,GACE,CAAA,SAAAwB,EAAa,IAAKE,0BAChBzB,GACC,CAAA,SAAA,CAAAwB,OAACvB,GACC,CAAA,SAAA,CAAAuB,OAACtB,GACC,CAAA,SAAA,CAAAP,MAAC,QAAK,UAAU,QAAS,SAAaY,GAAAkB,EAAK,SAAS,EAAE,QACrD,OAAK,CAAA,UAAU,QAAS,SAAahB,GAAAgB,EAAK,SAAS,EAAE,CAAA,EACxD,EACC9B,EAAA,IAAAQ,GAAA,CAAU,SAAiBO,GAAAe,EAAK,SAAS,EAAE,CAAA,EAC9C,EAECA,EAAK,MAAS9B,MAAAS,GAAA,CAAU,WAAK,KAAK,SAElCC,GACC,CAAA,SAAA,CAAAV,EAAAA,IAAC,OAAI,UAAU,SAAU,aAAY+B,EAAAD,EAAK,OAAL,YAAAC,EAAW,IAAI,EAAE,EACrD/B,EAAA,IAAA,OAAA,CAAM,WAAKgC,EAAAF,EAAA,OAAA,YAAAE,EAAM,OAAQ,iBAAiB,CAAA,EAC7C,CAda,CAAA,EAAAF,EAAK,EAepB,EACD,EACH,CACF,CAAA,CAAA,CAEJ,EC3NeG,GAAA,kCCAAC,GAAA,gCCAAC,GAAA,oCCAAC,GAAA,iCCAAC,GAAA,qCCAAC,GAAA,uCCAAC,GAAA,gCCAAC,GAAA,mCCAAC,GAAA,qCCAAC,GAAA,kCCAAC,GAAA,mCCAAC,GAAA,kCCAAC,GAAA,mCCAAC,GAAA,iCCAAC,GAAA,iCCAAC,GAAA,kCCsBTC,GAAa,CACjB,QAAS,udAET,IAAK,udAEL,QAAS,udAET,MAAO,udAEP,UAAW,sdACb,EAGMC,GAAQ,sUAGRC,GAAO,mNAKAC,EAAO,CAAC,CAAE,KAAAC,EAAM,MAAAC,EAAO,KAAAC,EAAO,GAAI,QAAAC,EAAU,GAAM,GAAGC,KAAY,CAExE,GAAAJ,IAAS,QAAUC,IAAU,OAAW,CACtC,IAAAI,EACJ,GAAIJ,IAAU,KAAa,OAAAtD,EAAA,IAAC,OAAI,MAAO,CAAE,MAAOuD,EAAM,OAAQA,CAAQ,CAAA,CAAA,EAClED,GAAS,IAAgBI,EAAA,YACpBJ,GAAS,EAAcI,EAAA,QACvBJ,GAAS,EAAcI,EAAA,UACvBJ,GAAS,EAAcI,EAAA,MAChBA,EAAA,UAEVC,MAAAA,EAAMV,GAAWS,CAAQ,EAE/B,OAAIF,EAEAxD,EAAA,IAAC4D,EAAO,IAAP,CACC,IAAKD,EACL,IAAK,eAAeD,CAAQ,GAC5B,MAAOH,EACP,OAAQA,EACR,QAAS,CAAE,MAAO,CAAE,EACpB,QAAS,CACP,MAAO,EACP,OAAQ,CAAC,EAAG,GAAI,IAAK,CAAC,CACxB,EACA,WAAY,CACV,KAAM,SACN,QAAS,GACT,UAAW,IACX,MAAO,EACT,EACC,GAAGE,CAAA,CAAA,EAKFzD,EAAAA,IAAA,MAAA,CAAI,IAAK2D,EAAK,IAAK,eAAeD,CAAQ,GAAI,MAAOH,EAAM,OAAQA,EAAO,GAAGE,CAAO,CAAA,CAC9F,CAGI,IAAAE,EACAE,EAEJ,OAAQR,EAAM,CACZ,IAAK,YACGM,EAAA1B,GACA4B,EAAA,aACN,MACF,IAAK,UACGF,EAAAzB,GACA2B,EAAA,WACN,MACF,IAAK,cACGF,EAAAxB,GACA0B,EAAA,eACN,MACF,IAAK,YACGF,EAAAvB,GACAyB,EAAA,YACN,MACF,IAAK,QACGF,EAAAT,GACAW,EAAA,QACN,MACF,IAAK,OACGF,EAAAR,GACAU,EAAA,OACN,MAEF,IAAK,aACL,IAAK,gBACGF,EAAAtB,GACAwB,EAAA,iBACN,MACF,IAAK,eACL,IAAK,kBACGF,EAAArB,GACAuB,EAAA,mBACN,MACF,IAAK,QACL,IAAK,WACGF,EAAApB,GACAsB,EAAA,YACN,MACF,IAAK,WACL,IAAK,cACGF,EAAAnB,GACAqB,EAAA,eACN,MACF,IAAK,aACL,IAAK,gBACGF,EAAAlB,GACAoB,EAAA,iBACN,MACF,IAAK,UACL,IAAK,aACGF,EAAAjB,GACAmB,EAAA,cACN,MACF,IAAK,WACL,IAAK,cACGF,EAAAhB,GACAkB,EAAA,eACN,MACF,IAAK,UACL,IAAK,aACGF,EAAAf,GACAiB,EAAA,cACN,MACF,IAAK,WACL,IAAK,cACGF,EAAAd,GACAgB,EAAA,eACN,MACF,IAAK,SACL,IAAK,YACGF,EAAAb,GACAe,EAAA,aACN,MACF,IAAK,SACL,IAAK,YACGF,EAAAZ,GACAc,EAAA,aACN,MACF,IAAK,UACL,IAAK,aACGF,EAAAX,GACAa,EAAA,cACN,MACF,QAEE,GAAIR,GAAQA,EAAK,SAAS,KAAK,EACvBM,EAAAnB,GACAqB,EAAAR,MAEC,QAAA,IAEb,CAEA,OAAIG,EAEEK,GAAOA,EAAI,SAAS,KAAK,EAEzB7D,EAAA,IAAC4D,EAAO,IAAP,CACC,IAAAD,EACA,IAAAE,EACA,MAAON,EACP,OAAQA,EACR,QAAS,CAAE,MAAO,EAAG,OAAQ,EAAG,EAChC,QAAS,CACP,MAAO,EACP,OAAQ,EACR,EAAG,CAAC,EAAG,GAAI,CAAC,CACd,EACA,WAAY,CACV,MAAO,IACP,OAAQ,CAAC,GAAI,EAAG,GAAI,CAAC,EACrB,WAAY,CACV,OAAQ,CAAE,OAAQ,EAAG,SAAU,EAAI,EACnC,MAAO,CAAE,SAAU,EAAI,CACzB,CACF,EACA,WAAY,CACV,KAAM,SACN,QAAS,GACT,UAAW,IACX,MAAO,GACP,EAAG,CACD,OAAQ,IACR,WAAY,UACZ,SAAU,IACV,KAAM,WACR,CACF,EACC,GAAGE,CAAA,CAAA,EAORzD,EAAA,IAAC4D,EAAO,IAAP,CACC,IAAAD,EACA,IAAAE,EACA,MAAON,EACP,OAAQA,EACR,QAAS,CAAE,MAAO,CAAE,EACpB,QAAS,CAAE,MAAO,CAAE,EACpB,WAAY,CACV,KAAM,SACN,QAAS,GACT,UAAW,IACX,MAAO,EACT,EACC,GAAGE,CAAA,CAAA,EAKHzD,MAAC,OAAI,IAAA2D,EAAU,IAAAE,EAAU,MAAON,EAAM,OAAQA,EAAO,GAAGE,CAAO,CAAA,CACxE,EC5OMK,GAAiBnE,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAexBoE,GAAWpE,EAAOiE,EAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkB5BI,GAAYrE,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASnBsE,GAAYtE,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQnBuE,GAAgBvE,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOP8D,GAASA,EAAM,SAAW,yBAAyB;AAAA,WAC9DA,GAASA,EAAM,WAAa,sBAAsB;AAAA;AAAA;AAAA;AAAA,EAMvDU,GAAuBxE,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgB9ByE,GAAoB,CACxB,OAAQ,CAAE,QAAS,CAAE,EACrB,QAAS,CACP,QAAS,EACT,WAAY,CACV,gBAAiB,GACnB,CACF,CACF,EAEMC,GAAe,CACnB,OAAQ,CAAE,EAAG,GAAI,QAAS,CAAE,EAC5B,QAAS,CACP,EAAG,EACH,QAAS,EACT,WAAY,CACV,KAAM,SACN,QAAS,GACT,UAAW,GACb,CACF,CACF,EAMMC,GAAiB,IAAM,CAE3B,KAAM,CAAE,cAAAC,EAAe,aAAAC,EAAc,YAAAC,EAAa,gBAAAC,CAAA,EAAoBC,IAGhE,CAACC,EAAOC,CAAQ,EAAIC,WAAS,CACjC,WAAY,EACZ,iBAAkB,EAClB,SAAU,EACV,aAAc,CAAA,CACf,EACK,CAACC,EAAWC,CAAY,EAAIF,WAAS,EAAI,EAG/CG,EAAAA,UAAU,IAAM,CACd,eAAeC,GAAY,CACrB,GAAA,CACFF,EAAa,EAAI,EAGX,KAAA,CAACG,EAAYC,EAAWC,EAAUC,CAAY,EAAI,MAAM,QAAQ,IAAI,CACxEf,EAAc,EACdC,EAAa,EACbC,EAAY,EACZC,EAAgB,CAAA,CACjB,EAGQG,EAAA,CACP,YAAYM,GAAA,YAAAA,EAAY,gBAAiB,EACzC,kBAAkBC,GAAA,YAAAA,EAAW,SAAU,EACvC,UAAUC,GAAA,YAAAA,EAAU,SAAU,EAC9B,cAAcC,GAAA,YAAAA,EAAc,SAAU,CAAA,CACvC,QACMhE,EAAO,CACN,QAAA,MAAM,kCAAmCA,CAAK,CAAA,QACtD,CACA0D,EAAa,EAAK,CACpB,CACF,CAEUE,KACT,CAACX,EAAeC,EAAcC,EAAaC,CAAe,CAAC,EAG9D,MAAMa,EAAa,CACjB,CACE,MAAO,aACP,MAAOX,EAAM,WACb,KAAM,OACN,MAAO,UACP,QAAS,yBACT,WACG5E,EAAAA,IAAA,MAAA,CAAI,QAAQ,cAAc,KAAK,OAC9B,SAAAA,MAAC,SAAO,CAAA,GAAG,MAAM,GAAG,KAAK,EAAE,KAAK,KAAK,SAAU,CAAA,EACjD,CAEJ,EACA,CACE,MAAO,gBACP,MAAO4E,EAAM,iBACb,KAAM,cACN,MAAO,UACP,QAAS,yBACT,WACG5E,EAAAA,IAAA,MAAA,CAAI,QAAQ,cAAc,KAAK,OAC9B,SAAAA,MAAC,SAAO,CAAA,GAAG,MAAM,GAAG,KAAK,EAAE,KAAK,KAAK,SAAU,CAAA,EACjD,CAEJ,EACA,CACE,MAAO,YACP,MAAO4E,EAAM,SACb,KAAM,cACN,MAAO,UACP,QAAS,0BACT,WACG5E,EAAAA,IAAA,MAAA,CAAI,QAAQ,cAAc,KAAK,OAC9B,SAAAA,MAAC,SAAO,CAAA,GAAG,MAAM,GAAG,KAAK,EAAE,KAAK,KAAK,SAAU,CAAA,EACjD,CAEJ,EACA,CACE,MAAO,gBACP,MAAO4E,EAAM,aACb,KAAM,gBACN,MAAO,UACP,QAAS,2BACT,WACG5E,EAAAA,IAAA,MAAA,CAAI,QAAQ,cAAc,KAAK,OAC9B,SAAAA,MAAC,SAAO,CAAA,GAAG,MAAM,GAAG,KAAK,EAAE,KAAK,KAAK,SAAU,CAAA,EACjD,CAEJ,CAAA,EAGF,OAAI+E,QAECjB,GACE,CAAA,SAAA,CAAC,EAAG,EAAG,EAAG,CAAC,EAAE,IAAI,CAAC0B,EAAGC,IACnB5D,EAAA,KAAAkC,GAAA,CAAqB,MAAO,CAAE,QAAS,EACtC,EAAA,SAAA,CAAA/D,EAAA,IAACkE,GAAc,CAAA,MAAO,CAAE,WAAY,WAAa,EACjDlE,EAAAA,IAACgE,GAAU,CAAA,MAAO,CAAE,WAAY,UAAW,MAAO,OAAQ,OAAQ,MAAU,CAAA,CAAA,EAC5EhE,EAAAA,IAACiE,GAAU,CAAA,MAAO,CAAE,WAAY,UAAW,MAAO,OAAQ,OAAQ,MAAU,CAAA,CAAA,CAAA,GAH/DwB,CAIf,CACD,CACH,CAAA,QAKD3B,GAAe,CAAA,GAAIF,EAAO,IAAK,SAAUQ,GAAmB,QAAQ,SAAS,QAAQ,UACnF,SAAAmB,EAAW,IAAI,CAACG,EAAMD,IACpB5D,EAAA,KAAAkC,GAAA,CAAqB,SAAUM,GAC9B,SAAA,CAAArE,MAACkE,GAAc,CAAA,QAASwB,EAAK,QAAS,UAAWA,EAAK,MACpD,SAAC1F,EAAAA,IAAAoD,EAAA,CAAK,KAAMsC,EAAK,KAAM,KAAM,EAAI,CAAA,EACnC,EAEA1F,EAAAA,IAACgE,IAAU,MAAO,CAAE,MAAO0B,EAAK,OAAU,SAAAA,EAAK,KAAM,CAAA,EACrD1F,EAAAA,IAACiE,GAAW,CAAA,SAAAyB,EAAK,KAAM,CAAA,EAEvB1F,EAAAA,IAACmE,GACE,CAAA,SAAAuB,EAAK,UACR,CAAA,CAAA,GAVaD,CAWf,CACD,CACH,CAAA,CAEJ,EC5HaE,EAAiB,MAOjBC,GAAe,KA0FfC,GAAsB,OAAO,IAAI,mBAAmB,EClL1D,SAASC,GAAcC,EAAMC,EAAO,CACzC,OAAI,OAAOD,GAAS,WAAmBA,EAAKC,CAAK,EAE7CD,GAAQ,OAAOA,GAAS,UAAYF,MAAuBE,EACtDA,EAAKF,EAAmB,EAAEG,CAAK,EAEpCD,aAAgB,KAAa,IAAIA,EAAK,YAAYC,CAAK,EAEpD,IAAI,KAAKA,CAAK,CACvB,CCNO,SAASC,EAAOC,EAAUC,EAAS,CAExC,OAAOL,GAAcK,GAAWD,EAAUA,CAAQ,CACpD,CC3CA,IAAIE,GAAiB,CAAA,EAEd,SAASC,IAAoB,CAClC,OAAOD,EACT,CCSO,SAASE,GAAgCP,EAAM,CACpD,MAAMQ,EAAQN,EAAOF,CAAI,EACnBS,EAAU,IAAI,KAClB,KAAK,IACHD,EAAM,YAAa,EACnBA,EAAM,SAAU,EAChBA,EAAM,QAAS,EACfA,EAAM,SAAU,EAChBA,EAAM,WAAY,EAClBA,EAAM,WAAY,EAClBA,EAAM,gBAAiB,CACxB,CACL,EACE,OAAAC,EAAQ,eAAeD,EAAM,YAAa,CAAA,EACnC,CAACR,EAAO,CAACS,CAClB,CC1BO,SAASC,GAAeN,KAAYO,EAAO,CAChD,MAAMC,EAAYb,GAAc,KAC9B,KACAK,GAAWO,EAAM,KAAMX,GAAS,OAAOA,GAAS,QAAQ,CAC5D,EACE,OAAOW,EAAM,IAAIC,CAAS,CAC5B,CC0BO,SAASC,GAAWC,EAAUC,EAAW,CAC9C,MAAMC,EAAO,CAACd,EAAOY,CAAQ,EAAI,CAACZ,EAAOa,CAAS,EAElD,OAAIC,EAAO,EAAU,GACZA,EAAO,EAAU,EAGnBA,CACT,CCZO,SAASC,GAAajB,EAAM,CACjC,OAAOD,GAAcC,EAAM,KAAK,IAAK,CAAA,CACvC,CCJO,SAASkB,GAA2BC,EAAWC,EAAaC,EAAS,CAC1E,KAAM,CAACC,EAAYC,CAAY,EAAIb,GACjCW,GAAA,YAAAA,EAAS,GACTF,EACAC,CACJ,EAEQI,EAAYF,EAAW,YAAa,EAAGC,EAAa,YAAW,EAC/DE,EAAaH,EAAW,SAAU,EAAGC,EAAa,SAAQ,EAEhE,OAAOC,EAAY,GAAKC,CAC1B,CCvCO,SAASC,GAAkBC,EAAQ,CACxC,OAAQC,GAAW,CAEjB,MAAMC,GADQF,EAAS,KAAKA,CAAM,EAAI,KAAK,OACtBC,CAAM,EAE3B,OAAOC,IAAW,EAAI,EAAIA,CAC9B,CACA,CCiBO,SAASC,GAAyBX,EAAWC,EAAa,CAC/D,MAAO,CAAClB,EAAOiB,CAAS,EAAI,CAACjB,EAAOkB,CAAW,CACjD,CCEO,SAASW,GAAS/B,EAAMqB,EAAS,CACtC,MAAMb,EAAQN,EAAOF,EAAMqB,GAAA,YAAAA,EAAS,EAAE,EACtC,OAAAb,EAAM,SAAS,GAAI,GAAI,GAAI,GAAG,EACvBA,CACT,CCJO,SAASwB,GAAWhC,EAAMqB,EAAS,CACxC,MAAMb,EAAQN,EAAOF,EAAMqB,GAAA,YAAAA,EAAS,EAAE,EAChCY,EAAQzB,EAAM,WACpB,OAAAA,EAAM,YAAYA,EAAM,YAAa,EAAEyB,EAAQ,EAAG,CAAC,EACnDzB,EAAM,SAAS,GAAI,GAAI,GAAI,GAAG,EACvBA,CACT,CCZO,SAAS0B,GAAiBlC,EAAMqB,EAAS,CAC9C,MAAMb,EAAQN,EAAOF,EAAMqB,GAAA,YAAAA,EAAS,EAAE,EACtC,MAAO,CAACU,GAASvB,EAAOa,CAAO,GAAM,CAACW,GAAWxB,EAAOa,CAAO,CACjE,CCAO,SAASc,GAAmBhB,EAAWC,EAAaC,EAAS,CAClE,KAAM,CAACC,EAAYc,EAAkBb,CAAY,EAAIb,GACnDW,GAAA,YAAAA,EAAS,GACTF,EACAA,EACAC,CACJ,EAEQiB,EAAOxB,GAAWuB,EAAkBb,CAAY,EAChDe,EAAa,KAAK,IACtBpB,GAA2BkB,EAAkBb,CAAY,CAC7D,EAEE,GAAIe,EAAa,EAAG,MAAO,GAEvBF,EAAiB,SAAU,IAAK,GAAKA,EAAiB,QAAO,EAAK,IACpEA,EAAiB,QAAQ,EAAE,EAE7BA,EAAiB,SAASA,EAAiB,SAAQ,EAAKC,EAAOC,CAAU,EAEzE,IAAIC,EAAqB1B,GAAWuB,EAAkBb,CAAY,IAAM,CAACc,EAGvEH,GAAiBZ,CAAU,GAC3BgB,IAAe,GACfzB,GAAWS,EAAYC,CAAY,IAAM,IAEzCgB,EAAqB,IAGvB,MAAMV,EAASQ,GAAQC,EAAa,CAACC,GACrC,OAAOV,IAAW,EAAI,EAAIA,CAC5B,CC3BO,SAASW,GAAoBrB,EAAWC,EAAaC,EAAS,CACnE,MAAML,EAAOc,GAAyBX,EAAWC,CAAW,EAAI,IAChE,OAAOM,GAAkBL,GAAA,YAAAA,EAAS,cAAc,EAAEL,CAAI,CACxD,CCjCA,MAAMyB,GAAuB,CAC3B,iBAAkB,CAChB,IAAK,qBACL,MAAO,6BACR,EAED,SAAU,CACR,IAAK,WACL,MAAO,mBACR,EAED,YAAa,gBAEb,iBAAkB,CAChB,IAAK,qBACL,MAAO,6BACR,EAED,SAAU,CACR,IAAK,WACL,MAAO,mBACR,EAED,YAAa,CACX,IAAK,eACL,MAAO,uBACR,EAED,OAAQ,CACN,IAAK,SACL,MAAO,iBACR,EAED,MAAO,CACL,IAAK,QACL,MAAO,gBACR,EAED,YAAa,CACX,IAAK,eACL,MAAO,uBACR,EAED,OAAQ,CACN,IAAK,SACL,MAAO,iBACR,EAED,aAAc,CACZ,IAAK,gBACL,MAAO,wBACR,EAED,QAAS,CACP,IAAK,UACL,MAAO,kBACR,EAED,YAAa,CACX,IAAK,eACL,MAAO,uBACR,EAED,OAAQ,CACN,IAAK,SACL,MAAO,iBACR,EAED,WAAY,CACV,IAAK,cACL,MAAO,sBACR,EAED,aAAc,CACZ,IAAK,gBACL,MAAO,wBACR,CACH,EAEaC,GAAiB,CAACC,EAAOC,EAAOvB,IAAY,CACvD,IAAIQ,EAEJ,MAAMgB,EAAaJ,GAAqBE,CAAK,EAS7C,OARI,OAAOE,GAAe,SACxBhB,EAASgB,EACAD,IAAU,EACnBf,EAASgB,EAAW,IAEpBhB,EAASgB,EAAW,MAAM,QAAQ,YAAaD,EAAM,SAAQ,CAAE,EAG7DvB,GAAA,MAAAA,EAAS,UACPA,EAAQ,YAAcA,EAAQ,WAAa,EACtC,MAAQQ,EAERA,EAAS,OAIbA,CACT,ECpGO,SAASiB,GAAkBC,EAAM,CACtC,MAAO,CAAC1B,EAAU,KAAO,CAEvB,MAAM2B,EAAQ3B,EAAQ,MAAQ,OAAOA,EAAQ,KAAK,EAAI0B,EAAK,aAE3D,OADeA,EAAK,QAAQC,CAAK,GAAKD,EAAK,QAAQA,EAAK,YAAY,CAExE,CACA,CCLA,MAAME,GAAc,CAClB,KAAM,mBACN,KAAM,aACN,OAAQ,WACR,MAAO,YACT,EAEMC,GAAc,CAClB,KAAM,iBACN,KAAM,cACN,OAAQ,YACR,MAAO,QACT,EAEMC,GAAkB,CACtB,KAAM,yBACN,KAAM,yBACN,OAAQ,qBACR,MAAO,oBACT,EAEaC,GAAa,CACxB,KAAMN,GAAkB,CACtB,QAASG,GACT,aAAc,MAClB,CAAG,EAED,KAAMH,GAAkB,CACtB,QAASI,GACT,aAAc,MAClB,CAAG,EAED,SAAUJ,GAAkB,CAC1B,QAASK,GACT,aAAc,MAClB,CAAG,CACH,ECtCME,GAAuB,CAC3B,SAAU,qBACV,UAAW,mBACX,MAAO,eACP,SAAU,kBACV,SAAU,cACV,MAAO,GACT,EAEaC,GAAiB,CAACX,EAAOnC,EAAO+C,EAAWC,IACtDH,GAAqBV,CAAK,EC6BrB,SAASc,EAAgBV,EAAM,CACpC,MAAO,CAAC9C,EAAOoB,IAAY,CACzB,MAAMjB,EAAUiB,GAAA,MAAAA,EAAS,QAAU,OAAOA,EAAQ,OAAO,EAAI,aAE7D,IAAIqC,EACJ,GAAItD,IAAY,cAAgB2C,EAAK,iBAAkB,CACrD,MAAMY,EAAeZ,EAAK,wBAA0BA,EAAK,aACnDC,EAAQ3B,GAAA,MAAAA,EAAS,MAAQ,OAAOA,EAAQ,KAAK,EAAIsC,EAEvDD,EACEX,EAAK,iBAAiBC,CAAK,GAAKD,EAAK,iBAAiBY,CAAY,CAC1E,KAAW,CACL,MAAMA,EAAeZ,EAAK,aACpBC,EAAQ3B,GAAA,MAAAA,EAAS,MAAQ,OAAOA,EAAQ,KAAK,EAAI0B,EAAK,aAE5DW,EAAcX,EAAK,OAAOC,CAAK,GAAKD,EAAK,OAAOY,CAAY,CAC7D,CACD,MAAMjE,EAAQqD,EAAK,iBAAmBA,EAAK,iBAAiB9C,CAAK,EAAIA,EAGrE,OAAOyD,EAAYhE,CAAK,CAC5B,CACA,CC3DA,MAAMkE,GAAY,CAChB,OAAQ,CAAC,IAAK,GAAG,EACjB,YAAa,CAAC,KAAM,IAAI,EACxB,KAAM,CAAC,gBAAiB,aAAa,CACvC,EAEMC,GAAgB,CACpB,OAAQ,CAAC,IAAK,IAAK,IAAK,GAAG,EAC3B,YAAa,CAAC,KAAM,KAAM,KAAM,IAAI,EACpC,KAAM,CAAC,cAAe,cAAe,cAAe,aAAa,CACnE,EAMMC,GAAc,CAClB,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAG,EACnE,YAAa,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACD,EAED,KAAM,CACJ,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,UACD,CACH,EAEMC,GAAY,CAChB,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAG,EAC1C,MAAO,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAI,EAChD,YAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAK,EAC7D,KAAM,CACJ,SACA,SACA,UACA,YACA,WACA,SACA,UACD,CACH,EAEMC,GAAkB,CACtB,OAAQ,CACN,GAAI,IACJ,GAAI,IACJ,SAAU,KACV,KAAM,IACN,QAAS,UACT,UAAW,YACX,QAAS,UACT,MAAO,OACR,EACD,YAAa,CACX,GAAI,KACJ,GAAI,KACJ,SAAU,WACV,KAAM,OACN,QAAS,UACT,UAAW,YACX,QAAS,UACT,MAAO,OACR,EACD,KAAM,CACJ,GAAI,OACJ,GAAI,OACJ,SAAU,WACV,KAAM,OACN,QAAS,UACT,UAAW,YACX,QAAS,UACT,MAAO,OACR,CACH,EAEMC,GAA4B,CAChC,OAAQ,CACN,GAAI,IACJ,GAAI,IACJ,SAAU,KACV,KAAM,IACN,QAAS,iBACT,UAAW,mBACX,QAAS,iBACT,MAAO,UACR,EACD,YAAa,CACX,GAAI,KACJ,GAAI,KACJ,SAAU,WACV,KAAM,OACN,QAAS,iBACT,UAAW,mBACX,QAAS,iBACT,MAAO,UACR,EACD,KAAM,CACJ,GAAI,OACJ,GAAI,OACJ,SAAU,WACV,KAAM,OACN,QAAS,iBACT,UAAW,mBACX,QAAS,iBACT,MAAO,UACR,CACH,EAEMC,GAAgB,CAACC,EAAaX,IAAa,CAC/C,MAAM5B,EAAS,OAAOuC,CAAW,EAS3BC,EAASxC,EAAS,IACxB,GAAIwC,EAAS,IAAMA,EAAS,GAC1B,OAAQA,EAAS,GAAE,CACjB,IAAK,GACH,OAAOxC,EAAS,KAClB,IAAK,GACH,OAAOA,EAAS,KAClB,IAAK,GACH,OAAOA,EAAS,IACnB,CAEH,OAAOA,EAAS,IAClB,EAEayC,GAAW,CACtB,cAAAH,GAEA,IAAKT,EAAgB,CACnB,OAAQG,GACR,aAAc,MAClB,CAAG,EAED,QAASH,EAAgB,CACvB,OAAQI,GACR,aAAc,OACd,iBAAmBS,GAAYA,EAAU,CAC7C,CAAG,EAED,MAAOb,EAAgB,CACrB,OAAQK,GACR,aAAc,MAClB,CAAG,EAED,IAAKL,EAAgB,CACnB,OAAQM,GACR,aAAc,MAClB,CAAG,EAED,UAAWN,EAAgB,CACzB,OAAQO,GACR,aAAc,OACd,iBAAkBC,GAClB,uBAAwB,MAC5B,CAAG,CACH,EC1LO,SAASM,EAAaxB,EAAM,CACjC,MAAO,CAACyB,EAAQnD,EAAU,KAAO,CAC/B,MAAM2B,EAAQ3B,EAAQ,MAEhBoD,EACHzB,GAASD,EAAK,cAAcC,CAAK,GAClCD,EAAK,cAAcA,EAAK,iBAAiB,EACrC2B,EAAcF,EAAO,MAAMC,CAAY,EAE7C,GAAI,CAACC,EACH,OAAO,KAET,MAAMC,EAAgBD,EAAY,CAAC,EAE7BE,EACH5B,GAASD,EAAK,cAAcC,CAAK,GAClCD,EAAK,cAAcA,EAAK,iBAAiB,EAErC8B,EAAM,MAAM,QAAQD,CAAa,EACnCE,GAAUF,EAAgBG,GAAYA,EAAQ,KAAKJ,CAAa,CAAC,EAEjEK,GAAQJ,EAAgBG,GAAYA,EAAQ,KAAKJ,CAAa,CAAC,EAEnE,IAAI1E,EAEJA,EAAQ8C,EAAK,cAAgBA,EAAK,cAAc8B,CAAG,EAAIA,EACvD5E,EAAQoB,EAAQ,cAEZA,EAAQ,cAAcpB,CAAK,EAC3BA,EAEJ,MAAMgF,EAAOT,EAAO,MAAMG,EAAc,MAAM,EAE9C,MAAO,CAAE,MAAA1E,EAAO,KAAAgF,EACpB,CACA,CAEA,SAASD,GAAQE,EAAQC,EAAW,CAClC,UAAWN,KAAOK,EAChB,GACE,OAAO,UAAU,eAAe,KAAKA,EAAQL,CAAG,GAChDM,EAAUD,EAAOL,CAAG,CAAC,EAErB,OAAOA,CAIb,CAEA,SAASC,GAAUM,EAAOD,EAAW,CACnC,QAASN,EAAM,EAAGA,EAAMO,EAAM,OAAQP,IACpC,GAAIM,EAAUC,EAAMP,CAAG,CAAC,EACtB,OAAOA,CAIb,CCxDO,SAASQ,GAAoBtC,EAAM,CACxC,MAAO,CAACyB,EAAQnD,EAAU,KAAO,CAC/B,MAAMqD,EAAcF,EAAO,MAAMzB,EAAK,YAAY,EAClD,GAAI,CAAC2B,EAAa,OAAO,KACzB,MAAMC,EAAgBD,EAAY,CAAC,EAE7BY,EAAcd,EAAO,MAAMzB,EAAK,YAAY,EAClD,GAAI,CAACuC,EAAa,OAAO,KACzB,IAAIrF,EAAQ8C,EAAK,cACbA,EAAK,cAAcuC,EAAY,CAAC,CAAC,EACjCA,EAAY,CAAC,EAGjBrF,EAAQoB,EAAQ,cAAgBA,EAAQ,cAAcpB,CAAK,EAAIA,EAE/D,MAAMgF,EAAOT,EAAO,MAAMG,EAAc,MAAM,EAE9C,MAAO,CAAE,MAAA1E,EAAO,KAAAgF,EACpB,CACA,CChBA,MAAMM,GAA4B,wBAC5BC,GAA4B,OAE5BC,GAAmB,CACvB,OAAQ,UACR,YAAa,6DACb,KAAM,4DACR,EACMC,GAAmB,CACvB,IAAK,CAAC,MAAO,SAAS,CACxB,EAEMC,GAAuB,CAC3B,OAAQ,WACR,YAAa,YACb,KAAM,gCACR,EACMC,GAAuB,CAC3B,IAAK,CAAC,KAAM,KAAM,KAAM,IAAI,CAC9B,EAEMC,GAAqB,CACzB,OAAQ,eACR,YAAa,sDACb,KAAM,2FACR,EACMC,GAAqB,CACzB,OAAQ,CACN,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACD,EAED,IAAK,CACH,OACA,MACA,QACA,OACA,QACA,QACA,QACA,OACA,MACA,MACA,MACA,KACD,CACH,EAEMC,GAAmB,CACvB,OAAQ,YACR,MAAO,2BACP,YAAa,kCACb,KAAM,8DACR,EACMC,GAAmB,CACvB,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAK,EACxD,IAAK,CAAC,OAAQ,MAAO,OAAQ,MAAO,OAAQ,MAAO,MAAM,CAC3D,EAEMC,GAAyB,CAC7B,OAAQ,6DACR,IAAK,gFACP,EACMC,GAAyB,CAC7B,IAAK,CACH,GAAI,MACJ,GAAI,MACJ,SAAU,OACV,KAAM,OACN,QAAS,WACT,UAAW,aACX,QAAS,WACT,MAAO,QACR,CACH,EAEaC,GAAQ,CACnB,cAAed,GAAoB,CACjC,aAAcE,GACd,aAAcC,GACd,cAAgBvF,GAAU,SAASA,EAAO,EAAE,CAChD,CAAG,EAED,IAAKsE,EAAa,CAChB,cAAekB,GACf,kBAAmB,OACnB,cAAeC,GACf,kBAAmB,KACvB,CAAG,EAED,QAASnB,EAAa,CACpB,cAAeoB,GACf,kBAAmB,OACnB,cAAeC,GACf,kBAAmB,MACnB,cAAgBlG,GAAUA,EAAQ,CACtC,CAAG,EAED,MAAO6E,EAAa,CAClB,cAAesB,GACf,kBAAmB,OACnB,cAAeC,GACf,kBAAmB,KACvB,CAAG,EAED,IAAKvB,EAAa,CAChB,cAAewB,GACf,kBAAmB,OACnB,cAAeC,GACf,kBAAmB,KACvB,CAAG,EAED,UAAWzB,EAAa,CACtB,cAAe0B,GACf,kBAAmB,MACnB,cAAeC,GACf,kBAAmB,KACvB,CAAG,CACH,ECrHaE,GAAO,CAClB,KAAM,QACN,eAAgB1D,GAChB,WAAYU,GACZ,eAAgBE,GAChB,SAAUe,GACV,MAAO8B,GACP,QAAS,CACP,aAAc,EACd,sBAAuB,CACxB,CACH,ECkEO,SAASzD,GAAevB,EAAWC,EAAaC,EAAS,CAC9D,MAAMhB,EAAiBC,KACjB+F,GAAShF,GAAA,YAAAA,EAAS,SAAUhB,EAAe,QAAUiG,GACrDC,EAAyB,KAEzBC,EAAa3F,GAAWM,EAAWC,CAAW,EAEpD,GAAI,MAAMoF,CAAU,EAAG,MAAM,IAAI,WAAW,oBAAoB,EAEhE,MAAMC,EAAkB,OAAO,OAAO,CAAA,EAAIpF,EAAS,CACjD,UAAWA,GAAA,YAAAA,EAAS,UACpB,WAAYmF,CAChB,CAAG,EAEK,CAAClF,EAAYC,CAAY,EAAIb,GACjCW,GAAA,YAAAA,EAAS,GACT,GAAImF,EAAa,EAAI,CAACpF,EAAaD,CAAS,EAAI,CAACA,EAAWC,CAAW,CAC3E,EAEQsF,EAAUlE,GAAoBjB,EAAcD,CAAU,EACtDqF,GACHpG,GAAgCgB,CAAY,EAC3ChB,GAAgCe,CAAU,GAC5C,IACIsF,EAAU,KAAK,OAAOF,EAAUC,GAAmB,EAAE,EAC3D,IAAIE,EAGJ,GAAID,EAAU,EACZ,OAAIvF,GAAA,MAAAA,EAAS,eACPqF,EAAU,EACLL,EAAO,eAAe,mBAAoB,EAAGI,CAAe,EAC1DC,EAAU,GACZL,EAAO,eAAe,mBAAoB,GAAII,CAAe,EAC3DC,EAAU,GACZL,EAAO,eAAe,mBAAoB,GAAII,CAAe,EAC3DC,EAAU,GACZL,EAAO,eAAe,cAAe,EAAGI,CAAe,EACrDC,EAAU,GACZL,EAAO,eAAe,mBAAoB,EAAGI,CAAe,EAE5DJ,EAAO,eAAe,WAAY,EAAGI,CAAe,EAGzDG,IAAY,EACPP,EAAO,eAAe,mBAAoB,EAAGI,CAAe,EAE5DJ,EAAO,eAAe,WAAYO,EAASH,CAAe,EAKhE,GAAIG,EAAU,GACnB,OAAOP,EAAO,eAAe,WAAYO,EAASH,CAAe,EAG5D,GAAIG,EAAU,GACnB,OAAOP,EAAO,eAAe,cAAe,EAAGI,CAAe,EAGzD,GAAIG,EAAU/G,GAAc,CACjC,MAAMiH,EAAQ,KAAK,MAAMF,EAAU,EAAE,EACrC,OAAOP,EAAO,eAAe,cAAeS,EAAOL,CAAe,CAGtE,KAAS,IAAIG,EAAUL,EACnB,OAAOF,EAAO,eAAe,QAAS,EAAGI,CAAe,EAGnD,GAAIG,EAAUhH,EAAgB,CACnC,MAAMmH,EAAO,KAAK,MAAMH,EAAU/G,EAAY,EAC9C,OAAOwG,EAAO,eAAe,QAASU,EAAMN,CAAe,CAG/D,SAAaG,EAAUhH,EAAiB,EACpC,OAAAiH,EAAS,KAAK,MAAMD,EAAUhH,CAAc,EACrCyG,EAAO,eAAe,eAAgBQ,EAAQJ,CAAe,EAMtE,GAHAI,EAAS1E,GAAmBZ,EAAcD,CAAU,EAGhDuF,EAAS,GAAI,CACf,MAAMG,EAAe,KAAK,MAAMJ,EAAUhH,CAAc,EACxD,OAAOyG,EAAO,eAAe,UAAWW,EAAcP,CAAe,CAGzE,KAAS,CACL,MAAMQ,EAAyBJ,EAAS,GAClCK,EAAQ,KAAK,MAAML,EAAS,EAAE,EAGpC,OAAII,EAAyB,EACpBZ,EAAO,eAAe,cAAea,EAAOT,CAAe,EAGzDQ,EAAyB,EAC3BZ,EAAO,eAAe,aAAca,EAAOT,CAAe,EAI1DJ,EAAO,eAAe,eAAgBa,EAAQ,EAAGT,CAAe,CAE1E,CACH,CC1GO,SAASU,GAAoBnH,EAAMqB,EAAS,CACjD,OAAOqB,GAAe1C,EAAMiB,GAAajB,CAAI,EAAGqB,CAAO,CACzD,CCnFA,MAAM+F,GAAkBxN,EAAOiE,EAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASnCwJ,GAAezN,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAOtB0N,GAAQ1N,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUf2N,GAAgB3N,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBvBgB,GAAahB,EAAO;AAAA;AAAA;AAAA;AAAA,EAMpBS,GAAYT,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA4BnBU,GAAWV,EAAOiE,EAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAc9BH,GAASA,EAAM,cAAgB;AAAA;AAAA;AAAA,GAGhC;AAAA,EAGG8J,GAAa5N,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAQV8D,GAASA,EAAM,SAAW,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAY7C+J,GAAoB7N,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgB3B8N,GAAc9N,EAAO;AAAA;AAAA,EAIrBW,GAAaX,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAOpB+N,GAAW/N,EAAO;AAAA;AAAA;AAAA,EAKlBY,GAAYZ,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAMM8D,GACvBA,EAAM,WAAa,EAAU,UAC7BA,EAAM,WAAa,EAAU,UAC1B,SACR;AAAA,WACiBA,GACZA,EAAM,WAAa,EAAU,UAC7BA,EAAM,WAAa,EAAU,UAC1B,MACR;AAAA,EAGGhD,GAAWd,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYlBgO,GAAahO,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQpBiO,GAAYjO,EAAO;AAAA;AAAA;AAAA;AAAA,EAMnBkO,GAAgBlO,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAiBzB8D,GAASA,EAAM,cAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAOhC;AAAA,EAGGqK,GAAenO,EAAO;AAAA;AAAA;AAAA;AAAA,EAMtBoO,GAAcpO,EAAOiE,EAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkB/BoK,GAAerO,EAAOiE,EAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBhCqK,GAAiBtO,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQxBuO,GAAevO,EAAO;AAAA,gBACH8D,GAAAA,EAAM,OAAS,0BAA4B,aAAa;AAAA,sBAClDA,GAAAA,EAAM,OAAS,0BAA4B,MAAM;AAAA,WAC5DA,GAAAA,EAAM,OAAS,UAAY,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAc/C0K,GAAoB,IAAM,CAE9B,KAAM,CAAE,aAAAC,EAAc,QAAAC,CAAQ,EAAI1J,EAAW,EAEvC,CAAC2J,EAAcC,CAAe,EAAIzJ,WAAS,IAAI,EAC/C,CAAC0J,EAAQC,CAAS,EAAI3J,WAAS,KAAK,EACpC,CAAC4J,EAAkBC,CAAmB,EAAI7J,WAAS,EAAK,EACxD,CAAC8J,EAAeC,CAAgB,EAAI/J,WAAS,IAAI,EACjD,CAACgK,EAAcC,CAAe,EAAIjK,WAAS,IAAI,EAG/C,CAACkK,EAAOC,CAAQ,EAAInK,EAAA,SAAS,CAAE,CAAA,EAC/B,CAACzD,EAAS6N,CAAU,EAAIpK,WAAS,EAAI,EACrC,CAACxD,EAAO6N,CAAQ,EAAIrK,WAAS,IAAI,EACjC,CAACsK,EAAYC,CAAa,EAAIvK,WAAS,EAAK,EAG5CwK,EAAa,SAAY,CACzB,GAAA,CACFJ,EAAW,EAAI,EACT,MAAAtH,EAAS,MAAMwG,EAAa,CAAE,MAAO,GAAI,OAAQ,EAAG,EACjDa,GAAArH,GAAA,YAAAA,EAAQ,eAAgB,CAAA,CAAE,EACnCuH,EAAS,IAAI,QACNI,EAAK,CACJ,QAAA,MAAM,gCAAiCA,CAAG,EAClDJ,EAASI,CAAG,CAAA,QACZ,CACAL,EAAW,EAAK,CAClB,CAAA,EAIFjK,EAAAA,UAAU,IAAM,CACHqK,IAGL,MAAAE,EAAW,YAAY,IAAM,CACtBF,KACV,GAAK,EAED,MAAA,IAAM,cAAcE,CAAQ,CACrC,EAAG,CAAE,CAAA,EAGC,MAAAC,EAAwBT,EAAM,OAAOlN,GAAQA,EAAK,WAAa,CAAC,GAAK,GACrE4N,EAA2BD,EAAsB,OAAS,EAGhExK,EAAAA,UAAU,IAAM,CACd,GAAIyJ,EAAkB,CACd,MAAAiB,EAAQ,WAAW,IAAM,CAC7BhB,EAAoB,EAAK,GACxB,GAAI,EAEA,MAAA,IAAM,aAAagB,CAAK,CACjC,CAAA,EACC,CAACjB,CAAgB,CAAC,EAGf,MAAAzN,EAAeC,GACdA,EACEA,EACJ,MAAM,GAAG,EACT,OAAYC,EAAK,CAAC,CAAC,EACnB,KAAK,EAAE,EACP,YACA,EAAA,UAAU,EAAG,CAAC,EANC,IASdyO,EAAkBC,GAAW,CACjC,MAAMC,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,EAC1ErK,EAAQoK,EAASA,EAAO,WAAW,CAAC,EAAIC,EAAO,OAAS,EAC9D,OAAOA,EAAOrK,CAAK,CAAA,EAIfsK,EAAgB,MAAOC,EAAOlO,IAAS,CAGvC,GAFJkO,EAAM,gBAAgB,EAElB,CAAAZ,EAEY,CAAAL,EAAAjN,EAAK,KAAK,EAAE,EAC5BuN,EAAc,EAAI,EAEd,GAAA,CAEF,MAAMY,EAAU,CACd,YAAanO,EAAK,KAAK,GACvB,KAAMA,EAAK,WAAa,EAAI,gBAAkB,cAC9C,QAASA,EAAK,WAAa,EACvB,oEACA,4CAAA,EAGS,MAAMuM,EAAQ4B,CAAO,IAGlCpB,EAAiB/M,EAAK,KAAK,MAAQA,EAAK,KAAK,QAAQ,EACrD6M,EAAoB,EAAI,EAGxB,WAAW,IAAM,CACJW,KACV,GAAI,SAEFC,EAAK,CACJ,QAAA,MAAM,qBAAsBA,CAAG,CAAA,QACvC,CACAR,EAAgB,IAAI,EACpBM,EAAc,EAAK,CACrB,EAAA,EAIIa,EAAmB,IAAM,CACzB,GAAA,CAAClB,GAASA,EAAM,SAAW,EAAG,MAAO,GAErC,IAAAmB,EAAgB,CAAC,GAAGnB,CAAK,EAE7B,OAAIR,IAAW,cACN2B,EAAc,OAAerO,GAAAA,EAAK,WAAa,CAAC,EAC9C0M,IAAW,SACb2B,EAAc,KAAK,CAACC,EAAGC,IAAM,IAAI,KAAKA,EAAE,SAAS,EAAI,IAAI,KAAKD,EAAE,SAAS,CAAC,EAG5ED,CAAA,EAIHG,EAAc,IAAM,CACpB,GAAAjP,EAAgB,OAAArB,EAAA,IAAC8N,IAAa,SAAyB,2BAAA,CAAA,EACvD,GAAAxM,EAAc,OAAAtB,EAAA,IAACW,IAAW,SAA+C,iDAAA,CAAA,EAC7E,GAAI,CAACqO,GAASA,EAAM,SAAW,EACtB,OAAAhP,EAAA,IAACW,IAAW,SAAyD,2DAAA,CAAA,EAG9E,MAAMwP,EAAgBD,IAElB,OAAAC,EAAc,SAAW,EACpBnQ,EAAA,IAACW,IAAW,SAAkC,oCAAA,CAAA,EAIpDX,EAAAA,IAAAI,GAAA,CACE,SAAc+P,EAAA,IAAYrO,GAAA,CACnB,MAAAyO,EAAezO,EAAK,WAAa,EAGrC,OAAAD,EAAA,KAACxB,GAAA,CAEC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,SAAU,EAAI,EAC5B,QAAS,IAAMkO,EAAgBD,IAAiBxM,EAAK,GAAK,KAAOA,EAAK,EAAE,EACxE,aAAAyO,EAEC,SAAA,CAAAA,SAAiB/C,GAAkB,CAAA,SAAAxN,EAAAA,IAACwQ,GAAc,CAAA,KAAM,EAAI,CAAA,EAAE,EAE9DxQ,EAAA,IAAAuN,GAAA,CAAW,QAASqC,EAAe9N,EAAK,KAAK,EAAE,EAC7C,SAAKA,EAAA,KAAK,UACT9B,EAAA,IAAC,MAAI,CAAA,IAAK8B,EAAK,KAAK,UAAW,IAAKA,EAAK,KAAK,IAAM,CAAA,EAEpDb,EAAYa,EAAK,KAAK,MAAQA,EAAK,KAAK,QAAQ,EAEpD,SACC2L,GACC,CAAA,SAAA,CAAA5L,OAACvB,GACC,CAAA,SAAA,CAAAN,MAAC0N,IAAU,SAAK5L,EAAA,KAAK,MAAQA,EAAK,KAAK,SAAS,EAC/CD,EAAA,KAAAtB,GAAA,CAAU,UAAWuB,EAAK,UAAY,SAAA,CAAKA,EAAA,UAAU,KAAA,EAAG,CAAA,EAC3D,EACC9B,EAAA,IAAAS,GAAA,CACE,SAAKqB,EAAA,MAAQ,2BAChB,SACC6L,GACC,CAAA,SAAA,CAAA9L,OAAC+L,GACC,CAAA,SAAA,CAAC5N,EAAAA,IAAAyQ,GAAA,CAAQ,KAAM,EAAI,CAAA,EAClBvD,GAAoB,IAAI,KAAKpL,EAAK,SAAS,EAAG,CAAE,UAAW,GAAM,CAAA,EACpE,EACA9B,EAAA,IAAC6N,GAAA,CACC,QAAU6C,GAAMX,EAAcW,EAAG5O,CAAI,EACrC,aAAAyO,EACA,SAAUnB,GAAcN,IAAiBhN,EAAK,KAAK,GAElD,YAAcgN,IAAiBhN,EAAK,KAAK,GACxC,aAGGD,EAAA,KAAA8O,WAAA,CAAA,SAAA,CAAeJ,EAAAvQ,EAAA,IAAC4Q,GAAQ,KAAM,EAAA,CAAI,EAAM5Q,EAAAA,IAAA6Q,GAAA,CAAO,KAAM,EAAI,CAAA,EACzDN,EAAe,eAAiB,UAAA,EACnC,CAAA,CAEJ,CAAA,EACF,CAAA,EACF,CAAA,CAAA,EA5CKzO,EAAK,EAAA,CA+Cf,CAAA,CACH,CAAA,CAAA,EAKF,OAAAD,EAAA,KAACsL,GAAA,CACC,QAAS,CAAE,QAAS,EAAG,MAAO,GAAK,EACnC,QAAS,CAAE,QAAS,EAAG,MAAO,CAAE,EAChC,WAAY,CAAE,SAAU,EAAI,EAE5B,SAAA,CAAAtL,OAACuL,GACC,CAAA,SAAA,CAAAvL,OAACwL,GACC,CAAA,SAAA,CAACrN,EAAAA,IAAA8Q,GAAA,CAAO,KAAM,EAAI,CAAA,EAAE,iBAEnBpB,GACC1P,EAAA,IAAC4D,EAAO,KAAP,CACC,MAAO,CACL,WAAY,UACZ,MAAO,QACP,aAAc,MACd,MAAO,OACP,OAAQ,OACR,QAAS,cACT,WAAY,SACZ,eAAgB,SAChB,SAAU,SACV,WAAY,MACd,EACA,QAAS,CAAE,MAAO,CAAE,EACpB,QAAS,CAAE,MAAO,CAAE,EACpB,WAAY,CAAE,KAAM,SAAU,UAAW,IAAK,QAAS,EAAG,EAEzD,SAAsB6L,EAAA,MAAA,CACzB,CAAA,EAEJ,EACAzP,EAAAA,IAACsN,IAAc,SAEf,UAAA,CAAA,CAAA,EACF,EAGAtN,EAAAA,IAAC+Q,GACE,SACCrB,GAAA7N,EAAA,KAACkM,GAAA,CACC,QAAS,CAAE,QAAS,EAAG,OAAQ,EAAG,aAAc,CAAE,EAClD,QAAS,CAAE,QAAS,EAAG,OAAQ,OAAQ,aAAc,EAAG,EACxD,KAAM,CAAE,QAAS,EAAG,OAAQ,EAAG,aAAc,CAAE,EAE/C,SAAA,CAAA/N,EAAA,IAACgR,GAAO,CAAA,KAAM,GAAI,MAAM,UAAU,SACjC,IACE,CAAA,SAAA,CAAAvB,EAAsB,SAAW,EAC9B,GAAGA,EAAsB,CAAC,EAAE,KAAK,MAAQ,aAAa,oBACtD,GAAGA,EAAsB,MAAM,oCAAoC,2BAAA,EAEzE,CAAA,CAAA,CAAA,EAGN,SAGCxB,GACC,CAAA,SAAA,CAAAjO,EAAA,IAACkO,GAAA,CACC,OAAQM,IAAW,MACnB,QAAS,IAAMC,EAAU,KAAK,EAC/B,SAAA,KAAA,CAED,EACA5M,EAAA,KAACqM,GAAA,CACC,OAAQM,IAAW,cACnB,QAAS,IAAMC,EAAU,aAAa,EACvC,SAAA,CAAA,iBACgBiB,GAA4B,IAAID,EAAsB,MAAM,GAAA,CAAA,CAC7E,EACAzP,EAAA,IAACkO,GAAA,CACC,OAAQM,IAAW,SACnB,QAAS,IAAMC,EAAU,QAAQ,EAClC,SAAA,QAAA,CAED,CAAA,EACF,EAEC6B,EAAY,EAGbtQ,EAAAA,IAAC+Q,GACE,SACCrC,GAAA7M,EAAA,KAACmM,GAAA,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,KAAM,CAAE,QAAS,EAAG,EAAG,EAAG,EAE1B,SAAA,CAAChO,EAAAA,IAAA4Q,EAAA,CAAQ,KAAM,EAAI,CAAA,EAAE,eACRhC,EAAc,GAAA,CAAA,CAAA,EAGjC,CAAA,CAAA,CAAA,CAGN,ECpkBMzB,GAAkBxN,EAAOiE,EAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASnCwJ,GAAezN,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAOtB0N,GAAQ1N,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUfsR,GAAkBtR,EAAO;AAAA;AAAA;AAAA;AAAA,EAMzBuR,GAAcvR,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcrBwR,GAAaxR,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWpByR,GAAczR,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aASL8D,GAAAA,EAAM,QAAU,OAAS,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAW/C4N,GAAkB1R,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAuBzB2R,EAAgB3R,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKJ8D,GAAAA,EAAM,SAAW,0BAA4B,aAAa;AAAA,sBACpDA,GAAAA,EAAM,SAAW,UAAY,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAMzCA,GAAAA,EAAM,SAAW,qCAAuC,MAAM;AAAA,eAC/DA,GAAAA,EAAM,SAAW,mBAAqB,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAmBxCA,GAAAA,EAAM,SAAW,MAAQ,KAAK;AAAA,aACpCA,GAAAA,EAAM,SAAW,UAAY,MAAM;AAAA;AAAA,EAInD8N,GAAiB5R,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA4BxB6R,GAAkB7R,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAMN8D,GAAAA,EAAM,SAAW,0BAA4B,SAAS;AAAA,sBAChDA,GAAAA,EAAM,SAAW,0BAA4B,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQnF8J,GAAa5N,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAQV8D,GAASA,EAAM,SAAW,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAa7C/C,GAAWf,EAAO;AAAA;AAAA,EAIlB+N,GAAW/N,EAAO;AAAA;AAAA;AAAA;AAAA,EAMlB8R,GAAW9R,EAAO;AAAA;AAAA;AAAA,EAKlB+R,GAAe/R,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAOH8D,GAAAA,EAAM,SAAW,UAAY,SAAS;AAAA,WAC3CA,GAAAA,EAAM,SAAW,QAAU,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAM1BA,GAAAA,EAAM,SAAW,UAAY,SAAS;AAAA;AAAA,EAI3DkO,GAAchS,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBrBiS,GAAgBjS,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAOvBkS,EAAMlS,EAAO;AAAA;AAAA;AAAA;AAAA,WAIC8D,GAAAA,EAAM,OAAS,UAAY,MAAM;AAAA,iBAC3BA,GAAAA,EAAM,OAAS,MAAQ,KAAK;AAAA,6BAChBA,GAAAA,EAAM,OAAS,UAAY,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASxEqO,GAAwBnS,EAAO;AAAA;AAAA,EAI/BoS,GAAyBpS,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAchCqS,GAAarS,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAyBpBgB,GAAahB,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAOpBmO,GAAenO,EAAO;AAAA;AAAA;AAAA;AAAA,EAMtBqO,GAAerO,EAAOiE,EAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBhCjC,GAAehC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAQtBsS,GAAqB,IAAM,CAC/B,KAAM,CAACC,EAAaC,CAAc,EAAIrN,WAAS,SAAS,EAClD,CAACsN,EAAYC,CAAa,EAAIvN,WAAS,EAAE,EACzC,CAACwN,EAAiBC,CAAkB,EAAIzN,WAAS,aAAa,EAC9D,CAAC0N,EAAmBC,CAAoB,EAAI3N,WAAS,IAAI,EACzD,CAAC4N,EAASC,CAAU,EAAI7N,WAAS,EAAE,EACnC,CAAC8N,EAAmBC,CAAoB,EAAI/N,WAAS,EAAE,EACvD,CAACgO,EAAcC,CAAe,EAAIjO,WAAS,OAAO,EAClD,CAAC4J,EAAkBC,CAAmB,EAAI7J,WAAS,EAAK,EACxD,CAACkO,EAAWC,CAAY,EAAInO,WAAS,EAAE,EACvC,CAACoO,EAAiBC,CAAkB,EAAIrO,WAAS,EAAK,EAGtD,CAAE,QAAAzD,EAAS,MAAAC,EAAO,KAAAC,CAAK,EAAIE,GAAS2R,GAAW,CACnD,YAAa,cAAA,CACd,EAEK,CAAC/E,EAAS,CAAE,QAASe,EAAY,EAAIiE,GAAYC,EAAQ,EAG/DrO,EAAAA,UAAU,IAAM,CACd,GAAIyJ,EAAkB,CACd,MAAAiB,EAAQ,WAAW,IAAM,CAC7BhB,EAAoB,EAAK,GACxB,GAAI,EAEA,MAAA,IAAM,aAAagB,CAAK,CACjC,CAAA,EACC,CAACjB,CAAgB,CAAC,EAGrBzJ,EAAAA,UAAU,IAAM,CACViN,IAAgB,aACdY,IAAiB,QAEAK,EADA,6BACW,KAAKP,CAAiB,CAAC,EAC5CE,IAAiB,YAE1BK,EAAmBP,EAAkB,KAAO,EAAA,OAAS,CAAC,EAGzD,EAAA,CAACA,EAAmBE,EAAcZ,CAAW,CAAC,EAGjDjN,EAAAA,UAAU,IAAM,CACd,IAAIsO,EAAiB,GAErB,OAAQjB,EAAiB,CACvB,IAAK,gBACciB,EAAA,4DACjB,MACF,IAAK,cACcA,EAAA,iEACjB,MACF,IAAK,kBACcA,EAAA,yDACjB,MACF,IAAK,WACcA,EAAA,uCACjB,MACF,IAAK,YACcA,EAAA,sDACjB,MACF,IAAK,cACL,QACmBA,EAAA,2CACjB,KACJ,CAEAZ,EAAWY,CAAc,CAAA,EACxB,CAACjB,CAAe,CAAC,EAGd,MAAArR,EAAeC,GACdA,EACEA,EACJ,MAAM,GAAG,EACT,OAAYC,EAAK,CAAC,CAAC,EACnB,KAAK,EAAE,EACP,YACA,EAAA,UAAU,EAAG,CAAC,EANC,IAUdyO,EAAkBC,GAAW,CACjC,MAAMC,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,EAC1ErK,EAAQoK,EAASA,EAAO,WAAW,CAAC,EAAIC,EAAO,OAAS,EAC9D,OAAOA,EAAOrK,CAAK,CAAA,EAIfsK,EAAgB,SAAY,SAChCkD,EAAa,EAAE,EAEX,GAAA,CAEEf,IAAgB,WAAaM,GAW3BzQ,GAVa,MAAMsM,EAAQ,CAC7B,UAAW,CACT,SAAU,CACR,YAAamE,EAAkB,GAC/B,KAAMF,EACN,QAASI,EAAQ,KAAK,CACxB,CACF,CAAA,CACD,GAEY,OAAT,MAAA3Q,EAAe,UACjB4M,EAAoB,EAAI,EACxB8D,EAAqB,IAAI,EACfe,KAILtB,IAAgB,YAAcgB,IAcjClR,GAba,MAAMqM,EAAQ,CAC7B,UAAW,CACT,SAAU,CACR,kBAAmB,CACjB,KAAMyE,EACN,QAASF,EAAkB,KAAK,CAClC,EACA,KAAMN,EACN,QAASI,EAAQ,KAAK,CACxB,CACF,CAAA,CACD,GAEY,OAAT,MAAA1Q,EAAe,UACjB2M,EAAoB,EAAI,EACd6E,WAGPjE,EAAK,CACJ,QAAA,MAAM,qBAAsBA,CAAG,EACvC0D,EAAa,uCAAuC,CACtD,CAAA,EAGIO,EAAY,IAAM,CACXb,EAAAc,EAAkBnB,CAAe,CAAC,EAC7CO,EAAqB,EAAE,CAAA,EAGnBY,EAAqBC,GAAY,CACrC,OAAQA,EAAS,CACf,IAAK,gBACI,MAAA,4DACT,IAAK,cACI,MAAA,iEACT,IAAK,kBACI,MAAA,yDACT,IAAK,WACI,MAAA,uCACT,IAAK,YACI,MAAA,sDACT,IAAK,cACL,QACS,MAAA,0CACX,CAAA,EAIIC,EAAgBjD,GAAM,CACZ2B,EAAA3B,EAAE,OAAO,KAAK,CAAA,EAGxBkD,EAAoB,IAAM,CAC9BvB,EAAc,EAAE,CAAA,EAGZwB,EAAuBC,GAAS,CAChCtB,GAAqBA,EAAkB,KAAOsB,EAAK,GACrDrB,EAAqB,IAAI,EAEzBA,EAAqBqB,CAAI,CAC3B,EAIIC,EAAc,IAAM,CACpB,GAAA1S,EAAgB,OAAArB,EAAA,IAAC8N,IAAa,SAAkB,oBAAA,CAAA,EAChD,GAAAxM,EAAc,OAAAtB,EAAA,IAACW,IAAW,SAAwC,0CAAA,CAAA,EAClE,GAAA,CAACY,GAAQ,CAACA,EAAK,OAASA,EAAK,MAAM,SAAW,EACzC,OAAAvB,EAAA,IAACW,IAAW,SAAgD,kDAAA,CAAA,EAIrE,MAAMqT,EAAgBzS,EAAK,MAAM,OAAeuS,GAAA,CAC9C,GAAI,CAAC1B,EAAmB,MAAA,GAClB,MAAA6B,EAAO7B,EAAW,cACxB,OACG0B,EAAK,MAAQA,EAAK,KAAK,YAAA,EAAc,SAASG,CAAI,GAClDH,EAAK,UAAYA,EAAK,SAAS,YAAY,EAAE,SAASG,CAAI,CAAA,CAE9D,EAEG,OAAAD,EAAc,SAAW,EACpBhU,EAAA,IAACW,IAAW,SAA6B,+BAAA,CAAA,EAI/CX,EAAAA,IAAAuR,GAAA,CACE,SAAcyC,EAAA,IACbF,GAAAjS,EAAA,KAAC2P,GAAA,CAEC,SAAUgB,GAAqBA,EAAkB,KAAOsB,EAAK,GAC7D,QAAS,IAAMD,EAAoBC,CAAI,EAEvC,SAAA,CAAC9T,EAAAA,IAAAuN,GAAA,CAAW,QAASqC,EAAekE,EAAK,EAAE,EACxC,SAAAA,EAAK,UACJ9T,EAAAA,IAAC,MAAI,CAAA,IAAK8T,EAAK,UAAW,IAAKA,EAAK,IAAM,CAAA,EAE1C7S,EAAY6S,EAAK,MAAQA,EAAK,QAAQ,CAE1C,CAAA,SACCpT,GACC,CAAA,SAAA,CAACV,EAAA,IAAA0N,GAAA,CAAU,SAAKoG,EAAA,MAAQ,eAAe,SACtCrC,GAAS,CAAA,SAAA,CAAA,IAAEqC,EAAK,QAAA,EAAS,CAAA,EAC5B,QACCpC,GAAa,CAAA,SAAUc,GAAqBA,EAAkB,KAAOsB,EAAK,GACxE,SAAAtB,GAAqBA,EAAkB,KAAOsB,EAAK,GAClD9T,MAACkU,IAAQ,KAAM,EAAA,CAAI,EACjB,KACN,CAAA,CAAA,EAnBKJ,EAAK,EAqBb,CAAA,CACH,CAAA,CAAA,EAIEK,EAAqB,WAEtBrC,GACC,CAAA,SAAA,CAAAjQ,EAAA,KAAC+P,GAAc,CAAA,MAAO,CAAE,aAAc,KACpC,EAAA,SAAA,CAAA5R,EAAA,IAAC6R,EAAA,CACC,OAAQiB,IAAiB,QACzB,QAAS,IAAMC,EAAgB,OAAO,EACvC,SAAA,OAAA,CAED,EACA/S,EAAA,IAAC6R,EAAA,CACC,OAAQiB,IAAiB,WACzB,QAAS,IAAMC,EAAgB,UAAU,EAC1C,SAAA,UAAA,CAED,CAAA,EACF,EAEA/S,EAAA,IAAC+R,GAAA,CACC,KAAMe,IAAiB,QAAU,QAAU,OAC3C,YAAaA,IAAiB,QAAU,sBAAwB,0BAChE,MAAOF,EACP,SAAWlC,GAAMmC,EAAqBnC,EAAE,OAAO,KAAK,CAAA,CACtD,EAEC,CAACwC,GAAmBN,EAAkB,KAAK,IAAM,IAChD5S,EAAA,IAAC2B,GACE,CAAA,SAAAmR,IAAiB,QACd,sCACA,yCACN,CAAA,CAEJ,CAAA,CAAA,EAIEsB,EAAa,IACblC,IAAgB,UACXM,IAAsB,MAAQE,EAAQ,KAAA,IAAW,GAC/CR,IAAgB,WAClBgB,GAAmBR,EAAQ,KAAA,IAAW,GAExC,GAIP,OAAA7Q,EAAA,KAACsL,GAAA,CACC,QAAS,CAAE,QAAS,EAAG,MAAO,GAAK,EACnC,QAAS,CAAE,QAAS,EAAG,MAAO,CAAE,EAChC,WAAY,CAAE,SAAU,EAAI,EAE5B,SAAA,CAACnN,EAAA,IAAAoN,GAAA,CACC,gBAACC,GACC,CAAA,SAAA,CAACrN,EAAAA,IAAA6Q,GAAA,CAAO,KAAM,EAAI,CAAA,EAAE,gBAAA,CAAA,CAEtB,CACF,CAAA,SAECe,GACC,CAAA,SAAA,CAAA/P,EAAA,KAACgQ,EAAA,CACC,OAAQK,IAAgB,UACxB,QAAS,IAAMC,EAAe,SAAS,EAEvC,SAAA,CAAAnS,MAACqU,IAAQ,KAAM,GAAI,MAAO,CAAE,YAAa,OAAS,EAAE,SAAA,CAAA,CAEtD,EACAxS,EAAA,KAACgQ,EAAA,CACC,OAAQK,IAAgB,WACxB,QAAS,IAAMC,EAAe,UAAU,EAExC,SAAA,CAAAnS,MAACsU,IAAO,KAAM,GAAI,MAAO,CAAE,YAAa,OAAS,EAAE,UAAA,CAAA,CAErD,CAAA,EACF,EAGCpC,IAAgB,WAEbrQ,EAAAA,KAAA8O,EAAA,SAAA,CAAA,SAAA,CAAA9O,OAACoP,GACC,CAAA,SAAA,CAAAjR,MAACmR,GACC,CAAA,SAAAnR,EAAA,IAACuU,GAAS,CAAA,KAAM,EAAI,CAAA,EACtB,EACAvU,EAAA,IAACkR,GAAA,CACC,KAAK,OACL,YAAY,oBACZ,MAAOkB,EACP,SAAUuB,CAAA,CACZ,EACA3T,EAAA,IAACoR,GAAA,CACC,QAASgB,IAAe,GACxB,QAASwB,EAET,SAAA5T,EAAAA,IAACwU,GAAI,CAAA,KAAM,EAAI,CAAA,CAAA,CACjB,CAAA,EACF,EAECT,EAAY,CAAA,EACf,EAID7B,IAAgB,YAAciC,EAAmB,SAGjD9C,GACC,CAAA,SAAA,CAAAxP,EAAA,KAACyP,EAAA,CACC,SAAUgB,IAAoB,cAC9B,QAAS,IAAMC,EAAmB,aAAa,EAE/C,SAAA,CAACvS,EAAA,IAAA,MAAA,CAAI,UAAU,eACb,SAACA,EAAAA,IAAAoD,EAAA,CAAK,KAAK,cAAc,KAAM,GAAI,QAAS,EAAM,CAAA,EACpD,EACApD,EAAAA,IAAC,QAAK,SAAQ,UAAA,CAAA,CAAA,CAAA,CAChB,EACA6B,EAAA,KAACyP,EAAA,CACC,SAAUgB,IAAoB,cAC9B,QAAS,IAAMC,EAAmB,aAAa,EAE/C,SAAA,CAACvS,EAAA,IAAA,MAAA,CAAI,UAAU,eACb,SAACA,EAAAA,IAAAoD,EAAA,CAAK,KAAK,cAAc,KAAM,GAAI,QAAS,EAAM,CAAA,EACpD,EACApD,EAAAA,IAAC,QAAK,SAAQ,UAAA,CAAA,CAAA,CAAA,CAChB,EACA6B,EAAA,KAACyP,EAAA,CACC,SAAUgB,IAAoB,gBAC9B,QAAS,IAAMC,EAAmB,eAAe,EAEjD,SAAA,CAACvS,EAAA,IAAA,MAAA,CAAI,UAAU,eACb,SAACA,EAAAA,IAAAoD,EAAA,CAAK,KAAK,gBAAgB,KAAM,GAAI,QAAS,EAAM,CAAA,EACtD,EACApD,EAAAA,IAAC,QAAK,SAAU,YAAA,CAAA,CAAA,CAAA,CAClB,EACA6B,EAAA,KAACyP,EAAA,CACC,SAAUgB,IAAoB,kBAC9B,QAAS,IAAMC,EAAmB,iBAAiB,EAEnD,SAAA,CAACvS,EAAA,IAAA,MAAA,CAAI,UAAU,eACb,SAACA,EAAAA,IAAAoD,EAAA,CAAK,KAAK,kBAAkB,KAAM,GAAI,QAAS,EAAM,CAAA,EACxD,EACApD,EAAAA,IAAC,QAAK,SAAY,cAAA,CAAA,CAAA,CAAA,CACpB,EACA6B,EAAA,KAACyP,EAAA,CACC,SAAUgB,IAAoB,YAC9B,QAAS,IAAMC,EAAmB,WAAW,EAE7C,SAAA,CAACvS,EAAA,IAAA,MAAA,CAAI,UAAU,eACb,SAACA,EAAAA,IAAAoD,EAAA,CAAK,KAAK,YAAY,KAAM,GAAI,QAAS,EAAM,CAAA,EAClD,EACApD,EAAAA,IAAC,QAAK,SAAM,QAAA,CAAA,CAAA,CAAA,CACd,EACA6B,EAAA,KAACyP,EAAA,CACC,SAAUgB,IAAoB,WAC9B,QAAS,IAAMC,EAAmB,UAAU,EAE5C,SAAA,CAACvS,EAAA,IAAA,MAAA,CAAI,UAAU,eACb,SAACA,EAAAA,IAAAoD,EAAA,CAAK,KAAK,WAAW,KAAM,GAAI,QAAS,EAAM,CAAA,EACjD,EACApD,EAAAA,IAAC,QAAK,SAAK,OAAA,CAAA,CAAA,CAAA,CACb,CAAA,EACF,EAGAA,EAAA,IAAC2R,GAAA,CACC,YAAY,wBACZ,MAAOe,EACP,SAAWhC,GAAMiC,EAAWjC,EAAE,OAAO,KAAK,CAAA,CAC5C,EAECsC,GAAchT,EAAAA,IAAA2B,GAAA,CAAc,SAAUqR,CAAA,CAAA,EAGvCnR,EAAA,KAACmQ,GAAA,CACC,QAASjC,EACT,SAAU,CAACqE,EAAA,GAAgBhF,EAE1B,SAAA,CAAAA,EAAa,aAAe,WAC7BpP,EAAAA,IAAC4Q,EAAQ,CAAA,KAAM,EAAI,CAAA,CAAA,CAAA,CACrB,EAGA5Q,EAAAA,IAAC+Q,GACE,SACCrC,GAAA7M,EAAA,KAACmM,GAAA,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,KAAM,CAAE,QAAS,EAAG,EAAG,EAAG,EAE1B,SAAA,CAAChO,EAAAA,IAAA4Q,EAAA,CAAQ,KAAM,EAAI,CAAA,EAAE,wBAAA,CAAA,CAAA,EAI3B,CAAA,CAAA,CAAA,CAGN,EC1wBMzD,GAAkBxN,EAAOiE,EAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASnCwJ,GAAezN,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAOtB0N,GAAQ1N,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUf2N,GAAgB3N,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBvBgB,GAAahB,EAAO;AAAA;AAAA;AAAA;AAAA,EAMpB8U,GAAW9U,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA4BlB+U,GAAU/U,EAAOiE,EAAO,GAAG;AAAA;AAAA;AAAA;AAAA,gBAIRH,GAAAA,EAAM,OAAS,UAAY,8DAA8D;AAAA;AAAA;AAAA;AAAA,sBAInFA,GAAAA,EAAM,OAAS,cAAgB,yBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAK5DA,GAAAA,EAAM,OAAS,UAAY,8DAA8D;AAAA;AAAA;AAAA,IAGhHA,GAAS,CAACA,EAAM,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAY3B;AAAA,EAGGkR,GAAiBhV,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAQd8D,GAASA,EAAM,SAAW,yBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmB7DmR,GAAejV,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAQZ8D,GAASA,EAAM,SAAW,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkB7CoR,GAAalV,EAAO;AAAA;AAAA,EAIpBmV,GAAYnV,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAOnBoV,GAAapV,EAAO;AAAA;AAAA;AAAA,EAKpBqV,GAAUrV,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAME8D,GAAA,CACrB,OAAQA,EAAM,KAAM,CAClB,IAAK,gBAAwB,MAAA,0BAC7B,IAAK,WAAmB,MAAA,0BACxB,IAAK,kBAA0B,MAAA,0BAC/B,IAAK,cAAsB,MAAA,2BAC3B,IAAK,YAAoB,MAAA,2BACzB,IAAK,cACL,QAAgB,MAAA,0BAClB,CACF,CAAC;AAAA,WACiBA,GAAA,CAChB,OAAQA,EAAM,KAAM,CAClB,IAAK,gBAAwB,MAAA,UAC7B,IAAK,WAAmB,MAAA,UACxB,IAAK,kBAA0B,MAAA,UAC/B,IAAK,cAAsB,MAAA,UAC3B,IAAK,YAAoB,MAAA,UACzB,IAAK,cACL,QAAgB,MAAA,SAClB,CACF,CAAC;AAAA,EAGGwR,GAAatV,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYpBuV,GAAYvV,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQnBiO,GAAYjO,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAOnBwV,GAAaxV,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBpByV,GAAczV,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBrBmO,GAAenO,EAAO;AAAA;AAAA;AAAA;AAAA,EAMtB0V,GAAmB1V,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAc1BqO,GAAerO,EAAOiE,EAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBhC0R,GAAc3V,EAAOiE,EAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAa/B2R,GAAqB5V,EAAOiE,EAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBtCyN,GAAkB1R,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAyBzB2R,EAAgB3R,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAMJ8D,GAAAA,EAAM,SAAW,0BAA4B,SAAS;AAAA,sBAChDA,GAAAA,EAAM,SAAW,UAAY,MAAM;AAAA;AAAA;AAAA;AAAA,gBAIzCA,GAAAA,EAAM,SAAW,qCAAuC,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAmB3DA,GAAAA,EAAM,SAAW,MAAQ,QAAQ;AAAA,aACvCA,GAAAA,EAAM,SAAW,UAAY,MAAM;AAAA;AAAA;AAAA,EAKnD+R,GAAY7V,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBnB8V,GAAgB9V,EAAO;AAAA;AAAA;AAAA;AAAA,EAMvB+V,GAAe/V,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAetBqS,GAAarS,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqBpBgW,GAAqB,IAAM,CAE/B,KAAM,CAAE,gBAAAjR,EAAiB,cAAAkR,EAAe,QAAAvH,GAAY1J,EAAW,EAGzD,CAACW,EAAcuQ,CAAe,EAAI/Q,EAAA,SAAS,CAAE,CAAA,EAC7C,CAACzD,EAAS6N,CAAU,EAAIpK,WAAS,EAAI,EACrC,CAACxD,EAAO6N,CAAQ,EAAIrK,WAAS,IAAI,EACjC,CAACsK,EAAYC,CAAa,EAAIvK,WAAS,EAAK,EAE5C,CAACgR,EAAeC,CAAgB,EAAIjR,WAAS,IAAI,EACjD,CAACkR,EAAcC,CAAe,EAAInR,WAAS,EAAE,EAC7C,CAACoR,EAAcC,CAAe,EAAIrR,WAAS,aAAa,EACxD,CAACsR,EAAiBC,CAAkB,EAAIvR,WAAS,EAAK,EACtD,CAAC4J,EAAkBC,CAAmB,EAAI7J,WAAS,EAAK,EACxD,CAAC8J,EAAeC,CAAgB,EAAI/J,WAAS,IAAI,EAGvDG,EAAAA,UAAU,IAAM,CACIqR,GACpB,EAAG,CAAE,CAAA,EAGL,MAAMA,EAAoB,SAAY,CAChC,GAAA,CACFpH,EAAW,EAAI,EACT,MAAAqH,EAAO,MAAM7R,IACHmR,EAAAU,GAAQ,CAAA,CAAE,EAC1BpH,EAAS,IAAI,QACNI,EAAK,CACJ,QAAA,MAAM,gCAAiCA,CAAG,EAClDJ,EAASI,CAAG,CAAA,QACZ,CACAL,EAAW,EAAK,CAClB,CAAA,EAIIsH,EAAalR,EAAa,OAAOmR,GAAO,CAACA,EAAI,MAAM,GAAK,GACxDC,EAAgBF,EAAW,OAAS,EAG1CvR,EAAAA,UAAU,IAAM,CACd,GAAIyJ,EAAkB,CACd,MAAAiB,EAAQ,WAAW,IAAM,CAC7BhB,EAAoB,EAAK,GACxB,GAAI,EAEA,MAAA,IAAM,aAAagB,CAAK,CACjC,CAAA,EACC,CAACjB,CAAgB,CAAC,EAGf,MAAAzN,EAAeC,GACdA,EACEA,EACJ,MAAM,GAAG,EACT,OAAYC,EAAK,CAAC,CAAC,EACnB,KAAK,EAAE,EACP,YACA,EAAA,UAAU,EAAG,CAAC,EANC,IASdyO,EAAkBC,GAAW,CACjC,MAAMC,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,EAC1ErK,EAAQoK,EAASA,EAAO,WAAW,CAAC,EAAIC,EAAO,OAAS,EAC9D,OAAOA,EAAOrK,CAAK,CAAA,EAGfkR,EAAmB,MAAO3G,EAAO4G,IAAU,CAC/C5G,EAAM,gBAAgB,EAElB,GAAA,CACF,MAAM4F,EAAcgB,CAAK,EAGPN,UACX/G,EAAK,CACJ,QAAA,MAAM,6BAA8BA,CAAG,CACjD,CAAA,EAGIsH,EAAkB,CAAC7G,EAAOyG,IAAQ,CACtCzG,EAAM,gBAAgB,EAEtB+F,EAAiBU,CAAG,EACJR,EAAA,kBAAkBQ,EAAI,KAAK,QAAQ,WAAY,KAAK,EAAE,KAAK,EAAE,YAAY,CAAC,GAAG,EAC7FN,EAAgB,aAAa,EAC7BE,EAAmB,EAAI,CAAA,EAGnBS,EAAmB,IAAM,CAC7BT,EAAmB,EAAK,EACxBN,EAAiB,IAAI,EACrBE,EAAgB,EAAE,CAAA,EAGdc,EAAoB,SAAY,CACpC,GAAI,GAACjB,GAAiB,CAACE,EAAa,KAAK,GAErC,GAAA,CACF3G,EAAc,EAAI,EAGlB,MAAMY,EAAU,CACd,YAAa6F,EAAc,OAAO,GAClC,KAAMI,EACN,QAASF,EAAa,KAAK,CAAA,EAGd,MAAM3H,EAAQ4B,CAAO,IAGlCpB,EAAiBiH,EAAc,OAAO,MAAQA,EAAc,OAAO,QAAQ,EAC3EnH,EAAoB,EAAI,EACPmI,IAGjB,WAAW,IAAM,CACGR,KACjB,GAAI,SAEF/G,EAAK,CACJ,QAAA,MAAM,2BAA4BA,CAAG,CAAA,QAC7C,CACAF,EAAc,EAAK,CACrB,CAAA,EAII2H,EAAyB3T,GAAS,CACtC,OAAQA,EAAM,CACZ,IAAK,gBAAwB,MAAA,yBAC7B,IAAK,WAAmB,MAAA,yBACxB,IAAK,kBAA0B,MAAA,yBAC/B,IAAK,cAAsB,MAAA,0BAC3B,IAAK,YAAoB,MAAA,0BACzB,IAAK,cACL,QAAgB,MAAA,yBAClB,CAAA,EAII4T,EAAa,IACb5V,EAAgBrB,EAAA,IAAC8N,IAAa,SAAwB,0BAAA,CAAA,EACtDxM,EAActB,EAAA,IAACW,IAAW,SAAqC,uCAAA,CAAA,EAC/D,CAAC2E,GAAgBA,EAAa,SAAW,EACpCtF,EAAA,IAACW,IAAW,SAAwD,0DAAA,CAAA,EAI1EX,EAAAA,IAAAyU,GAAA,CACE,SAAanP,EAAA,IACZmR,GAAA5U,EAAA,KAAC6S,GAAA,CAEC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,SAAU,EAAI,EAC5B,OAAQ+B,EAAI,OAEZ,SAAA,CAAA5U,EAAA,KAAC8S,GAAe,CAAA,QAASqC,EAAsBP,EAAI,IAAI,EACrD,SAAA,CAAAzW,MAACoD,GAAK,KAAMqT,EAAI,KAAM,KAAM,GAAI,QAAS,GAAM,EAC9CzW,EAAA,IAAA4U,GAAA,CAAa,QAAShF,EAAe6G,EAAI,OAAO,EAAE,EAChD,SAAAxV,EAAYwV,EAAI,OAAO,MAAQA,EAAI,OAAO,QAAQ,EACrD,CAAA,EACF,SACC5B,GACC,CAAA,SAAA,CAAAhT,OAACiT,GACC,CAAA,SAAA,CAAA9U,MAAC+U,IAAY,SAAI0B,EAAA,OAAO,MAAQA,EAAI,OAAO,SAAS,EACnDzW,EAAAA,IAAAgV,GAAA,CAAQ,KAAMyB,EAAI,KAChB,SAAAA,EAAI,KAAK,QAAQ,WAAY,KAAK,EAAE,KACvC,CAAA,CAAA,CAAA,EACF,EACCzW,EAAA,IAAAiV,GAAA,CACE,SAAIwB,EAAA,SAAW,kBAClB,SACCvB,GACC,CAAA,SAAA,CAAArT,OAAC+L,GACC,CAAA,SAAA,CAAC5N,EAAAA,IAAAyQ,GAAA,CAAQ,KAAM,EAAI,CAAA,EAClBvD,GAAoB,IAAI,KAAKuJ,EAAI,SAAS,EAAG,CAAE,UAAW,GAAM,CAAA,EACnE,EAEC,CAACA,EAAI,QACJ5U,OAACsT,GAAW,CAAA,QAAUzE,GAAMiG,EAAiBjG,EAAG+F,EAAI,EAAE,EACpD,SAAA,CAACzW,EAAAA,IAAAkU,GAAA,CAAQ,KAAM,EAAI,CAAA,EAAE,WAAA,EAEvB,EAGFrS,OAACuT,IAAY,QAAU1E,GAAMmG,EAAgBnG,EAAG+F,CAAG,EACjD,SAAA,CAACzW,EAAAA,IAAAkX,GAAA,CAAgB,KAAM,EAAI,CAAA,EAAE,OAAA,EAE/B,CAAA,EACF,CAAA,EACF,CAAA,CAAA,EAxCKT,EAAI,EA0CZ,CAAA,CACH,CAAA,EAKF,OAAA5U,EAAA,KAACsL,GAAA,CACC,QAAS,CAAE,QAAS,EAAG,MAAO,GAAK,EACnC,QAAS,CAAE,QAAS,EAAG,MAAO,CAAE,EAChC,WAAY,CAAE,SAAU,EAAI,EAE5B,SAAA,CAAAtL,OAACuL,GACC,CAAA,SAAA,CAAAvL,OAACwL,GACC,CAAA,SAAA,CAACrN,EAAAA,IAAA4Q,EAAA,CAAQ,KAAM,EAAI,CAAA,EAAE,gBAEpB8F,GACC1W,EAAA,IAACqV,GAAkB,CAAA,SAAAmB,EAAW,OAAO,CAAA,EAEzC,EACAxW,EAAAA,IAACsN,IAAc,SAEf,UAAA,CAAA,CAAA,EACF,EAEC2J,EAAW,EAGZjX,EAAAA,IAAC+Q,EACE,CAAA,SAAAqF,GAAmBN,GAClB9V,EAAA,IAACsV,GAAA,CACC,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,KAAM,CAAE,QAAS,CAAE,EAEnB,SAAAzT,EAAA,KAAC0T,GAAA,CACC,QAAS,CAAE,EAAG,GAAI,QAAS,CAAE,EAC7B,QAAS,CAAE,EAAG,EAAG,QAAS,CAAE,EAC5B,KAAM,CAAE,EAAG,GAAI,QAAS,CAAE,EAE1B,SAAA,CAAA1T,OAAC,KACC,CAAA,SAAA,CAAC7B,EAAAA,IAAAkX,GAAA,CAAgB,KAAM,EAAI,CAAA,EAAE,YACnBpB,EAAc,OAAO,MAAQA,EAAc,OAAO,QAAA,EAC9D,SAECzE,GACC,CAAA,SAAA,CAAAxP,EAAA,KAACyP,EAAA,CACC,SAAU4E,IAAiB,cAC3B,QAAS,IAAMC,EAAgB,aAAa,EAE5C,SAAA,CAACnW,EAAA,IAAA,MAAA,CAAI,UAAU,eACb,SAACA,EAAAA,IAAAoD,EAAA,CAAK,KAAK,cAAc,KAAM,GAAI,QAAS,EAAM,CAAA,EACpD,EACApD,EAAAA,IAAC,QAAK,SAAQ,UAAA,CAAA,CAAA,CAAA,CAChB,EACA6B,EAAA,KAACyP,EAAA,CACC,SAAU4E,IAAiB,cAC3B,QAAS,IAAMC,EAAgB,aAAa,EAE5C,SAAA,CAACnW,EAAA,IAAA,MAAA,CAAI,UAAU,eACb,SAACA,EAAAA,IAAAoD,EAAA,CAAK,KAAK,cAAc,KAAM,GAAI,QAAS,EAAM,CAAA,EACpD,EACApD,EAAAA,IAAC,QAAK,SAAQ,UAAA,CAAA,CAAA,CAAA,CAChB,EACA6B,EAAA,KAACyP,EAAA,CACC,SAAU4E,IAAiB,kBAC3B,QAAS,IAAMC,EAAgB,iBAAiB,EAEhD,SAAA,CAACnW,EAAA,IAAA,MAAA,CAAI,UAAU,eACb,SAACA,EAAAA,IAAAoD,EAAA,CAAK,KAAK,kBAAkB,KAAM,GAAI,QAAS,EAAM,CAAA,EACxD,EACApD,EAAAA,IAAC,QAAK,SAAY,cAAA,CAAA,CAAA,CAAA,CACpB,EACA6B,EAAA,KAACyP,EAAA,CACC,SAAU4E,IAAiB,gBAC3B,QAAS,IAAMC,EAAgB,eAAe,EAE9C,SAAA,CAACnW,EAAA,IAAA,MAAA,CAAI,UAAU,eACb,SAACA,EAAAA,IAAAoD,EAAA,CAAK,KAAK,gBAAgB,KAAM,GAAI,QAAS,EAAM,CAAA,EACtD,EACApD,EAAAA,IAAC,QAAK,SAAU,YAAA,CAAA,CAAA,CAAA,CAClB,CAAA,EACF,EAEAA,EAAA,IAACwV,GAAA,CACC,MAAOQ,EACP,SAAWtF,GAAMuF,EAAgBvF,EAAE,OAAO,KAAK,EAC/C,YAAY,6BAAA,CACd,SAEC+E,GACC,CAAA,SAAA,CAACzV,EAAA,IAAA0V,GAAA,CAAa,QAASoB,EAAkB,SAEzC,SAAA,EACA9W,EAAA,IAACgS,GAAA,CACC,QAAS+E,EACT,SAAU,CAACf,EAAa,KAAA,GAAU5G,EAEjC,WAAa,aAAe,YAAA,CAC/B,CAAA,EACF,CAAA,CAAA,CACF,CAAA,CAAA,EAGN,EAGApP,EAAAA,IAAC+Q,GACE,SACCrC,GAAA7M,EAAA,KAACmM,GAAA,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,KAAM,CAAE,QAAS,EAAG,EAAG,EAAG,EAE1B,SAAA,CAAChO,EAAAA,IAAA4Q,EAAA,CAAQ,KAAM,EAAI,CAAA,EAAE,eACRhC,EAAc,GAAA,CAAA,CAAA,EAGjC,CAAA,CAAA,CAAA,CAGN,ECtwBMuI,GAAoBxX,EAAOiE,EAAO,GAAG;AAAA;AAAA,EAIrCwT,GAAkBzX,EAAOiE,EAAO,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA+BtCyT,GAAgB1X,EAAOiE,EAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAwBjC0T,GAAc3X,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAOrB4X,GAAa5X,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASpB6X,GAAc7X,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBrB8X,GAAc9X,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAuBrB+X,GAAe/X,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAMH8D,GAAAA,EAAM,SAAW,0BAA4B,SAAS;AAAA,sBAChDA,GAAAA,EAAM,SAAW,0BAA4B,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQnFkU,GAAShY,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAQN8D,GAASA,EAAM,SAAW,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAa7C/C,GAAWf,EAAO;AAAA;AAAA,EAIlB+N,GAAW/N,EAAO;AAAA;AAAA;AAAA;AAAA,EAMlB8R,GAAW9R,EAAO;AAAA;AAAA;AAAA,EAKlB0R,GAAkB1R,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAuBzB2R,GAAgB3R,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKJ8D,GAAAA,EAAM,SAAW,0BAA4B,aAAa;AAAA,sBACpDA,GAAAA,EAAM,SAAW,UAAY,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAMzCA,GAAAA,EAAM,SAAW,qCAAuC,MAAM;AAAA,eAC/DA,GAAAA,EAAM,SAAW,mBAAqB,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAmBxCA,GAAAA,EAAM,SAAW,MAAQ,KAAK;AAAA,aACpCA,GAAAA,EAAM,SAAW,UAAY,MAAM;AAAA;AAAA,EAInDuO,GAAarS,EAAOiE,EAAO,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAyBjCjD,GAAahB,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAOpBiY,GAAajY,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUpBmO,GAAenO,EAAO;AAAA;AAAA;AAAA;AAAA,EAMtBkY,GAAQlY,EAAOiE,EAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAczBoK,GAAerO,EAAOkY,EAAK;AAAA;AAAA;AAAA,EAK3BC,GAAanY,EAAOkY,EAAK;AAAA;AAAA;AAAA,EAMzBE,GAAiB,CAAC,CAAE,OAAAC,EAAS,IAAM,CAAC,KAAQ,CAEhD,KAAM,CAAE,SAAAC,EAAU,QAAA5J,CAAQ,EAAI1J,EAAW,EAEnC,CAACuT,EAAWC,CAAY,EAAIrT,WAAS,EAAK,EAC1C,CAACsT,EAAgBC,CAAiB,EAAIvT,WAAS,IAAI,EACnD,CAACwN,EAAiBC,CAAkB,EAAIzN,WAAS,aAAa,EAC9D,CAAC4J,EAAkBC,CAAmB,EAAI7J,WAAS,EAAK,EACxD,CAACwT,EAAgBC,CAAiB,EAAIzT,WAAS,EAAK,EACpD,CAAC0T,EAAcC,CAAe,EAAI3T,WAAS,EAAE,EAC7C,CAAC4T,EAAYC,CAAa,EAAI7T,WAAS,EAAE,EAGzC,CAAC8T,EAAOC,CAAQ,EAAI/T,EAAA,SAAS,CAAE,CAAA,EAC/B,CAACzD,EAAS6N,CAAU,EAAIpK,WAAS,EAAK,EACtC,CAACxD,EAAO6N,CAAQ,EAAIrK,WAAS,IAAI,EACjC,CAACsK,EAAYC,CAAa,EAAIvK,WAAS,EAAK,EAGlDG,EAAAA,UAAU,IAAM,CACViT,GACSY,GACb,EACC,CAACZ,CAAS,CAAC,EAGd,MAAMY,EAAa,SAAY,CACzB,GAAA,CACF5J,EAAW,EAAI,EACT,MAAA6J,EAAY,MAAMd,IACfY,EAAAE,GAAa,CAAA,CAAE,EACxB5J,EAAS,IAAI,QACNI,EAAK,CACJ,QAAA,MAAM,wBAAyBA,CAAG,EAC1CJ,EAASI,CAAG,CAAA,QACZ,CACAL,EAAW,EAAK,CAClB,CAAA,EAIFjK,EAAAA,UAAU,IAAM,CACR,MAAA+T,EAAsBhJ,GAAU,CAChCkI,GAAalI,EAAM,OAAO,QAAQ,kBAAkB,IAAM,MAC1DA,EAAM,OAAO,QAAQ,oBAAoB,IAAM,MACjDmI,EAAa,EAAK,CACpB,EAGO,gBAAA,iBAAiB,YAAaa,CAAkB,EAClD,IAAM,SAAS,oBAAoB,YAAaA,CAAkB,CAAA,EACxE,CAACd,CAAS,CAAC,EAGdjT,EAAAA,UAAU,IAAM,CACd,GAAIyJ,EAAkB,CACd,MAAAiB,EAAQ,WAAW,IAAM,CAC7BhB,EAAoB,EAAK,GACxB,GAAI,EAEA,MAAA,IAAM,aAAagB,CAAK,CACjC,CAAA,EACC,CAACjB,CAAgB,CAAC,EAErBzJ,EAAAA,UAAU,IAAM,CACd,GAAIqT,EAAgB,CACZ,MAAA3I,EAAQ,WAAW,IAAM,CAC7B4I,EAAkB,EAAK,GACtB,GAAI,EAEA,MAAA,IAAM,aAAa5I,CAAK,CACjC,CAAA,EACC,CAAC2I,CAAc,CAAC,EAGnB,MAAMW,EAAc,IAAM,CACXd,EAAAe,GAAQ,CAACA,CAAI,EAGrBhB,IACHG,EAAkB,IAAI,EACtB9F,EAAmB,aAAa,EAClC,EAII4G,EAAa,IAAM,CACvBhB,EAAa,EAAK,CAAA,EAIdiB,EAAsBC,GAAW,CACnBhB,EAAAgB,IAAWjB,EAAiB,KAAOiB,CAAM,CAAA,EAIvDpY,EAAeC,GACdA,EACEA,EACJ,MAAM,GAAG,EACT,OAAYC,EAAK,CAAC,CAAC,EACnB,KAAK,EAAE,EACP,YACA,EAAA,UAAU,EAAG,CAAC,EANC,IAUdyO,EAAkBC,GAAW,CACjC,MAAMC,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,EAC1ErK,EAAQoK,EAASA,EAAO,WAAW,CAAC,EAAIC,EAAO,OAAS,EAC9D,OAAOA,EAAOrK,CAAK,CAAA,EAIfsK,EAAgB,SAAY,OAChC,GAAKqI,EAED,GAAA,CACF/I,EAAc,EAAI,EAGlB,MAAMY,EAAU,CACd,YAAamI,EAAe,GAC5B,KAAM9F,EACN,QAAS,uBAAuBA,EAAgB,QAAQ,WAAY,KAAK,EAAE,KAAA,EAAO,YAAA,CAAa,GAAA,EAGlF,MAAMjE,EAAQ4B,CAAO,IAGpB0I,EAAAP,EAAe,MAAQA,EAAe,QAAQ,EAC5DzJ,EAAoB,EAAI,EACbwK,IACJnB,WAEFzI,EAAK,CACJ,QAAA,MAAM,qBAAsBA,CAAG,EACvCkJ,IAAgB1W,EAAAwN,EAAI,UAAJ,YAAAxN,EAAa,MAAM,KAAK,KAAM,oBAAoB,EAClEwW,EAAkB,EAAI,CAAA,QACtB,CACAlJ,EAAc,EAAK,CACrB,CAAA,EAGF,cACG8H,GACC,CAAA,SAAA,CAAAtV,EAAA,KAACuV,GAAA,CACC,UAAU,oBACV,QAAS6B,EACT,WAAY,CAAE,MAAO,IAAK,EAC1B,SAAU,CAAE,MAAO,GAAK,EAExB,SAAA,CAACjZ,EAAAA,IAAA4Q,EAAA,CAAQ,KAAM,EAAI,CAAA,EAAE,WAAA,CAAA,CAEvB,EAEA5Q,EAAAA,IAAC+Q,GACE,SACCmH,GAAArW,EAAA,KAACwV,GAAA,CACC,UAAU,kBACV,QAAS,CAAE,QAAS,EAAG,EAAG,GAAI,EAC9B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,KAAM,CAAE,QAAS,EAAG,EAAG,GAAI,EAC3B,WAAY,CAAE,SAAU,EAAI,EAE5B,SAAA,CAAAxV,OAACyV,GACC,CAAA,SAAA,CAAAzV,OAAC0V,GACC,CAAA,SAAA,CAACvX,EAAAA,IAAA4Q,EAAA,CAAQ,KAAM,EAAI,CAAA,EAAE,kBAAA,EAEvB,EACA5Q,EAAAA,IAACwX,IAAY,QAAS2B,EACpB,eAAC3E,GAAI,CAAA,KAAM,GAAI,CACjB,CAAA,CAAA,EACF,EAGCnT,EACErB,EAAA,IAAA8N,GAAA,CAAa,8BAAkB,EAC9BxM,SACDsW,GAAW,CAAA,SAAA,CAAA,8BAETtW,EAAM,SAAWO,EAAAA,KAAC,MAAI,CAAA,SAAA,CAAA,UAAQP,EAAM,QAAQ,MAAM,GAAG,EAAE,CAAC,CAAA,EAAE,CAAA,EAC7D,EACE,CAACsX,GAASA,EAAM,SAAW,EAC7B5Y,EAAAA,IAACW,GAAW,CAAA,SAAA,mBAAgB,EAE5BX,EAAA,IAACyX,GACE,CAAA,SAAAmB,EAAM,IACLS,GAAAxX,EAAA,KAAC6V,GAAA,CAEC,SAAUU,GAAkBA,EAAe,KAAOiB,EAAO,GACzD,QAAS,IAAMD,EAAmBC,CAAM,EAExC,SAAA,CAACrZ,EAAAA,IAAA2X,GAAA,CAAO,QAAS/H,EAAeyJ,EAAO,EAAE,EACtC,SAAAA,EAAO,UACNrZ,EAAAA,IAAC,MAAI,CAAA,IAAKqZ,EAAO,UAAW,IAAKA,EAAO,IAAM,CAAA,EAE9CpY,EAAYoY,EAAO,MAAQA,EAAO,QAAQ,CAE9C,CAAA,SACC3Y,GACC,CAAA,SAAA,CAACV,EAAA,IAAA0N,GAAA,CAAU,SAAO2L,EAAA,MAAQ,eAAe,SACxC5H,GAAS,CAAA,SAAA,CAAA,IAAE4H,EAAO,QAAA,EAAS,CAAA,EAC9B,CAAA,CAAA,EAdKA,EAAO,EAgBf,CAAA,EACH,SAIDhI,GACC,CAAA,SAAA,CAAAxP,EAAA,KAACyP,GAAA,CACC,SAAUgB,IAAoB,cAC9B,QAAS,IAAMC,EAAmB,aAAa,EAE/C,SAAA,CAACvS,EAAA,IAAA,MAAA,CAAI,UAAU,eACb,SAACA,EAAAA,IAAAoD,EAAA,CAAK,KAAK,cAAc,KAAM,GAAI,QAAS,EAAM,CAAA,EACpD,EACApD,EAAAA,IAAC,QAAK,SAAQ,UAAA,CAAA,CAAA,CAAA,CAChB,EACA6B,EAAA,KAACyP,GAAA,CACC,SAAUgB,IAAoB,cAC9B,QAAS,IAAMC,EAAmB,aAAa,EAE/C,SAAA,CAACvS,EAAA,IAAA,MAAA,CAAI,UAAU,eACb,SAACA,EAAAA,IAAAoD,EAAA,CAAK,KAAK,cAAc,KAAM,GAAI,QAAS,EAAM,CAAA,EACpD,EACApD,EAAAA,IAAC,QAAK,SAAQ,UAAA,CAAA,CAAA,CAAA,CAChB,EACA6B,EAAA,KAACyP,GAAA,CACC,SAAUgB,IAAoB,gBAC9B,QAAS,IAAMC,EAAmB,eAAe,EAEjD,SAAA,CAACvS,EAAA,IAAA,MAAA,CAAI,UAAU,eACb,SAACA,EAAAA,IAAAoD,EAAA,CAAK,KAAK,gBAAgB,KAAM,GAAI,QAAS,EAAM,CAAA,EACtD,EACApD,EAAAA,IAAC,QAAK,SAAU,YAAA,CAAA,CAAA,CAAA,CAClB,CAAA,EACF,EAGA6B,EAAA,KAACmQ,GAAA,CACC,QAASjC,EACT,SAAU,CAACqI,GAAkBhJ,EAC7B,WAAY,CAAE,MAAO,IAAK,EAC1B,SAAU,CAAE,MAAO,GAAK,EAEvB,SAAA,CAAAA,EAAa,aAAe,WAC7BpP,EAAAA,IAAC6Q,GAAO,CAAA,KAAM,EAAI,CAAA,CAAA,CAAA,CACpB,CAAA,CAAA,CAAA,EAGN,SAGCE,EACE,CAAA,SAAA,CACCrC,GAAA7M,EAAA,KAACmM,GAAA,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,KAAM,CAAE,QAAS,EAAG,EAAG,EAAG,EAE1B,SAAA,CAAChO,EAAAA,IAAA4Q,EAAA,CAAQ,KAAM,EAAI,CAAA,EAAE,eACR8H,EAAW,GAAA,CAAA,CAC1B,EAGDJ,GACCzW,EAAA,KAACiW,GAAA,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,KAAM,CAAE,QAAS,EAAG,EAAG,EAAG,EAE1B,SAAA,CAAC9X,EAAAA,IAAAwQ,GAAA,CAAc,KAAM,EAAI,CAAA,EACxBgI,CAAA,CAAA,CACH,CAAA,EAEJ,CACF,CAAA,CAAA,CAEJ,EClkBMc,GAAsB3Z,EAAOiE,EAAO,GAAG;AAAA;AAAA,EAIvC2V,GAAoB5Z,EAAOiE,EAAO,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA+BxC4V,GAAkB7Z,EAAOiE,EAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAwBnC0T,GAAc3X,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAOrB4X,GAAa5X,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASpB6X,GAAc7X,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBrBuR,GAAcvR,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA0BrB8Z,GAAY9Z,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAuBnB+Z,GAAa/Z,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAMD8D,GAAAA,EAAM,SAAW,yBAA2B,SAAS;AAAA,sBAC/CA,GAAAA,EAAM,SAAW,yBAA2B,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQlFkU,GAAShY,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAQN8D,GAASA,EAAM,SAAW,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAa7C/C,GAAWf,EAAO;AAAA;AAAA,EAIlB+N,GAAW/N,EAAO;AAAA;AAAA;AAAA;AAAA,EAMlB8R,GAAW9R,EAAO;AAAA;AAAA;AAAA,EAKlBga,GAAeha,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBtBqS,GAAarS,EAAOiE,EAAO,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAyBjCjD,GAAahB,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAOpBiY,GAAajY,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUpBmO,GAAenO,EAAO;AAAA;AAAA;AAAA;AAAA,EAMtBkY,GAAQlY,EAAOiE,EAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAczBgW,GAAeja,EAAOkY,EAAK;AAAA;AAAA;AAAA,EAK3BC,GAAanY,EAAOkY,EAAK;AAAA;AAAA;AAAA,EAMzBgC,GAAmB,CAAC,CAAE,OAAA7B,EAAS,IAAM,CAAC,KAAQ,CAClD,KAAM,CAACE,EAAWC,CAAY,EAAIrT,WAAS,EAAK,EAC1C,CAACgV,EAAcC,CAAe,EAAIjV,WAAS,IAAI,EAC/C,CAACsN,EAAYC,CAAa,EAAIvN,WAAS,EAAE,EACzC,CAACkV,EAAgBC,CAAiB,EAAInV,WAAS,EAAE,EACjD,CAACoV,EAAkBC,CAAmB,EAAIrV,WAAS,EAAK,EACxD,CAACwT,EAAgBC,CAAiB,EAAIzT,WAAS,EAAK,EACpD,CAAC0T,EAAcC,CAAe,EAAI3T,WAAS,EAAE,EAC7C,CAAC4T,EAAYC,CAAa,EAAI7T,WAAS,EAAE,EAG/CG,EAAAA,UAAU,IAAM,CACT+U,GACHC,EAAkB,8FAA+F,CAErH,EAAG,CAAE,CAAA,EAGL,KAAM,CAAE,SAAAhC,EAAU,QAAA5J,CAAQ,EAAI1J,EAAW,EAGnC,CAACyV,EAAWC,CAAY,EAAIvV,EAAA,SAAS,CAAE,CAAA,EACvC,CAACzD,EAAS6N,CAAU,EAAIpK,WAAS,EAAK,EACtC,CAACxD,EAAO6N,CAAQ,EAAIrK,WAAS,IAAI,EACjC,CAACsK,EAAYC,CAAa,EAAIvK,WAAS,EAAK,EAGlDG,EAAAA,UAAU,IAAM,CACd,eAAeqV,GAAY,CACzB,GAAKpC,EAEL,CAAAhJ,EAAW,EAAI,EACfC,EAAS,IAAI,EAET,GAAA,CACI,MAAAyJ,EAAQ,MAAMX,IAChBW,GAAS,MAAM,QAAQA,CAAK,EAC9ByB,EAAazB,CAAK,EAElByB,EAAa,CAAE,CAAA,QAEV9K,EAAK,CACJ,QAAA,MAAM,wBAAyBA,CAAG,EAC1CJ,EAASI,CAAG,CAAA,QACZ,CACAL,EAAW,EAAK,CAClB,EACF,CAEUoL,GACT,EAAA,CAACpC,EAAW9F,EAAY6F,CAAQ,CAAC,EAGpChT,EAAAA,UAAU,IAAM,CACR,MAAA+T,EAAsBhJ,GAAU,CAChCkI,GAAalI,EAAM,OAAO,QAAQ,oBAAoB,IAAM,MAC5DA,EAAM,OAAO,QAAQ,sBAAsB,IAAM,MACnDmI,EAAa,EAAK,CACpB,EAGO,gBAAA,iBAAiB,YAAaa,CAAkB,EAClD,IAAM,SAAS,oBAAoB,YAAaA,CAAkB,CAAA,EACxE,CAACd,CAAS,CAAC,EAGdjT,EAAAA,UAAU,IAAM,CACd,GAAIiV,EAAkB,CACd,MAAAvK,EAAQ,WAAW,IAAM,CAC7BwK,EAAoB,EAAK,GACxB,GAAI,EAEA,MAAA,IAAM,aAAaxK,CAAK,CACjC,CAAA,EACC,CAACuK,CAAgB,CAAC,EAErBjV,EAAAA,UAAU,IAAM,CACd,GAAIqT,EAAgB,CACZ,MAAA3I,EAAQ,WAAW,IAAM,CAC7B4I,EAAkB,EAAK,GACtB,GAAI,EAEA,MAAA,IAAM,aAAa5I,CAAK,CACjC,CAAA,EACC,CAAC2I,CAAc,CAAC,EAGnB,MAAMW,EAAc,IAAM,CACXd,EAAAe,GAAQ,CAACA,CAAI,EAGrBhB,IACH6B,EAAgB,IAAI,EACpB1H,EAAc,EAAE,EACX2H,GACHC,EAAkB,8FAA+F,EAErH,EAIId,EAAa,IAAM,CACvBhB,EAAa,EAAK,CAAA,EAIdoC,EAAsB7J,GAAM,CAClB2B,EAAA3B,EAAE,OAAO,KAAK,CAAA,EAIxB8J,EAAoB1G,GAAS,CACjBiG,EAAAjG,IAASgG,EAAe,KAAOhG,CAAI,CAAA,EAI/C7S,EAAeC,GACdA,EACEA,EACJ,MAAM,GAAG,EACT,OAAYC,EAAK,CAAC,CAAC,EACnB,KAAK,EAAE,EACP,YACA,EAAA,UAAU,EAAG,CAAC,EANC,IAUdyO,EAAkBC,GAAW,CACjC,MAAMC,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,EAC1ErK,EAAQoK,EAASA,EAAO,WAAW,CAAC,EAAIC,EAAO,OAAS,EAC9D,OAAOA,EAAOrK,CAAK,CAAA,EAKfgV,EAAuB,SAAY,CACvC,GAAKX,EAED,GAAA,CACFzK,EAAc,EAAI,EAGlB,MAAMqL,EAAW,CACf,YAAaZ,EAAa,GAC1B,KAAM,aACN,QAASE,GAAkB,2FAAA,EAId,MAAM3L,EAAQqM,CAAQ,IAGrB/B,EAAAmB,EAAa,MAAQA,EAAa,QAAQ,EACxDK,EAAoB,EAAI,EACbhB,IACJnB,WAEFzI,EAAK,CACJ,QAAA,MAAM,SAAUA,CAAG,EACXkJ,EAAAlJ,EAAI,SAAW,sBAAsB,EACrDgJ,EAAkB,EAAI,CAAA,QACtB,CACAlJ,EAAc,EAAK,CACrB,CAAA,EAGF,cACGiK,GACC,CAAA,SAAA,CAAAzX,EAAA,KAAC0X,GAAA,CACC,UAAU,sBACV,QAASN,EACT,WAAY,CAAE,MAAO,IAAK,EAC1B,SAAU,CAAE,MAAO,GAAK,EAExB,SAAA,CAACjZ,EAAAA,IAAA2a,GAAA,CAAW,KAAM,EAAI,CAAA,EAAE,gBAAA,CAAA,CAE1B,EAEA3a,EAAAA,IAAC+Q,GACE,SACCmH,GAAArW,EAAA,KAAC2X,GAAA,CACC,UAAU,oBACV,QAAS,CAAE,QAAS,EAAG,EAAG,GAAI,EAC9B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,KAAM,CAAE,QAAS,EAAG,EAAG,GAAI,EAC3B,WAAY,CAAE,SAAU,EAAI,EAE5B,SAAA,CAAA3X,OAACyV,GACC,CAAA,SAAA,CAAAzV,OAAC0V,GACC,CAAA,SAAA,CAACvX,EAAAA,IAAAqU,GAAA,CAAQ,KAAM,EAAI,CAAA,EAAE,sBAAA,EAEvB,EACArU,EAAAA,IAACwX,IAAY,QAAS2B,EACpB,eAAC3E,GAAI,CAAA,KAAM,GAAI,CACjB,CAAA,CAAA,EACF,SAECtD,GACC,CAAA,SAAA,CAAClR,EAAAA,IAAAuU,GAAA,CAAS,KAAM,EAAI,CAAA,EACpBvU,EAAA,IAAC,QAAA,CACC,KAAK,OACL,YAAY,kBACZ,MAAOoS,EACP,SAAUmI,CAAA,CACZ,CAAA,EACF,EAGClZ,EACErB,EAAA,IAAA8N,GAAA,CAAa,4BAAgB,EAC5BxM,SACDsW,GAAW,CAAA,SAAA,CAAA,4BAETtW,EAAM,SAAWO,EAAAA,KAAC,MAAI,CAAA,SAAA,CAAA,UAAQP,EAAM,QAAQ,MAAM,GAAG,EAAE,CAAC,CAAA,EAAE,CAAA,EAC7D,EACE,CAAC8Y,GAAaA,EAAU,SAAW,EACpCpa,EAAAA,IAAAW,GAAA,CAAW,SAAc,iBAAA,QAEzB8Y,GACE,CAAA,SAAAW,EACE,OAAOtG,GAAQ,SAAA,OAAA1B,IACbrQ,EAAA+R,EAAK,OAAL,YAAA/R,EAAW,cAAc,SAASqQ,EAAW,YAAa,OAC1DpQ,EAAA8R,EAAK,WAAL,YAAA9R,EAAe,cAAc,SAASoQ,EAAW,YAAa,IAC/D,GAAI,EACL,IACC0B,GAAAjS,EAAA,KAAC6X,GAAA,CAEC,SAAUI,GAAgBA,EAAa,KAAOhG,EAAK,GACnD,QAAS,IAAM0G,EAAiB1G,CAAI,EAEpC,SAAA,CAAC9T,EAAAA,IAAA2X,GAAA,CAAO,QAAS/H,EAAekE,EAAK,EAAE,EACpC,SAAAA,EAAK,UACJ9T,EAAAA,IAAC,MAAI,CAAA,IAAK8T,EAAK,UAAW,IAAKA,EAAK,IAAM,CAAA,EAE1C7S,EAAY6S,EAAK,MAAQA,EAAK,QAAQ,CAE1C,CAAA,SACCpT,GACC,CAAA,SAAA,CAACV,EAAA,IAAA0N,GAAA,CAAU,SAAKoG,EAAA,MAAQ,eAAe,SACtCrC,GAAS,CAAA,SAAA,CAAA,IAAEqC,EAAK,QAAA,EAAS,CAAA,EAC5B,CAAA,CAAA,EAdKA,EAAK,EAgBb,CAAA,EAEL,EAIF9T,EAAA,IAAC2Z,GAAA,CACC,YAAY,mCACZ,MAAOK,EACP,SAAWtJ,GAAMuJ,EAAkBvJ,EAAE,OAAO,KAAK,EACjD,KAAM,CAAA,CACR,QAGC,MAAI,CAAA,MAAO,CAAE,QAAS,OAAQ,eAAgB,SAAU,aAAc,MACrE,EAAA,SAAA1Q,MAACoD,GAAK,KAAK,aAAa,KAAM,GAAI,QAAS,EAAM,CAAA,EACnD,EAGAvB,EAAA,KAACmQ,GAAA,CACC,QAASyI,EACT,SAAU,CAACX,GAAgB1K,EAC3B,WAAY,CAAE,MAAO,IAAK,EAC1B,SAAU,CAAE,MAAO,GAAK,EAEvB,SAAA,CAAAA,EAAa,aAAe,mBAC7BpP,EAAAA,IAAC6Q,GAAO,CAAA,KAAM,EAAI,CAAA,CAAA,CAAA,CACpB,CAAA,CAAA,CAAA,EAGN,SAGCE,EACE,CAAA,SAAA,CACCmJ,GAAArY,EAAA,KAAC+X,GAAA,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,KAAM,CAAE,QAAS,EAAG,EAAG,EAAG,EAE1B,SAAA,CAAC5Z,EAAAA,IAAA2a,GAAA,CAAW,KAAM,EAAI,CAAA,EAAE,uBACHjC,EAAW,GAAA,CAAA,CAClC,EAGDJ,GACCzW,EAAA,KAACiW,GAAA,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,KAAM,CAAE,QAAS,EAAG,EAAG,EAAG,EAE1B,SAAA,CAAC9X,EAAAA,IAAAwQ,GAAA,CAAc,KAAM,EAAI,CAAA,EACxBgI,CAAA,CAAA,CACH,CAAA,EAEJ,CACF,CAAA,CAAA,CAEJ,EC5jBMoC,GAAqBjb,EAAO;AAAA;AAAA;AAAA,EAK5Bkb,GAAkBlb,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYzBmb,GAAOnb,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASdob,GAAgBpb,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUvBe,GAAWf,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWlBgY,GAAShY,EAAOiE,EAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAc1B6N,GAAW9R,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAclBqb,GAAerb,EAAOiE,EAAO,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAenCqX,GAAmBtb,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAc1Bub,GAAcvb,EAAOiE,EAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqC/BuX,GAAoBxb,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAW3Byb,GAAezb,EAAOiE,EAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAehCyX,GAAmB1b,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAW1B2b,GAAe3b,EAAO;AAAA;AAAA;AAAA;AAAA,EAMtB4b,GAAe5b,EAAOiE,EAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAsB/B4X,GAAc7b,EAAOiE,EAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmC/B6X,GAAoB9b,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAY3B+b,GAAW,CACf,OAAQ,CAAE,QAAS,EAAG,EAAG,EAAG,EAC5B,QAAS,CACP,QAAS,EACT,EAAG,EACH,WAAY,CAAE,SAAU,GAAK,KAAM,CAAC,IAAM,EAAG,IAAM,CAAC,CAAE,CACxD,CACF,EAEMC,GAAmB,CACvB,OAAQ,CAAE,QAAS,CAAE,EACrB,QAAS,CACP,QAAS,EACT,WAAY,CACV,gBAAiB,EACnB,CACF,CACF,EAEMC,GAAY,IAAM,CACtB,KAAM,CAAE,YAAAC,EAAa,OAAAC,CAAO,EAAIC,GAAQ,EAClC,CAAChX,EAAWC,CAAY,EAAIF,WAAS,EAAI,EACzCkX,EAAWC,KAEjBhX,EAAAA,UAAU,IAAM,CAEd,MAAMiX,EAAkB,aAAa,QAAQ,qBAAqB,IAAM,OAEpEA,IACF,QAAQ,IAAI,6CAA6C,EAEzD,aAAa,WAAW,qBAAqB,GAIzC,MAAAvM,EAAQ,WAAW,IAAM,CAC7B3K,EAAa,EAAK,EAEdkX,GACF,QAAQ,IAAI,6CAA6C,GAE1D,GAAI,EAEA,MAAA,IAAM,aAAavM,CAAK,CACjC,EAAG,CAAE,CAAA,EAEL,MAAMwM,EAAe,SAAY,CAC/B,MAAML,EAAO,EACbE,EAAS,QAAQ,CAAA,EAGbI,EAAqBC,GAAS,CAClCL,EAASK,CAAI,CAAA,EAGTpb,EAAeC,GACdA,EACEA,EACJ,MAAM,GAAG,EACT,OAAYC,EAAK,CAAC,CAAC,EACnB,KAAK,EAAE,EACP,YACA,EAAA,UAAU,EAAG,CAAC,EANC,IASpB,OAAI4D,EACK/E,EAAA,IAACsc,GAAc,CAAA,KAAK,sBAAuB,CAAA,SAIjD1B,GACC,CAAA,SAAA,CAAA/Y,OAACgZ,GACC,CAAA,SAAA,CAAAhZ,OAACiZ,GACC,CAAA,SAAA,CAAA9a,EAAA,IAACoD,EAAK,CAAA,KAAK,UAAU,KAAM,GAAI,EAAE,UAAA,EAEnC,SACC2X,GACC,CAAA,SAAA,CAAA/a,EAAA,IAAC+X,IAAe,OAAQ,IAAM,QAAQ,IAAI,8BAA8B,EAAG,QAC1E8B,GAAiB,CAAA,OAAQ,IAAM,QAAQ,IAAI,mDAAmD,EAAG,SACjGnZ,GACC,CAAA,SAAA,CAAAV,EAAA,IAAC2X,GAAA,CACC,QAAS,CAAE,MAAO,CAAE,EACpB,QAAS,CAAE,MAAO,CAAE,EACpB,WAAY,CAAE,KAAM,SAAU,OAAQ,EAAI,EAC1C,WAAY,CAAE,MAAO,GAAI,EAExB,SAAA1W,EAAY4a,GAAA,YAAAA,EAAa,IAAI,CAAA,CAChC,QACCpK,GAAS,CAAA,UAAU,YAAa,UAAAoK,GAAA,YAAAA,EAAa,OAAQ,QAAQ,EAC9D7b,EAAA,IAACgb,GAAA,CACC,QAASmB,EACT,WAAY,CAAE,MAAO,IAAK,EAC1B,SAAU,CAAE,MAAO,GAAK,EACzB,SAAA,QAAA,CAED,CAAA,EACF,CAAA,EACF,CAAA,EACF,SAEClB,GACC,CAAA,SAAA,CAAApZ,EAAA,KAACqZ,GAAA,CACC,QAAQ,SACR,QAAQ,UACR,SAAUQ,GAEV,SAAA,CAAA1b,EAAAA,IAACmb,IACC,SAACtZ,OAAA,MAAA,CAAI,QAAQ,cAAc,KAAK,OAC9B,SAAA,CAAC7B,EAAAA,IAAA,SAAA,CAAO,GAAG,MAAM,GAAG,KAAK,EAAE,MAAM,KAAK,OAAQ,CAAA,EAC9CA,EAAAA,IAAC,UAAO,GAAG,KAAK,GAAG,MAAM,EAAE,MAAM,KAAK,OAAQ,CAAA,CAAA,CAAA,CAChD,CACF,CAAA,SAEC,KAAG,CAAA,SAAA,CAAA,aAAU6b,GAAA,YAAAA,EAAa,OAAQ,SAAS,GAAA,EAAC,EAC7C7b,EAAAA,IAAC,KAAE,SAEH,gGAAA,CAAA,CAAA,CAAA,CACF,QAGCsE,GAAe,EAAA,EAGhBzC,EAAA,KAAC0Z,GAAA,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,MAAO,EAAI,EAEzB,SAAA,CAAAvb,EAAA,IAACoD,EAAK,CAAA,KAAK,QAAQ,KAAM,GAAI,EAAE,sBAAA,CAAA,CAEjC,SAECiY,GACC,CAAA,SAAA,CAAAxZ,OAACyZ,GACC,CAAA,SAAA,CAAAtb,EAAA,IAAC4D,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,MAAO,EAAI,EAEzB,eAACuK,GAAkB,EAAA,CAAA,CACrB,EAEAnO,EAAA,IAAC4D,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,MAAO,EAAI,EAEzB,eAACxC,GAAgB,EAAA,CAAA,CACnB,CAAA,EACF,SAECka,GACC,CAAA,SAAA,CAAAtb,EAAA,IAAC4D,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,MAAO,EAAI,EAEzB,eAAC+R,GAAmB,EAAA,CAAA,CACtB,EAEA3V,EAAA,IAAC4D,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,MAAO,EAAI,EAEzB,eAACqO,GAAmB,EAAA,CAAA,CACtB,CAAA,EACF,CAAA,EACF,EAGApQ,EAAA,KAAC0Z,GAAA,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,MAAO,EAAI,EAEzB,SAAA,CAAAvb,EAAA,IAACoD,EAAK,CAAA,KAAK,cAAc,KAAM,GAAI,EAAE,gBAAA,CAAA,CAEvC,EAEAvB,EAAA,KAACuZ,GAAA,CACC,SAAUO,GACV,QAAQ,SACR,QAAQ,UAER,SAAA,CAAA9Z,EAAA,KAAC2Z,GAAA,CACC,QAAS,IAAMY,EAAkB,eAAe,EAChD,SAAUV,GACV,WAAY,CAAE,MAAO,IAAK,EAC1B,SAAU,CAAE,MAAO,GAAK,EAExB,SAAA,CAAA1b,MAACyb,GACC,CAAA,SAAAzb,EAAAA,IAAC,MAAI,CAAA,QAAQ,cAAc,KAAK,OAC9B,SAACA,EAAA,IAAA,OAAA,CAAK,EAAE,yDAAyD,KAAK,sBAAA,CAAuB,CAC/F,CAAA,EACF,SAEC,KACC,CAAA,SAAA,CAAAA,EAAA,IAACoD,EAAK,CAAA,KAAK,cAAc,KAAM,GAAI,EAAE,cAAA,EAEvC,EACApD,EAAAA,IAAC,KAAE,SAEH,qFAAA,CAAA,CAAA,CAAA,CACF,EAEA6B,EAAA,KAAC2Z,GAAA,CACC,QAAS,IAAMY,EAAkB,aAAa,EAC9C,SAAUV,GACV,WAAY,CAAE,MAAO,IAAK,EAC1B,SAAU,CAAE,MAAO,GAAK,EAExB,SAAA,CAAA1b,MAACyb,GACC,CAAA,SAAAzb,EAAAA,IAAC,MAAI,CAAA,QAAQ,cAAc,KAAK,OAC9B,SAACA,EAAA,IAAA,OAAA,CAAK,EAAE,yDAAyD,KAAK,SAAA,CAAU,CAClF,CAAA,EACF,SAEC,KACC,CAAA,SAAA,CAAAA,EAAA,IAACoD,EAAK,CAAA,KAAK,gBAAgB,KAAM,GAAI,EAAE,YAAA,EAEzC,EACApD,EAAAA,IAAC,KAAE,SAEH,iFAAA,CAAA,CAAA,CAAA,CACF,EAEA6B,EAAA,KAAC2Z,GAAA,CACC,QAAS,IAAMY,EAAkB,UAAU,EAC3C,SAAUV,GACV,WAAY,CAAE,MAAO,IAAK,EAC1B,SAAU,CAAE,MAAO,GAAK,EAExB,SAAA,CAAA1b,MAACyb,GACC,CAAA,SAAAzb,EAAAA,IAAC,MAAI,CAAA,QAAQ,cAAc,KAAK,OAC9B,SAACA,EAAA,IAAA,OAAA,CAAK,EAAE,yDAAyD,KAAK,SAAA,CAAU,CAClF,CAAA,EACF,SAEC,KACC,CAAA,SAAA,CAAAA,EAAA,IAACoD,EAAK,CAAA,KAAK,UAAU,KAAM,GAAI,EAAE,SAAA,EAEnC,EACApD,EAAAA,IAAC,KAAE,SAEH,oFAAA,CAAA,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,CACF,CAAA,CAAA,CAEJ","x_google_ignoreList":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47]}