{"version":3,"file":"Login-883f3a86.js","sources":["../../src/pages/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useAuth } from '../context/AuthContext';\nimport LoadingScreen from '../components/common/LoadingScreen';\n\n// Styled components\nconst LoginContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  min-height: 100vh;\n  padding: 1rem;\n  background-color: var(--gray-100);\n`;\n\nconst LoginCard = styled.div`\n  background-color: white;\n  border-radius: var(--border-radius-lg);\n  box-shadow: var(--shadow-md);\n  padding: 2rem;\n  max-width: 450px;\n  width: 100%;\n  margin: 0 auto;\n`;\n\nconst LoginLogo = styled.div`\n  text-align: center;\n  margin-bottom: 2rem;\n  \n  h1 {\n    font-size: 2rem;\n    color: var(--primary-color);\n    margin-bottom: 0.5rem;\n  }\n  \n  p {\n    color: var(--gray-600);\n  }\n`;\n\nconst LoginForm = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: 1.5rem;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: var(--gray-800);\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 0.75rem 1rem;\n  border: 1px solid var(--gray-300);\n  border-radius: var(--border-radius-md);\n  transition: var(--transition-base);\n  \n  &:focus {\n    border-color: var(--primary-color);\n    outline: 0;\n    box-shadow: 0 0 0 0.2rem rgba(0, 102, 255, 0.25);\n  }\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  padding: 0.75rem 1rem;\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  border-radius: var(--border-radius-md);\n  font-weight: 500;\n  cursor: pointer;\n  transition: var(--transition-base);\n  \n  &:hover {\n    background-color: var(--primary-dark);\n  }\n  \n  &:disabled {\n    background-color: var(--gray-400);\n    cursor: not-allowed;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  background-color: var(--danger-color);\n  color: white;\n  padding: 0.75rem 1rem;\n  border-radius: var(--border-radius-md);\n  margin-bottom: 1.5rem;\n`;\n\nconst LoginFooter = styled.div`\n  text-align: center;\n  margin-top: 1.5rem;\n  \n  p {\n    color: var(--gray-600);\n    margin-bottom: 0.5rem;\n  }\n  \n  a {\n    color: var(--primary-color);\n    text-decoration: none;\n    \n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst OrDivider = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 1.5rem 0;\n  \n  &::before, &::after {\n    content: '';\n    flex: 1;\n    border-bottom: 1px solid var(--gray-300);\n  }\n  \n  span {\n    padding: 0 0.75rem;\n    color: var(--gray-600);\n  }\n`;\n\nconst AnonymousButton = styled.button`\n  width: 100%;\n  padding: 0.75rem 1rem;\n  background-color: var(--gray-200);\n  color: var(--gray-800);\n  border: 1px solid var(--gray-300);\n  border-radius: var(--border-radius-md);\n  font-weight: 500;\n  cursor: pointer;\n  transition: var(--transition-base);\n  margin-top: 1rem;\n  \n  &:hover {\n    background-color: var(--gray-300);\n  }\n`;\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [nickname, setNickname] = useState('');\n  const [showAnonymousForm, setShowAnonymousForm] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [formError, setFormError] = useState('');\n  \n  const { login, anonymousLogin, loading } = useAuth();\n  const navigate = useNavigate();\n  \n  const handleLogin = async (e) => {\n    e.preventDefault();\n    \n    if (!email || !password) {\n      setFormError('Please enter both email and password');\n      return;\n    }\n    \n    setIsSubmitting(true);\n    setFormError('');\n    \n    try {\n      await login(email, password);\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Login error:', error);\n      setFormError(error.message || 'Invalid email or password');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  const handleAnonymousLogin = async (e) => {\n    e.preventDefault();\n    \n    if (!nickname) {\n      setFormError('Please enter a nickname');\n      return;\n    }\n    \n    setIsSubmitting(true);\n    setFormError('');\n    \n    try {\n      await anonymousLogin(nickname);\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Anonymous login error:', error);\n      setFormError(error.message || 'Failed to login anonymously');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  if (loading) {\n    return <LoadingScreen text=\"Checking authentication...\" />;\n  }\n  \n  return (\n    <LoginContainer>\n      <LoginCard>\n        <LoginLogo>\n          <h1>HugMeNow</h1>\n          <p>Your emotional wellness companion</p>\n        </LoginLogo>\n        \n        {formError && <ErrorMessage>{formError}</ErrorMessage>}\n        \n        {showAnonymousForm ? (\n          <LoginForm onSubmit={handleAnonymousLogin}>\n            <FormGroup>\n              <Label htmlFor=\"nickname\">Nickname</Label>\n              <Input\n                type=\"text\"\n                id=\"nickname\"\n                value={nickname}\n                onChange={(e) => setNickname(e.target.value)}\n                placeholder=\"Enter your nickname\"\n                required\n              />\n            </FormGroup>\n            \n            <Button type=\"submit\" disabled={isSubmitting}>\n              {isSubmitting ? 'Processing...' : 'Continue Anonymously'}\n            </Button>\n            \n            <LoginFooter>\n              <p>\n                <a href=\"#\" onClick={() => setShowAnonymousForm(false)}>\n                  Back to login\n                </a>\n              </p>\n            </LoginFooter>\n          </LoginForm>\n        ) : (\n          <>\n            <LoginForm onSubmit={handleLogin}>\n              <FormGroup>\n                <Label htmlFor=\"email\">Email</Label>\n                <Input\n                  type=\"email\"\n                  id=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  placeholder=\"Enter your email\"\n                  required\n                />\n              </FormGroup>\n              \n              <FormGroup>\n                <Label htmlFor=\"password\">Password</Label>\n                <Input\n                  type=\"password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  placeholder=\"Enter your password\"\n                  required\n                />\n              </FormGroup>\n              \n              <Button type=\"submit\" disabled={isSubmitting}>\n                {isSubmitting ? 'Signing in...' : 'Sign In'}\n              </Button>\n            </LoginForm>\n            \n            <OrDivider>\n              <span>or</span>\n            </OrDivider>\n            \n            <AnonymousButton \n              type=\"button\" \n              onClick={() => setShowAnonymousForm(true)}\n            >\n              Continue Anonymously\n            </AnonymousButton>\n            \n            <LoginFooter>\n              <p>\n                Don't have an account?{' '}\n                <Link to=\"/register\">Sign Up</Link>\n              </p>\n            </LoginFooter>\n          </>\n        )}\n      </LoginCard>\n    </LoginContainer>\n  );\n};\n\nexport default Login;"],"names":["LoginContainer","styled","LoginCard","LoginLogo","LoginForm","FormGroup","Label","Input","Button","ErrorMessage","LoginFooter","OrDivider","AnonymousButton","Login","email","setEmail","useState","password","setPassword","nickname","setNickname","showAnonymousForm","setShowAnonymousForm","isSubmitting","setIsSubmitting","formError","setFormError","login","anonymousLogin","loading","useAuth","navigate","useNavigate","handleLogin","error","handleAnonymousLogin","jsx","LoadingScreen","jsxs","Fragment","Link"],"mappings":"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"}