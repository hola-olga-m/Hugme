{"version":3,"file":"Profile-62af7c27.js","sources":["../../src/pages/Profile.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useAuth } from '../context/AuthContext';\nimport LoadingScreen from '../components/common/LoadingScreen';\n\n// Styled components\nconst ProfileContainer = styled.div`\n  min-height: 100vh;\n  background-color: var(--gray-100);\n`;\n\nconst ProfileHeader = styled.header`\n  background-color: white;\n  padding: 1rem;\n  box-shadow: var(--shadow-sm);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Logo = styled.div`\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: var(--primary-color);\n  cursor: pointer;\n`;\n\nconst BackButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--gray-600);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  \n  &:hover {\n    color: var(--primary-color);\n  }\n  \n  &::before {\n    content: '←';\n    margin-right: 0.5rem;\n    font-size: 1.2rem;\n  }\n`;\n\nconst ProfileContent = styled.main`\n  padding: 2rem;\n  max-width: 800px;\n  margin: 0 auto;\n`;\n\nconst ProfileCard = styled.div`\n  background-color: white;\n  border-radius: var(--border-radius-lg);\n  padding: 2rem;\n  box-shadow: var(--shadow-md);\n  margin-bottom: 2rem;\n`;\n\nconst ProfileTitle = styled.h1`\n  color: var(--gray-800);\n  margin-bottom: 2rem;\n  padding-bottom: 1rem;\n  border-bottom: 1px solid var(--gray-200);\n`;\n\nconst ProfileForm = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: 1.5rem;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: var(--gray-800);\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 0.75rem 1rem;\n  border: 1px solid var(--gray-300);\n  border-radius: var(--border-radius-md);\n  transition: var(--transition-base);\n  \n  &:focus {\n    border-color: var(--primary-color);\n    outline: 0;\n    box-shadow: 0 0 0 0.2rem rgba(0, 102, 255, 0.25);\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 1rem;\n  \n  @media (max-width: 576px) {\n    flex-direction: column;\n    gap: 1rem;\n  }\n`;\n\nconst Button = styled.button`\n  padding: 0.75rem 1.5rem;\n  border-radius: var(--border-radius-md);\n  font-weight: 500;\n  cursor: pointer;\n  transition: var(--transition-base);\n  \n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n\nconst SaveButton = styled(Button)`\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  \n  &:hover:not(:disabled) {\n    background-color: var(--primary-dark);\n  }\n`;\n\nconst DeleteButton = styled(Button)`\n  background-color: white;\n  color: var(--danger-color);\n  border: 1px solid var(--danger-color);\n  \n  &:hover:not(:disabled) {\n    background-color: var(--danger-color);\n    color: white;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  background-color: var(--danger-color);\n  color: white;\n  padding: 0.75rem 1rem;\n  border-radius: var(--border-radius-md);\n  margin-bottom: 1.5rem;\n`;\n\nconst SuccessMessage = styled.div`\n  background-color: var(--success-color);\n  color: white;\n  padding: 0.75rem 1rem;\n  border-radius: var(--border-radius-md);\n  margin-bottom: 1.5rem;\n`;\n\nconst DeleteAccountModal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n`;\n\nconst ModalContent = styled.div`\n  background-color: white;\n  border-radius: var(--border-radius-lg);\n  padding: 2rem;\n  box-shadow: var(--shadow-lg);\n  max-width: 500px;\n  width: 90%;\n  \n  h2 {\n    color: var(--danger-color);\n    margin-bottom: 1rem;\n  }\n  \n  p {\n    margin-bottom: 1.5rem;\n  }\n`;\n\nconst ModalButtons = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 1rem;\n`;\n\nconst CancelButton = styled(Button)`\n  background-color: white;\n  color: var(--gray-700);\n  border: 1px solid var(--gray-300);\n  \n  &:hover {\n    background-color: var(--gray-100);\n  }\n`;\n\nconst ConfirmDeleteButton = styled(Button)`\n  background-color: var(--danger-color);\n  color: white;\n  border: none;\n  \n  &:hover {\n    background-color: var(--danger-dark);\n  }\n`;\n\nconst Profile = () => {\n  const { currentUser, updateProfile, logout, loading } = useAuth();\n  const navigate = useNavigate();\n  \n  const [formData, setFormData] = useState({\n    name: currentUser?.name || '',\n    password: '',\n    confirmPassword: '',\n    avatarUrl: currentUser?.avatarUrl || '',\n  });\n  \n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Validate password match if attempting to change password\n    if (formData.password && formData.password !== formData.confirmPassword) {\n      setErrorMessage('Passwords do not match');\n      return;\n    }\n    \n    setIsSubmitting(true);\n    setErrorMessage('');\n    setSuccessMessage('');\n    \n    try {\n      // Only include password if it was provided\n      const updateData = {\n        name: formData.name,\n        ...(formData.password ? { password: formData.password } : {}),\n        ...(formData.avatarUrl ? { avatarUrl: formData.avatarUrl } : {}),\n      };\n      \n      await updateProfile(updateData);\n      setSuccessMessage('Profile updated successfully');\n    } catch (error) {\n      console.error('Update error:', error);\n      setErrorMessage(error.message || 'Failed to update profile');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  const handleDeleteAccount = async () => {\n    setIsSubmitting(true);\n    setErrorMessage('');\n    \n    try {\n      // For this example, we'll just log out since delete functionality\n      // would need to be implemented in the backend\n      await logout();\n      navigate('/login');\n    } catch (error) {\n      console.error('Delete account error:', error);\n      setErrorMessage(error.message || 'Failed to delete account');\n      setShowDeleteModal(false);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  const navigateToDashboard = () => {\n    navigate('/dashboard');\n  };\n  \n  if (loading) {\n    return <LoadingScreen text=\"Loading profile...\" />;\n  }\n  \n  return (\n    <ProfileContainer>\n      <ProfileHeader>\n        <Logo onClick={navigateToDashboard}>HugMeNow</Logo>\n        <BackButton onClick={navigateToDashboard}>Back to Dashboard</BackButton>\n      </ProfileHeader>\n      \n      <ProfileContent>\n        <ProfileCard>\n          <ProfileTitle>Your Profile</ProfileTitle>\n          \n          {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n          {successMessage && <SuccessMessage>{successMessage}</SuccessMessage>}\n          \n          <ProfileForm onSubmit={handleSubmit}>\n            <FormGroup>\n              <Label htmlFor=\"name\">Full Name</Label>\n              <Input\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                value={formData.name}\n                onChange={handleChange}\n                placeholder=\"Enter your full name\"\n                required\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <Label htmlFor=\"avatarUrl\">Avatar URL (optional)</Label>\n              <Input\n                type=\"text\"\n                id=\"avatarUrl\"\n                name=\"avatarUrl\"\n                value={formData.avatarUrl}\n                onChange={handleChange}\n                placeholder=\"Enter URL for your avatar image\"\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <Label htmlFor=\"password\">New Password (leave blank to keep current)</Label>\n              <Input\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                value={formData.password}\n                onChange={handleChange}\n                placeholder=\"Enter new password\"\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <Label htmlFor=\"confirmPassword\">Confirm New Password</Label>\n              <Input\n                type=\"password\"\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                value={formData.confirmPassword}\n                onChange={handleChange}\n                placeholder=\"Confirm new password\"\n              />\n            </FormGroup>\n            \n            <ButtonGroup>\n              <DeleteButton \n                type=\"button\" \n                onClick={() => setShowDeleteModal(true)}\n                disabled={isSubmitting}\n              >\n                Delete Account\n              </DeleteButton>\n              \n              <SaveButton \n                type=\"submit\"\n                disabled={isSubmitting}\n              >\n                {isSubmitting ? 'Saving...' : 'Save Changes'}\n              </SaveButton>\n            </ButtonGroup>\n          </ProfileForm>\n        </ProfileCard>\n      </ProfileContent>\n      \n      {showDeleteModal && (\n        <DeleteAccountModal>\n          <ModalContent>\n            <h2>Delete Account</h2>\n            <p>\n              Are you sure you want to delete your account? This action cannot be undone\n              and all your data will be permanently lost.\n            </p>\n            <ModalButtons>\n              <CancelButton \n                type=\"button\" \n                onClick={() => setShowDeleteModal(false)}\n                disabled={isSubmitting}\n              >\n                Cancel\n              </CancelButton>\n              <ConfirmDeleteButton \n                type=\"button\" \n                onClick={handleDeleteAccount}\n                disabled={isSubmitting}\n              >\n                {isSubmitting ? 'Processing...' : 'Delete Account'}\n              </ConfirmDeleteButton>\n            </ModalButtons>\n          </ModalContent>\n        </DeleteAccountModal>\n      )}\n    </ProfileContainer>\n  );\n};\n\nexport default Profile;"],"names":["ProfileContainer","styled","ProfileHeader","Logo","BackButton","ProfileContent","ProfileCard","ProfileTitle","ProfileForm","FormGroup","Label","Input","ButtonGroup","Button","SaveButton","DeleteButton","ErrorMessage","SuccessMessage","DeleteAccountModal","ModalContent","ModalButtons","CancelButton","ConfirmDeleteButton","Profile","currentUser","updateProfile","logout","loading","useAuth","navigate","useNavigate","formData","setFormData","useState","isSubmitting","setIsSubmitting","showDeleteModal","setShowDeleteModal","errorMessage","setErrorMessage","successMessage","setSuccessMessage","handleChange","e","name","value","handleSubmit","updateData","error","handleDeleteAccount","navigateToDashboard","jsx","LoadingScreen","jsxs"],"mappings":"0EAOA,MAAMA,EAAmBC,EAAO;AAAA;AAAA;AAAA,EAK1BC,EAAgBD,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASvBE,EAAOF,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAOdG,EAAaH,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmBpBI,EAAiBJ,EAAO;AAAA;AAAA;AAAA;AAAA,EAMxBK,EAAcL,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQrBM,EAAeN,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAOtBO,EAAcP,EAAO;AAAA;AAAA;AAAA,EAKrBQ,EAAYR,EAAO;AAAA;AAAA,EAInBS,EAAQT,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAOfU,EAAQV,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcfW,EAAcX,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWrBY,EAASZ,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAahBa,EAAab,EAAOY,CAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAU1BE,EAAed,EAAOY,CAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAW5BG,EAAef,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQtBgB,EAAiBhB,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQxBiB,EAAqBjB,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAa5BkB,EAAelB,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBtBmB,EAAenB,EAAO;AAAA;AAAA;AAAA;AAAA,EAMtBoB,EAAepB,EAAOY,CAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAU5BS,EAAsBrB,EAAOY,CAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUnCU,EAAU,IAAM,CACpB,KAAM,CAAE,YAAAC,EAAa,cAAAC,EAAe,OAAAC,EAAQ,QAAAC,CAAA,EAAYC,IAClDC,EAAWC,IAEX,CAACC,EAAUC,CAAW,EAAIC,WAAS,CACvC,MAAMT,GAAA,YAAAA,EAAa,OAAQ,GAC3B,SAAU,GACV,gBAAiB,GACjB,WAAWA,GAAA,YAAAA,EAAa,YAAa,EAAA,CACtC,EAEK,CAACU,EAAcC,CAAe,EAAIF,WAAS,EAAK,EAChD,CAACG,EAAiBC,CAAkB,EAAIJ,WAAS,EAAK,EACtD,CAACK,EAAcC,CAAe,EAAIN,WAAS,EAAE,EAC7C,CAACO,EAAgBC,CAAiB,EAAIR,WAAS,EAAE,EAEjDS,EAAgBC,GAAM,CAC1B,KAAM,CAAE,KAAAC,EAAM,MAAAC,GAAUF,EAAE,OACdX,EAAA,CACV,GAAGD,EACH,CAACa,CAAI,EAAGC,CAAA,CACT,CAAA,EAGGC,EAAe,MAAOH,GAAM,CAIhC,GAHAA,EAAE,eAAe,EAGbZ,EAAS,UAAYA,EAAS,WAAaA,EAAS,gBAAiB,CACvEQ,EAAgB,wBAAwB,EACxC,MACF,CAEAJ,EAAgB,EAAI,EACpBI,EAAgB,EAAE,EAClBE,EAAkB,EAAE,EAEhB,GAAA,CAEF,MAAMM,EAAa,CACjB,KAAMhB,EAAS,KACf,GAAIA,EAAS,SAAW,CAAE,SAAUA,EAAS,QAAA,EAAa,CAAC,EAC3D,GAAIA,EAAS,UAAY,CAAE,UAAWA,EAAS,SAAA,EAAc,CAAC,CAAA,EAGhE,MAAMN,EAAcsB,CAAU,EAC9BN,EAAkB,8BAA8B,QACzCO,EAAO,CACN,QAAA,MAAM,gBAAiBA,CAAK,EACpBT,EAAAS,EAAM,SAAW,0BAA0B,CAAA,QAC3D,CACAb,EAAgB,EAAK,CACvB,CAAA,EAGIc,EAAsB,SAAY,CACtCd,EAAgB,EAAI,EACpBI,EAAgB,EAAE,EAEd,GAAA,CAGF,MAAMb,EAAO,EACbG,EAAS,QAAQ,QACVmB,EAAO,CACN,QAAA,MAAM,wBAAyBA,CAAK,EAC5BT,EAAAS,EAAM,SAAW,0BAA0B,EAC3DX,EAAmB,EAAK,CAAA,QACxB,CACAF,EAAgB,EAAK,CACvB,CAAA,EAGIe,EAAsB,IAAM,CAChCrB,EAAS,YAAY,CAAA,EAGvB,OAAIF,EACKwB,EAAA,IAACC,EAAc,CAAA,KAAK,oBAAqB,CAAA,SAI/CpD,EACC,CAAA,SAAA,CAAAqD,OAACnD,EACC,CAAA,SAAA,CAACiD,EAAA,IAAAhD,EAAA,CAAK,QAAS+C,EAAqB,SAAQ,WAAA,EAC3CC,EAAA,IAAA/C,EAAA,CAAW,QAAS8C,EAAqB,SAAiB,oBAAA,CAAA,EAC7D,EAEAC,EAAA,IAAC9C,EACC,CAAA,SAAAgD,EAAAA,KAAC/C,EACC,CAAA,SAAA,CAAA6C,EAAAA,IAAC5C,GAAa,SAAY,cAAA,CAAA,EAEzB+B,GAAiBa,EAAAA,IAAAnC,EAAA,CAAc,SAAasB,CAAA,CAAA,EAC5CE,GAAmBW,EAAAA,IAAAlC,EAAA,CAAgB,SAAeuB,CAAA,CAAA,EAEnDa,EAAAA,KAAC7C,EAAY,CAAA,SAAUsC,EACrB,SAAA,CAAAO,OAAC5C,EACC,CAAA,SAAA,CAAC0C,EAAA,IAAAzC,EAAA,CAAM,QAAQ,OAAO,SAAS,YAAA,EAC/ByC,EAAA,IAACxC,EAAA,CACC,KAAK,OACL,GAAG,OACH,KAAK,OACL,MAAOoB,EAAS,KAChB,SAAUW,EACV,YAAY,uBACZ,SAAQ,EAAA,CACV,CAAA,EACF,SAECjC,EACC,CAAA,SAAA,CAAC0C,EAAA,IAAAzC,EAAA,CAAM,QAAQ,YAAY,SAAqB,wBAAA,EAChDyC,EAAA,IAACxC,EAAA,CACC,KAAK,OACL,GAAG,YACH,KAAK,YACL,MAAOoB,EAAS,UAChB,SAAUW,EACV,YAAY,iCAAA,CACd,CAAA,EACF,SAECjC,EACC,CAAA,SAAA,CAAC0C,EAAA,IAAAzC,EAAA,CAAM,QAAQ,WAAW,SAA0C,6CAAA,EACpEyC,EAAA,IAACxC,EAAA,CACC,KAAK,WACL,GAAG,WACH,KAAK,WACL,MAAOoB,EAAS,SAChB,SAAUW,EACV,YAAY,oBAAA,CACd,CAAA,EACF,SAECjC,EACC,CAAA,SAAA,CAAC0C,EAAA,IAAAzC,EAAA,CAAM,QAAQ,kBAAkB,SAAoB,uBAAA,EACrDyC,EAAA,IAACxC,EAAA,CACC,KAAK,WACL,GAAG,kBACH,KAAK,kBACL,MAAOoB,EAAS,gBAChB,SAAUW,EACV,YAAY,sBAAA,CACd,CAAA,EACF,SAEC9B,EACC,CAAA,SAAA,CAAAuC,EAAA,IAACpC,EAAA,CACC,KAAK,SACL,QAAS,IAAMsB,EAAmB,EAAI,EACtC,SAAUH,EACX,SAAA,gBAAA,CAED,EAEAiB,EAAA,IAACrC,EAAA,CACC,KAAK,SACL,SAAUoB,EAET,WAAe,YAAc,cAAA,CAChC,CAAA,EACF,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,EAECE,GACCe,EAAA,IAACjC,EACC,CAAA,SAAAmC,OAAClC,EACC,CAAA,SAAA,CAAAgC,EAAAA,IAAC,MAAG,SAAc,gBAAA,CAAA,EAClBA,EAAAA,IAAC,KAAE,SAGH,wHAAA,CAAA,SACC/B,EACC,CAAA,SAAA,CAAA+B,EAAA,IAAC9B,EAAA,CACC,KAAK,SACL,QAAS,IAAMgB,EAAmB,EAAK,EACvC,SAAUH,EACX,SAAA,QAAA,CAED,EACAiB,EAAA,IAAC7B,EAAA,CACC,KAAK,SACL,QAAS2B,EACT,SAAUf,EAET,WAAe,gBAAkB,gBAAA,CACpC,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,CAAA,CAAA,CAEJ"}