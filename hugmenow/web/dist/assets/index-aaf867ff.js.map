{"version":3,"file":"index-aaf867ff.js","sources":["../../src/components/HugIconGallery/index.js","../../src/pages/HugGalleryDemo/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { HUG_ICONS, getHugTypeDescription } from '../../utils/hugIcons';\nimport HugIcon from '../HugIcon';\n\nconst GalleryContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  background-color: #ffffff;\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n\nconst GalleryHeader = styled.div`\n  margin-bottom: 16px;\n`;\n\nconst GalleryTitle = styled.h3`\n  font-size: 1.3rem;\n  color: #333;\n  margin: 0 0 4px 0;\n`;\n\nconst GalleryDescription = styled.p`\n  font-size: 0.9rem;\n  color: #666;\n  margin: 0;\n`;\n\nconst GalleryGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));\n  gap: 16px;\n  margin-bottom: ${props => props.showSelectedSection ? '16px' : '0'};\n  \n  @media (max-width: 480px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`;\n\nconst SelectedIconSection = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 16px;\n  margin-top: 16px;\n  background-color: #f5f5f5;\n  border-radius: 8px;\n`;\n\nconst SelectedIconTitle = styled.h4`\n  font-size: 1.1rem;\n  color: #333;\n  margin: 0 0 16px 0;\n  text-align: center;\n`;\n\nconst SelectedIconDetails = styled.div`\n  margin-top: 16px;\n  text-align: center;\n`;\n\nconst SelectedIconName = styled.h5`\n  font-size: 1.1rem;\n  color: #333;\n  margin: 0 0 8px 0;\n`;\n\nconst SelectedIconDescription = styled.p`\n  font-size: 0.9rem;\n  color: #666;\n  margin: 0;\n`;\n\n/**\n * Animation variants for the gallery items\n */\nconst galleryVariants = {\n  hidden: { opacity: 0 },\n  visible: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\nconst fadeInVariants = {\n  hidden: { opacity: 0, y: 20 },\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      type: 'spring',\n      stiffness: 300,\n      damping: 25\n    }\n  }\n};\n\n/**\n * HugIconGallery Component\n * Displays a gallery of all available hug icons with selection functionality\n */\nconst HugIconGallery = ({\n  /** Title for the gallery section */\n  title = 'Hug Types',\n  /** Description for the gallery */\n  description = 'Select a hug type to send',\n  /** Whether to show the selected icon section */\n  showSelectedSection = true,\n  /** Default selected hug type */\n  defaultSelectedType = 'standard',\n  /** Callback when a hug type is selected */\n  onSelectHugType\n}) => {\n  const [selectedType, setSelectedType] = useState(defaultSelectedType);\n  \n  // Update selected type if default changes\n  useEffect(() => {\n    setSelectedType(defaultSelectedType);\n  }, [defaultSelectedType]);\n  \n  // Handle icon selection\n  const handleSelectIcon = (type) => {\n    setSelectedType(type);\n    if (onSelectHugType) {\n      onSelectHugType(type);\n    }\n  };\n  \n  // Get the description for the selected hug type\n  const selectedDescription = getHugTypeDescription(selectedType);\n  \n  return (\n    <GalleryContainer data-testid=\"hug-icon-gallery\">\n      <GalleryHeader>\n        <GalleryTitle>{title}</GalleryTitle>\n        <GalleryDescription>{description}</GalleryDescription>\n      </GalleryHeader>\n      \n      <motion.div\n        variants={galleryVariants}\n        initial=\"hidden\"\n        animate=\"visible\"\n      >\n        <GalleryGrid showSelectedSection={showSelectedSection}>\n          {Object.keys(HUG_ICONS).map((hugType) => (\n            <motion.div key={hugType} variants={fadeInVariants}>\n              <HugIcon\n                type={hugType}\n                showLabel\n                showBackground\n                isSelected={selectedType === hugType}\n                margin=\"8px 0\"\n                onClick={() => handleSelectIcon(hugType)}\n              />\n            </motion.div>\n          ))}\n        </GalleryGrid>\n      </motion.div>\n      \n      {showSelectedSection && (\n        <SelectedIconSection\n          initial={{ opacity: 0, height: 0 }}\n          animate={{ opacity: 1, height: 'auto' }}\n          transition={{ duration: 0.3 }}\n        >\n          <SelectedIconTitle>Selected Hug Type</SelectedIconTitle>\n          <HugIcon\n            type={selectedType}\n            size=\"lg\"\n            showBackground\n            isSelected\n          />\n          <SelectedIconDetails>\n            <SelectedIconName>{HUG_ICONS[selectedType]?.name}</SelectedIconName>\n            <SelectedIconDescription>{selectedDescription}</SelectedIconDescription>\n          </SelectedIconDetails>\n        </SelectedIconSection>\n      )}\n    </GalleryContainer>\n  );\n};\n\nHugIconGallery.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  showSelectedSection: PropTypes.bool,\n  defaultSelectedType: PropTypes.oneOf(Object.keys(HUG_ICONS)),\n  onSelectHugType: PropTypes.func\n};\n\nexport default HugIconGallery;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { Link, useNavigate } from 'react-router-dom';\nimport SimpleLayout from '../../layouts/SimpleLayout';\nimport HugIconGallery from '../../components/HugIconGallery';\nimport HugIcon from '../../components/HugIcon';\nimport { getHugTypes, getHugTypeColor, getHugTypeDisplayName } from '../../utils/hugIcons';\n\n// Styled components\nconst PageContainer = styled.div`\n  padding: 16px;\n  width: 100%;\n  max-width: 800px;\n  margin: 0 auto;\n`;\n\nconst PageHeader = styled.div`\n  margin-bottom: 24px;\n`;\n\nconst Title = styled.h1`\n  font-size: 2rem;\n  color: #333;\n  margin: 0 0 8px 0;\n`;\n\nconst Description = styled.p`\n  font-size: 1rem;\n  color: #666;\n  margin: 0 0 16px 0;\n`;\n\nconst Section = styled.div`\n  margin-bottom: 32px;\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.5rem;\n  color: #333;\n  margin: 0 0 16px 0;\n`;\n\nconst CardGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));\n  gap: 16px;\n  margin-bottom: 24px;\n  \n  @media (max-width: 480px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n\nconst IconCard = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 16px;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n  border: 2px solid ${props => props.isSelected ? props.color : 'transparent'};\n`;\n\nconst IconName = styled.h3`\n  font-size: 0.9rem;\n  color: #333;\n  margin: 8px 0 0 0;\n  text-align: center;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 24px;\n`;\n\nconst Button = styled.button`\n  padding: 12px 24px;\n  background-color: #4a90e2;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  \n  &:hover {\n    background-color: #3a80d2;\n  }\n  \n  &:active {\n    transform: translateY(1px);\n  }\n`;\n\n// Animation variants\nconst cardVariants = {\n  hover: {\n    scale: 1.05,\n    boxShadow: '0 5px 15px rgba(0,0,0,0.1)',\n    transition: { type: 'spring', stiffness: 300, damping: 15 }\n  },\n  tap: {\n    scale: 0.98,\n    transition: { type: 'spring', stiffness: 300, damping: 15 }\n  }\n};\n\n/**\n * HugGalleryDemo page\n * Demonstrates the different hug icons and how they can be used\n */\nconst HugGalleryDemo = () => {\n  const navigate = useNavigate();\n  const [selectedHugType, setSelectedHugType] = useState('standard');\n  \n  // Handle hug type selection\n  const handleSelectHugType = (type) => {\n    setSelectedHugType(type);\n  };\n  \n  // Go back to the dashboard\n  const handleBackToDashboard = () => {\n    navigate('/dashboard');\n  };\n  \n  return (\n    <SimpleLayout>\n      <PageContainer>\n        <PageHeader>\n          <Title>Hug Icon Gallery</Title>\n          <Description>\n            Explore the different types of hugs available in the HugMeNow app.\n            These icons are used throughout the application to represent different\n            types of virtual hugs that you can send to friends and loved ones.\n          </Description>\n        </PageHeader>\n        \n        <Section>\n          <SectionTitle>Individual Hug Icons</SectionTitle>\n          <CardGrid>\n            {getHugTypes().map((hugType) => (\n              <IconCard \n                key={hugType}\n                whileHover=\"hover\"\n                whileTap=\"tap\"\n                variants={cardVariants}\n                isSelected={selectedHugType === hugType}\n                color={getHugTypeColor(hugType)}\n                onClick={() => handleSelectHugType(hugType)}\n              >\n                <HugIcon \n                  type={hugType} \n                  size=\"md\" \n                  showBackground={false}\n                />\n                <IconName>{getHugTypeDisplayName(hugType)}</IconName>\n              </IconCard>\n            ))}\n          </CardGrid>\n        </Section>\n        \n        <Section>\n          <SectionTitle>Hug Icon Gallery Component</SectionTitle>\n          <HugIconGallery \n            title=\"Select a Hug Type\"\n            description=\"Choose the type of hug you want to send\"\n            defaultSelectedType={selectedHugType}\n            onSelectHugType={handleSelectHugType}\n          />\n        </Section>\n        \n        <ButtonContainer>\n          <Link to=\"/login\">\n            <Button>\n              Sign In to HugMeNow\n            </Button>\n          </Link>\n        </ButtonContainer>\n      </PageContainer>\n    </SimpleLayout>\n  );\n};\n\nexport default HugGalleryDemo;"],"names":["GalleryContainer","styled","GalleryHeader","GalleryTitle","GalleryDescription","GalleryGrid","props","SelectedIconSection","motion","SelectedIconTitle","SelectedIconDetails","SelectedIconName","SelectedIconDescription","galleryVariants","fadeInVariants","HugIconGallery","title","description","showSelectedSection","defaultSelectedType","onSelectHugType","selectedType","setSelectedType","useState","useEffect","handleSelectIcon","type","selectedDescription","getHugTypeDescription","jsxs","jsx","HUG_ICONS","hugType","HugIcon","_a","PropTypes","PageContainer","PageHeader","Title","Description","Section","SectionTitle","CardGrid","IconCard","IconName","ButtonContainer","Button","cardVariants","HugGalleryDemo","useNavigate","selectedHugType","setSelectedHugType","handleSelectHugType","SimpleLayout","getHugTypes","getHugTypeColor","getHugTypeDisplayName","Link"],"mappings":"qNAOA,MAAMA,EAAmBC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAU1BC,EAAgBD,EAAO;AAAA;AAAA,EAIvBE,EAAeF,EAAO;AAAA;AAAA;AAAA;AAAA,EAMtBG,EAAqBH,EAAO;AAAA;AAAA;AAAA;AAAA,EAM5BI,EAAcJ,EAAO;AAAA;AAAA;AAAA;AAAA,mBAICK,GAAAA,EAAM,oBAAsB,OAAS,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA,EAO9DC,EAAsBN,EAAOO,EAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUvCC,EAAoBR,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAO3BS,EAAsBT,EAAO;AAAA;AAAA;AAAA,EAK7BU,EAAmBV,EAAO;AAAA;AAAA;AAAA;AAAA,EAM1BW,EAA0BX,EAAO;AAAA;AAAA;AAAA;AAAA,EASjCY,EAAkB,CACtB,OAAQ,CAAE,QAAS,CAAE,EACrB,QAAS,CACP,QAAS,EACT,WAAY,CACV,gBAAiB,EACnB,CACF,CACF,EAEMC,EAAiB,CACrB,OAAQ,CAAE,QAAS,EAAG,EAAG,EAAG,EAC5B,QAAS,CACP,QAAS,EACT,EAAG,EACH,WAAY,CACV,KAAM,SACN,UAAW,IACX,QAAS,EACX,CACF,CACF,EAMMC,EAAiB,CAAC,CAEtB,MAAAC,EAAQ,YAER,YAAAC,EAAc,4BAEd,oBAAAC,EAAsB,GAEtB,oBAAAC,EAAsB,WAEtB,gBAAAC,CACF,IAAM,OACJ,KAAM,CAACC,EAAcC,CAAe,EAAIC,WAASJ,CAAmB,EAGpEK,EAAAA,UAAU,IAAM,CACdF,EAAgBH,CAAmB,CAAA,EAClC,CAACA,CAAmB,CAAC,EAGlB,MAAAM,EAAoBC,GAAS,CACjCJ,EAAgBI,CAAI,EAChBN,GACFA,EAAgBM,CAAI,CACtB,EAIIC,EAAsBC,EAAsBP,CAAY,EAG5D,OAAAQ,EAAA,KAAC7B,EAAiB,CAAA,cAAY,mBAC5B,SAAA,CAAA6B,OAAC3B,EACC,CAAA,SAAA,CAAA4B,EAAAA,IAAC3B,GAAc,SAAMa,CAAA,CAAA,EACrBc,EAAAA,IAAC1B,GAAoB,SAAYa,CAAA,CAAA,CAAA,EACnC,EAEAa,EAAA,IAACtB,EAAO,IAAP,CACC,SAAUK,EACV,QAAQ,SACR,QAAQ,UAER,SAACiB,EAAAA,IAAAzB,EAAA,CAAY,oBAAAa,EACV,SAAA,OAAO,KAAKa,CAAS,EAAE,IAAKC,GAC1BF,EAAA,IAAAtB,EAAO,IAAP,CAAyB,SAAUM,EAClC,SAAAgB,EAAA,IAACG,EAAA,CACC,KAAMD,EACN,UAAS,GACT,eAAc,GACd,WAAYX,IAAiBW,EAC7B,OAAO,QACP,QAAS,IAAMP,EAAiBO,CAAO,CAAA,CAAA,GAP1BA,CASjB,CACD,EACH,CAAA,CACF,EAECd,GACCW,EAAA,KAACtB,EAAA,CACC,QAAS,CAAE,QAAS,EAAG,OAAQ,CAAE,EACjC,QAAS,CAAE,QAAS,EAAG,OAAQ,MAAO,EACtC,WAAY,CAAE,SAAU,EAAI,EAE5B,SAAA,CAAAuB,EAAAA,IAACrB,GAAkB,SAAiB,mBAAA,CAAA,EACpCqB,EAAA,IAACG,EAAA,CACC,KAAMZ,EACN,KAAK,KACL,eAAc,GACd,WAAU,EAAA,CACZ,SACCX,EACC,CAAA,SAAA,CAAAoB,EAAA,IAACnB,EAAkB,CAAA,UAAAuB,EAAAH,EAAUV,CAAY,IAAtB,YAAAa,EAAyB,KAAK,EACjDJ,EAAAA,IAAClB,GAAyB,SAAoBe,CAAA,CAAA,CAAA,EAChD,CAAA,CAAA,CACF,CAEJ,CAAA,CAAA,CAEJ,EAEAZ,EAAe,UAAY,CACzB,MAAOoB,EAAU,OACjB,YAAaA,EAAU,OACvB,oBAAqBA,EAAU,KAC/B,oBAAqBA,EAAU,MAAM,OAAO,KAAKJ,CAAS,CAAC,EAC3D,gBAAiBI,EAAU,IAC7B,ECzLA,MAAMC,EAAgBnC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAOvBoC,EAAapC,EAAO;AAAA;AAAA,EAIpBqC,EAAQrC,EAAO;AAAA;AAAA;AAAA;AAAA,EAMfsC,EAActC,EAAO;AAAA;AAAA;AAAA;AAAA,EAMrBuC,EAAUvC,EAAO;AAAA;AAAA,EAIjBwC,EAAexC,EAAO;AAAA;AAAA;AAAA;AAAA,EAMtByC,EAAWzC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWlB0C,EAAW1C,EAAOO,EAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBASHF,GAAAA,EAAM,WAAaA,EAAM,MAAQ,aAAa;AAAA,EAGvEsC,EAAW3C,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAOlB4C,EAAkB5C,EAAO;AAAA;AAAA;AAAA;AAAA,EAMzB6C,EAAS7C,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqBhB8C,EAAe,CACnB,MAAO,CACL,MAAO,KACP,UAAW,6BACX,WAAY,CAAE,KAAM,SAAU,UAAW,IAAK,QAAS,EAAG,CAC5D,EACA,IAAK,CACH,MAAO,IACP,WAAY,CAAE,KAAM,SAAU,UAAW,IAAK,QAAS,EAAG,CAC5D,CACF,EAMMC,EAAiB,IAAM,CACVC,EAAY,EAC7B,KAAM,CAACC,EAAiBC,CAAkB,EAAI5B,WAAS,UAAU,EAG3D6B,EAAuB1B,GAAS,CACpCyB,EAAmBzB,CAAI,CAAA,EASvB,OAAAI,EAAAA,IAACuB,EACC,CAAA,SAAAxB,EAAAA,KAACO,EACC,CAAA,SAAA,CAAAP,OAACQ,EACC,CAAA,SAAA,CAAAP,EAAAA,IAACQ,GAAM,SAAgB,kBAAA,CAAA,EACvBR,EAAAA,IAACS,GAAY,SAIb,8MAAA,CAAA,CAAA,EACF,SAECC,EACC,CAAA,SAAA,CAAAV,EAAAA,IAACW,GAAa,SAAoB,sBAAA,CAAA,QACjCC,EACE,CAAA,SAAAY,EAAA,EAAc,IAAKtB,GAClBH,EAAA,KAACc,EAAA,CAEC,WAAW,QACX,SAAS,MACT,SAAUI,EACV,WAAYG,IAAoBlB,EAChC,MAAOuB,EAAgBvB,CAAO,EAC9B,QAAS,IAAMoB,EAAoBpB,CAAO,EAE1C,SAAA,CAAAF,EAAA,IAACG,EAAA,CACC,KAAMD,EACN,KAAK,KACL,eAAgB,EAAA,CAClB,EACCF,EAAA,IAAAc,EAAA,CAAU,SAAsBY,EAAAxB,CAAO,CAAE,CAAA,CAAA,CAAA,EAbrCA,CAeR,CAAA,EACH,CAAA,EACF,SAECQ,EACC,CAAA,SAAA,CAAAV,EAAAA,IAACW,GAAa,SAA0B,4BAAA,CAAA,EACxCX,EAAA,IAACf,EAAA,CACC,MAAM,oBACN,YAAY,0CACZ,oBAAqBmC,EACrB,gBAAiBE,CAAA,CACnB,CAAA,EACF,EAEAtB,EAAA,IAACe,EACC,CAAA,SAAAf,EAAAA,IAAC2B,EAAK,CAAA,GAAG,SACP,SAAC3B,EAAAA,IAAAgB,EAAA,CAAO,SAER,qBAAA,CAAA,CACF,CAAA,EACF,CAAA,CACF,CAAA,CACF,CAAA,CAEJ"}