sources:
  - name: PostgreSQL
    handler:
      postgraphile:
        connectionString: ${process.env.DATABASE_URL}
        schemaName: 'public'
        pgSettings:
          role: 'postgres'
        enableCors: true
        dynamicJson: true
        setofFunctionsContainNulls: false
        ignoreRBAC: false
        ignoreIndexes: true
        includeExtensionResources: false
        watch: false
        exportGqlSchemaPath: './generated-schema.graphql'
        appendPlugins:
          - 'postgraphile-plugin-connection-filter'

transforms:
  - namingConvention:
      typeNames: pascalCase
      enumValues: upperCase
      fieldNames: camelCase

# Generation of the SDK
documents:
  - graphql/**/*.graphql

# Output generation for TypeScript SDK
generate:
  - './src/generated/sdk.ts':
      plugins:
        - typescript
        - typescript-operations
        - typescript-resolvers
        - typescript-document-nodes

# Configuration for code generation
additionalResolvers:
  - './src/resolvers/**/*.ts'

# Serving configuration
serve:
  playground: true
  endpoint: '/graphql'
  cors: true